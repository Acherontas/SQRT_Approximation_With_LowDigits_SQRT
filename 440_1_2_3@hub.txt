voyeristic behaviours and others have fun 
ur number ,ur precision , ur sleep time , ur log ,ur automation 0 no 1 auto , ur bee auto 0 for no log 1 for log 
the approximation while loops times to run if -1 infinite loop will occur until other equations gets equal 
with main number 878946545465764654864654864564867703804880946297186674930916261888
will count the digit from 878946545465764654864654864564867703804880946297186674930916261888
with string of it 878946545465764654864654864564867703804880946297186674930916261888
66
 @ CDIS : with main number 878946545465764654864654864564867703804880946297186674930916261888
Main cdi 358
Secondary cdi 16
Secondary cdi 7
Exiting Secondary cdi 7
with sqrt of math 937521490668755099372400243128442.25

9 25 |34 16| 937521490668755099372400243128442.25  and main 878946545465764654864654864564867703804880946297186674930916261888
-------------------------------------------------------------------------
section_temp 0
section h inf
878946545465764654864654864564867703804880946297186674930916261888 / 34 ::== 25851368984287195731313378369554933657932357458839044788982906880
            ----->  | *2 51702737968574391462626756739109867315864714917678089577965813760
            ----->  /2 12925684492143597865656689184777466828966178729419522394491453440
                 --> 6462842246071798932828344592388733414483089364709761197245726720
                 --> 3231421123035899466414172296194366707241544682354880598622863360
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 267317311344706399159082486288808272084149382136973225630816534528 517027379685743914626267567391098.875
i insert 16707331959044149947442655393050387704898113104161873938199085056 129256844921435978656566891847774.71875
i insert 0 0
i insert 167073319590441499474426553930493540942899520116136285638230016 12925684492143597865656689184777.47265625
i insert 104420824744025937171516596206565571558895223640350577677433831424 323142112303589946641417229619436.8125
CDIS Start 
section_temp 0
section h inf
25851368984287195731313378369554933657932357458839044788982906880 / 16 ::== 1615710561517949733207086148097183353620772341177440299311431680
            ----->  | *2 3231421123035899466414172296194366707241544682354880598622863360
            ----->  /2 807855280758974866603543074048591676810386170588720149655715840
                 --> 403927640379487433301771537024295838405193085294360074827857920
                 --> 201963820189743716650885768512147919202596542647180037413928960
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 104420824744025937171516596206565571558895223640350577677433831424 323142112303589946641417229619436.8125
i insert 652630154650162107321978726291038077569836533845294154017792851968 807855280758974866603543074048592
i insert 0 0
i insert 6526301546501621073219787262910348222430951477521911104839614464 80785528075897486660354307404859.203125
i insert 40789384665635131707623670393189879848114783365330884626112053248 201963820189743716650885768512148
section_temp 0
section h inf
1615710561517949733207086148097183353620772341177440299311431680 / 7 ::== 230815794502564247601012306871026187715241583435038786077065216
            ----->  | *2 461631589005128495202024613742052375430483166870077572154130432
            ----->  /2 115407897251282123800506153435513093857620791717519393038532608
                 --> 57703948625641061900253076717756546928810395858759696519266304
                 --> 28851974312820530950126538358878273464405197929379848259633152
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 213103723967399871778605298380746608305627378823061119070032101376 461631589005128495202024613742052.125
i insert 13318982747962491986162831148796663019101711176441319941877006336 115407897251282123800506153435513.03125
i insert 0 0
i insert 133189827479624919861628311487959696934515488492230388387676160 11540789725128212380050615343551.302734375
i insert 83243642174765574913517694679978846605319941332963598659829628928 288519743128205309501265383588782.59375
CDIS End 
section_temp 0
section h inf
878946545465764654864654864564867703804880946297186674930916261888 / 16 ::== 54934159091610290929040929035304231487805059143574167183182266368
            ----->  | *2 109868318183220581858081858070608462975610118287148334366364532736
            ----->  /2 27467079545805145464520464517652115743902529571787083591591133184
                 --> 13733539772902572732260232258826057871951264785893541795795566592
                 --> 6866769886451286366130116129413028935975632392946770897897783296
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 12071047340409398337027318521478927826749389806486681733786763264 109868318183220581858081858070608.46875
i insert 75444045877558739606420740759243846225330334828585857037776191488 274670795458051454645204645176521.1875
i insert 0 0
i insert 754440458775587396064207407592432989171836862905417608361672704 27467079545805145464520464517652.1171875
i insert 471525286734742122540129629745274708227831513183785596745393635328 686676988645128636613011612941303
section_temp 0
section h inf
54934159091610290929040929035304231487805059143574167183182266368 / 358 ::== 153447371764274555667712092277386116605546044217203184707305472
            ----->  | *2 306894743528549111335424184554772233211092088434406369414610944
            ----->  /2 76723685882137277833856046138693058302773022108601592353652736
                 --> 38361842941068638916928023069346529151386511054300796176826368
                 --> 19180921470534319458464011534673264575693255527150398088413184
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 94184383605453936651690946923309271199385051652241757949984243712 306894743528549111335424184554772.3125
i insert 588652397534087104073068418270682944996156572826510987187401523200 767236858821372778338560461386930.75
i insert 0 0
i insert 5886523975340871040730684182706829449961565728265109871874015232 76723685882137277833856046138693.078125
i insert 36790774845880444004566776141917491379368551110787909200325378048 191809214705343194584640115346732.6875
removals 
reporing rt 4
section_temp 0
section h inf
25851368984287195731313378369554933657932357458839044788982906880 - 153447371764274555667712092277386116605546044217203184707305472 ::== 25697921612522921175645666277277546828273348786242803262380048384
            ----->  | *2 51395843225045842351291332554555093656546697572485606524760096768
            ----->  /2 12848960806261460587822833138638773414136674393121401631190024192
                 --> 6424480403130730293911416569319386707068337196560700815595012096
                 --> 3212240201565365146955708284659693353534168598280350407797506048
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 264153270081349061322507151007166701772263314609384578666482106368 513958432250458423512913325545550.875
i insert 16509579380084316332656696937947789560405233883687583502928183296 128489608062614605878228331386387.71875
i insert 0 0
i insert 165095793800843163326566969379459921903104352829249363648708608 12848960806261460587822833138638.771484375
i insert 103184871125526977079104355862174648800814185341507235136088834048 321224020156536514695570828465969.3125
section_temp 0
section h inf
1615710561517949733207086148097183353620772341177440299311431680 - 153447371764274555667712092277386116605546044217203184707305472 ::== 1462263189753675177539374055819797157787063782695899521060175872
            ----->  | *2 2924526379507350355078748111639594315574127565391799042120351744
            ----->  /2 731131594876837588769687027909898578893531891347949760530087936
                 --> 365565797438418794384843513954949289446765945673974880265043968
                 --> 182782898719209397192421756977474644723382972836987440132521984
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 85528545444343706349030353323713676918278997700762418501757435904 292452637950735035507874811163959.40625
i insert 534553409027148164681439708273211213441290667546359180730436681728 731131594876837588769687027909898.5
i insert 0 0
i insert 5345534090271481646814397082731995155615517614454421691532574720 73113159487683758876968702790989.8515625
i insert 33409588064196760292589981767075518298394233856613633270390718464 182782898719209397192421756977474.625
section_temp 0
section h inf
230815794502564247601012306871026187715241583435038786077065216 - 153447371764274555667712092277386116605546044217203184707305472 ::== 77368422738289691933300214593640071109695539217835601369759744
            ----->  | *2 154736845476579383866600429187280142219391078435671202739519488
            ----->  /2 38684211369144845966650107296820035554847769608917800684879872
                 --> 19342105684572422983325053648410017777423884804458900342439936
                 --> 9671052842286211491662526824205008888711942402229450171219968
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 23943491348042805730251211702839728117470969817689364410895695872 154736845476579383866600429187280.125
i insert 149646820925267535814070073142748309607747762958164338045020536832 386842113691448459666501072968200.3125
i insert 0 0
i insert 1496468209252675358140700731427483007341935613605585275680980992 38684211369144845966650107296820.03125
i insert 9352926307829220988379379571421769350484235184885271127813783552 96710528422862114916625268242050.078125
section_temp 0
section h inf
54934159091610290929040929035304231487805059143574167183182266368 - 153447371764274555667712092277386116605546044217203184707305472 ::== 54780711719846016373373216943026849728748451383895531643392229376
            ----->  | *2 109561423439692032746746433886053699457496902767791063286784458752
            ----->  /2 27390355859923008186686608471513424864374225691947765821696114688
                 --> 13695177929961504093343304235756712432187112845973882910848057344
                 --> 6847588964980752046671652117878356216093556422986941455424028672
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 12003705506131498772321359494428711719550676944401203819951685632 109561423439692032746746433886053.671875
i insert 75023159413321867327008496840180264931090927939299438125738098688 273903558599230081866866084715134.1875
i insert 0 0
i insert 750231594133218673270084968401780775999802341294671555643572224 27390355859923008186686608471513.41796875
i insert 468894746333261670793803105251126653284017099164162685292456706048 684758896498075204667165211787835.5
ending sqti reporting the results 
reporting size of xl vector 44 64
entering amfidromi loop of xl vector  with first 
 of 517027379685743914626267567391098.875 ^2 ::== 267317311344706399159082486288809164510171942810471879309873119232 as intpart 267317311344706399159082486288808272084149382136973225630816534528  diafora 611629234121058255705572378276059431720731564160213449300099727360 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 129256844921435978656566891847774.71875 ^2 ::== 16707331959044149947442655393050572781885746425654492456867069952 as intpart 16707331959044149947442655393050387704898113104161873938199085056  diafora 862239213506720504917212209171817257788055222694472332144369729536 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 12925684492143597865656689184777.47265625 ^2 ::== 167073319590441499474426553930505761886967345390210089792569344 as intpart 167073319590441499474426553930493540942899520116136285638230016  diafora 878779472146174213365180438010937173383228396387021388850569150464 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 323142112303589946641417229619436.8125 ^2 ::== 104420824744025937171516596206566098901544918583781600305967267840 as intpart 104420824744025937171516596206565571558895223640350577677433831424  diafora 774525720721738717693138268358302091681166515353495249358979858432 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 323142112303589946641417229619436.8125 ^2 ::== 104420824744025937171516596206566098901544918583781600305967267840 as intpart 104420824744025937171516596206565571558895223640350577677433831424  diafora 774525720721738717693138268358302091681166515353495249358979858432 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 807855280758974866603543074048592 ^2 ::== 652630154650162107321978726291038077569836533845294154017792851968 as intpart 652630154650162107321978726291038077569836533845294154017792851968  diafora 226316390815602547542676138273829626235044412451892520913123409920 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 80785528075897486660354307404859.203125 ^2 ::== 6526301546501621073219787262910381181346557411486350019122954240 as intpart 6526301546501621073219787262910348222430951477521911104839614464  diafora 872420243919263033791435077301957353047148794363205960832670236672 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 201963820189743716650885768512148 ^2 ::== 40789384665635131707623670393189879848114783365330884626112053248 as intpart 40789384665635131707623670393189879848114783365330884626112053248  diafora 838157160800129523157031194171677849309778167496443820238868316160 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 461631589005128495202024613742052.125 ^2 ::== 213103723967399871778605298380746689435265793429742814859037245440 as intpart 213103723967399871778605298380746608305627378823061119070032101376  diafora 665842821498364783086049566184121136064072774777466403755386732544 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 115407897251282123800506153435513.03125 ^2 ::== 13318982747962491986162831148796668089704112089358925928689827840 as intpart 13318982747962491986162831148796663019101711176441319941877006336  diafora 865627562717802162878492033416071033179875633751368946008820023296 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 11540789725128212380050615343551.302734375 ^2 ::== 133189827479624919861628311487966688819857372320023018641293312 as intpart 133189827479624919861628311487959696934515488492230388387676160  diafora 878813355638285029944793236253379800379748856564940220357119311872 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 288519743128205309501265383588782.59375 ^2 ::== 83243642174765574913517694679979191406283203411360805763101491200 as intpart 83243642174765574913517694679978846605319941332963598659829628928  diafora 795702903290999079951137169884888877481970608615893500218337918976 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 109868318183220581858081858070608.46875 ^2 ::== 12071047340409398337027318521479030506448008293068202966746398720 as intpart 12071047340409398337027318521478927826749389806486681733786763264  diafora 866875498125355256527627546043388746822167751241423758772955774976 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 274670795458051454645204645176521.1875 ^2 ::== 75444045877558739606420740759243947637378353086937976774032621568 as intpart 75444045877558739606420740759243846225330334828585857037776191488  diafora 803502499588205915258234123805623857579550611468600817893140070400 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 27467079545805145464520464517652.1171875 ^2 ::== 754440458775587396064207407592439406653000518316762685421649920 as intpart 754440458775587396064207407592432989171836862905417608361672704  diafora 878192105006989067468590657157275238569846966128695856750166802432 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 686676988645128636613011612941303 ^2 ::== 471525286734742122540129629745274708227831513183785596745393635328 as intpart 471525286734742122540129629745274708227831513183785596745393635328  diafora 407421258731022532324525234819592995577049433113401078185522626560 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 306894743528549111335424184554772.3125 ^2 ::== 94184383605453936651690946923309463882276286343110785448871460864 as intpart 94184383605453936651690946923309271199385051652241757949984243712  diafora 784762161860310718212963917641558432605495894644944916980932018176 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 767236858821372778338560461386930.75 ^2 ::== 588652397534087104073068418270684080811094377320054728233473540096 as intpart 588652397534087104073068418270682944996156572826510987187401523200  diafora 290294147931677550791586446294184758808724373470675687743514738688 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 76723685882137277833856046138693.078125 ^2 ::== 5886523975340871040730684182706841492642267896444424090554466304 as intpart 5886523975340871040730684182706829449961565728265109871874015232  diafora 873060021490423783823924180382160854072509776917251141111790960640 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 191809214705343194584640115346732.6875 ^2 ::== 36790774845880444004566776141917755050693398582503420514592096256 as intpart 36790774845880444004566776141917491379368551110787909200325378048  diafora 842155770619884210860088088422950176931295588795975523822901133312 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 513958432250458423512913325545550.875 ^2 ::== 264153270081349061322507151007167594198285875282883232345538691072 as intpart 264153270081349061322507151007166701772263314609384578666482106368  diafora 614793275384415593542147713557701002032617631687802096264434155520 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 128489608062614605878228331386387.71875 ^2 ::== 16509579380084316332656696937947974637392867205180202021596168192 as intpart 16509579380084316332656696937947789560405233883687583502928183296  diafora 862436966085680338531998167626919850861945701002029016592827809792 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 12848960806261460587822833138638.771484375 ^2 ::== 165095793800843163326566969379479748750773547479732148022280192 as intpart 165095793800843163326566969379459921903104352829249363648708608  diafora 878781449671963811701328297595488236633600971889170535757996097536 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 321224020156536514695570828465969.3125 ^2 ::== 103184871125526977079104355862174851624910221858211474608601694208 as intpart 103184871125526977079104355862174648800814185341507235136088834048  diafora 775761674340237677785550508702693095568885968259020287689329999872 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 292452637950735035507874811163959.40625 ^2 ::== 85528545444343706349030353323713910165989439694972293895147225088 as intpart 85528545444343706349030353323713676918278997700762418501757435904  diafora 793418000021420948515624511241154016745397146770589044455533182976 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 731131594876837588769687027909898.5 ^2 ::== 534553409027148164681439708273211943608036399006494442831482978304 as intpart 534553409027148164681439708273211213441290667546359180730436681728  diafora 344393136438616490183215156291656490363590278750827494200479580160 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 73113159487683758876968702790989.8515625 ^2 ::== 5345534090271481646814397082732119385374339980935768368446701568 as intpart 5345534090271481646814397082731995155615517614454421691532574720  diafora 873601011375493173217840467482135735269928033475549684670151000064 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 182782898719209397192421756977474.625 ^2 ::== 33409588064196760292589981767075746475502274937905902676967686144 as intpart 33409588064196760292589981767075518298394233856613633270390718464  diafora 845536957401567894572064882797792251424317924308501919489092222976 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 154736845476579383866600429187280.125 ^2 ::== 23943491348042805730251211702839766146988976664571409311991857152 as intpart 23943491348042805730251211702839728117470969817689364410895695872  diafora 855003054117721849134403652862027980758012377392414916506833387520 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 386842113691448459666501072968200.3125 ^2 ::== 149646820925267535814070073142748532714253403126539001464784683008 as intpart 149646820925267535814070073142748309607747762958164338045020536832  diafora 729299724540497119050584791422119394197133183339022336885895725056 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 38684211369144845966650107296820.03125 ^2 ::== 1496468209252675358140700731427485384186811041535713081999491072 as intpart 1496468209252675358140700731427483007341935613605585275680980992  diafora 877450077256511979506514163833440150126018047959791956214031581184 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 96710528422862114916625268242050.078125 ^2 ::== 9352926307829220988379379571421783294640837695408687591549042688 as intpart 9352926307829220988379379571421769350484235184885271127813783552  diafora 869593619157935433876275484993445939524999112025219009789915299840 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 109561423439692032746746433886053.671875 ^2 ::== 12003705506131498772321359494428858767020303419011777437523509248 as intpart 12003705506131498772321359494428711719550676944401203819951685632  diafora 866942839959633156092333505070438960394065263647050433693384441856 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 273903558599230081866866084715134.1875 ^2 ::== 75023159413321867327008496840180366343138946197651557861994528768 as intpart 75023159413321867327008496840180264931090927939299438125738098688  diafora 803923386052442787537646367724687449014994820183722448778803806208 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 27390355859923008186686608471513.41796875 ^2 ::== 750231594133218673270084968401803672938768963688236089845219328 as intpart 750231594133218673270084968401780775999802341294671555643572224  diafora 878196313871631436191384779596465937765319371609058795774447452160 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 684758896498075204667165211787835.5 ^2 ::== 468894746333261670793803105251127383450762830624297947393503002624 as intpart 468894746333261670793803105251126653284017099164162685292456706048  diafora 410051799132502984070851759313741050520863847133023989638459555840 from 878946545465764654864654864564867703804880946297186674930916261888
the size of xpl vector is 44 64
 of 807855280758974866603543074048592 ^2 ::== 652630154650162107321978726291038077569836533845294154017792851968 as intpart 652630154650162107321978726291038077569836533845294154017792851968  diafora 226316390815602547542676138273829626235044412451892520913123409920 from 878946545465764654864654864564867703804880946297186674930916261888

-------------------------------------------------------------------------

9 |25| 34 |16| 937521490668755099372400243128442.25  and main 878946545465764654864654864564867703804880946297186674930916261888
-------------------------------------------------------------------------
section_temp 0
section h inf
878946545465764654864654864564867703804880946297186674930916261888 / 25 ::== 35157861818630586194586194582594708760667525961437579715654189056
            ----->  | *2 70315723637261172389172389165189417521335051922875159431308378112
            ----->  /2 17578930909315293097293097291297354380333762980718789857827094528
                 --> 8789465454657646548646548645648677190166881490359394928913547264
                 --> 4394732727328823274323274322824338595083440745179697464456773632
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 494430099063168955884638966639780781251484444178683149519712944128 703157236372611723891723891651894.25
i insert 30901881191448059742789935414986126427736146721969093293346127872 175789309093152930972930972912973.5625
i insert 0 0
i insert 309018811914480597427899354149850685733102562645335442945212416 17578930909315293097293097291297.35546875
i insert 193136757446550373392437096343663717371603193925615137472393510912 439473272732882327432327432282433.875
CDIS Start 
section_temp 0
section h inf
35157861818630586194586194582594708760667525961437579715654189056 / 16 ::== 2197366363664411637161637161412169297541720372589848732228386816
            ----->  | *2 4394732727328823274323274322824338595083440745179697464456773632
            ----->  /2 1098683181832205818580818580706084648770860186294924366114193408
                 --> 549341590916102909290409290353042324385430093147462183057096704
                 --> 274670795458051454645204645176521162192715046573731091528548352
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 193136757446550373392437096343663717371603193925615137472393510912 439473272732882327432327432282433.875
i insert 12071047340409398337027318521478927826749389806486681733786763264 109868318183220581858081858070608.46875
i insert 0 0
i insert 120710473404093983370273185214771690407697356524564426516332544 10986831818322058185808185807060.84765625
i insert 75444045877558739606420740759243846225330334828585857037776191488 274670795458051454645204645176521.1875
section_temp 0
section h inf
2197366363664411637161637161412169297541720372589848732228386816 / 7 ::== 313909480523487376737376737344595602616222551189358734097776640
            ----->  | *2 627818961046974753474753474689191205232445102378717468195553280
            ----->  /2 156954740261743688368688368672297801308111275594679367048888320
                 --> 78477370130871844184344184336148900654055637797339683524444160
                 --> 39238685065435922092172092168074450327027818898669841762222080
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 394156647850102802841708359885029262079561750489313303545363038208 627818961046974753474753474689191
i insert 24634790490631425177606772492814093096960966954913403084788989952 156954740261743688368688368672297.75
i insert 0 0
i insert 246347904906314251776067724928118959415581213763032589239582720 15695474026174368836868836867229.775390625
i insert 153967440566446407360042328080089254432811254580405153730396160000 392386850654359220921720921680744.375
CDIS End 
section_temp 0
section h inf
878946545465764654864654864564867703804880946297186674930916261888 / 16 ::== 54934159091610290929040929035304231487805059143574167183182266368
            ----->  | *2 109868318183220581858081858070608462975610118287148334366364532736
            ----->  /2 27467079545805145464520464517652115743902529571787083591591133184
                 --> 13733539772902572732260232258826057871951264785893541795795566592
                 --> 6866769886451286366130116129413028935975632392946770897897783296
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 12071047340409398337027318521478927826749389806486681733786763264 109868318183220581858081858070608.46875
i insert 75444045877558739606420740759243846225330334828585857037776191488 274670795458051454645204645176521.1875
i insert 0 0
i insert 754440458775587396064207407592432989171836862905417608361672704 27467079545805145464520464517652.1171875
i insert 471525286734742122540129629745274708227831513183785596745393635328 686676988645128636613011612941303
section_temp 0
section h inf
54934159091610290929040929035304231487805059143574167183182266368 / 358 ::== 153447371764274555667712092277386116605546044217203184707305472
            ----->  | *2 306894743528549111335424184554772233211092088434406369414610944
            ----->  /2 76723685882137277833856046138693058302773022108601592353652736
                 --> 38361842941068638916928023069346529151386511054300796176826368
                 --> 19180921470534319458464011534673264575693255527150398088413184
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 94184383605453936651690946923309271199385051652241757949984243712 306894743528549111335424184554772.3125
i insert 588652397534087104073068418270682944996156572826510987187401523200 767236858821372778338560461386930.75
i insert 0 0
i insert 5886523975340871040730684182706829449961565728265109871874015232 76723685882137277833856046138693.078125
i insert 36790774845880444004566776141917491379368551110787909200325378048 191809214705343194584640115346732.6875
removals 
reporing rt 4
section_temp 0
section h inf
35157861818630586194586194582594708760667525961437579715654189056 - 153447371764274555667712092277386116605546044217203184707305472 ::== 35004414446866311638918482490317321931008517288841338189051330560
            ----->  | *2 70008828893732623277836964980634643862017034577682676378102661120
            ----->  /2 17502207223433155819459241245158660965504258644420669094525665280
                 --> 8751103611716577909729620622579330482752129322210334547262832640
                 --> 4375551805858288954864810311289665241376064661105167273631416320
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 490123612307193180085177049782658993438823837908112743912131526656 700088288937326232778369649806346.5
i insert 30632725769199573755323565611416014689444858830058442942872289280 175022072234331558194592412451586.625
i insert 0 0
i insert 306327257691995737553235656114139127662933553971820862218698752 17502207223433155819459241245158.662109375
i insert 191454536057497335970772285071350960149691524025005293634647490560 437555180585828895486481031128966.5625
section_temp 0
section h inf
2197366363664411637161637161412169297541720372589848732228386816 - 153447371764274555667712092277386116605546044217203184707305472 ::== 2043918991900137081493925069134783101708011814108307953977131008
            ----->  | *2 4087837983800274162987850138269566203416023628216615907954262016
            ----->  /2 1021959495950068540746962534567391550854005907054153976988565504
                 --> 510979747975034270373481267283695775427002953527076988494282752
                 --> 255489873987517135186740633641847887713501476763538494247141376
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 167104193818002905301909718614061223941506237780031884798346657792 408783798380027416298785013826956.6875
i insert 10444012113625181581369357413378826496344139861251992799896666112 102195949595006854074696253456739.171875
i insert 0 0
i insert 104440121136251815813693574133769870560950461861260834900017152 10219594959500685407469625345673.91796875
i insert 65275075710157384883558483833617410804380228258715254162009882624 255489873987517135186740633641847.9375
section_temp 0
section h inf
313909480523487376737376737344595602616222551189358734097776640 - 153447371764274555667712092277386116605546044217203184707305472 ::== 160462108759212821069664645067209486010676506972155549390471168
            ----->  | *2 320924217518425642139329290134418972021353013944311098780942336
            ----->  /2 80231054379606410534832322533604743005338253486077774695235584
                 --> 40115527189803205267416161266802371502669126743038887347617792
                 --> 20057763594901602633708080633401185751334563371519443673808896
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 102992353389813775821338061110683763397173726894985079077902221312 320924217518425642139329290134418.9375
i insert 643702208686336098883362881941776708105944766862372106948747198464 802310543796064105348323225336047.375
i insert 0 0
i insert 6437022086863360988833628819417654716510243438369572401715347456 80231054379606410534832322533604.734375
i insert 40231388042896006180210180121360745091079894066759503462340231168 200577635949016026337080806334011.84375
section_temp 0
section h inf
54934159091610290929040929035304231487805059143574167183182266368 - 153447371764274555667712092277386116605546044217203184707305472 ::== 54780711719846016373373216943026849728748451383895531643392229376
            ----->  | *2 109561423439692032746746433886053699457496902767791063286784458752
            ----->  /2 27390355859923008186686608471513424864374225691947765821696114688
                 --> 13695177929961504093343304235756712432187112845973882910848057344
                 --> 6847588964980752046671652117878356216093556422986941455424028672
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 12003705506131498772321359494428711719550676944401203819951685632 109561423439692032746746433886053.671875
i insert 75023159413321867327008496840180264931090927939299438125738098688 273903558599230081866866084715134.1875
i insert 0 0
i insert 750231594133218673270084968401780775999802341294671555643572224 27390355859923008186686608471513.41796875
i insert 468894746333261670793803105251126653284017099164162685292456706048 684758896498075204667165211787835.5
ending sqti reporting the results 
reporting size of xl vector 44 64
entering amfidromi loop of xl vector  with first 
 of 703157236372611723891723891651894.25 ^2 ::== 494430099063168955884638966639781186899676517212091628464738664448 as intpart 494430099063168955884638966639780781251484444178683149519712944128  diafora 384516446402595698980015897925086922553396502118503525411203317760 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 175789309093152930972930972912973.5625 ^2 ::== 30901881191448059742789935414986324181229782325755726779046166528 as intpart 30901881191448059742789935414986126427736146721969093293346127872  diafora 848044664274316595121864929149881612871361605965640823545259884544 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 17578930909315293097293097291297.35546875 ^2 ::== 309018811914480597427899354149863203782779816410675222889365504 as intpart 309018811914480597427899354149850685733102562645335442945212416  diafora 878637526653850174267226965210717839650360216309603948585499492352 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 439473272732882327432327432282433.875 ^2 ::== 193136757446550373392437096343664488103168132689091247467942379520 as intpart 193136757446550373392437096343663717371603193925615137472393510912  diafora 685809788019214281472217768221203986433277752371571537458522750976 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 439473272732882327432327432282433.875 ^2 ::== 193136757446550373392437096343664488103168132689091247467942379520 as intpart 193136757446550373392437096343663717371603193925615137472393510912  diafora 685809788019214281472217768221203986433277752371571537458522750976 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 109868318183220581858081858070608.46875 ^2 ::== 12071047340409398337027318521479030506448008293068202966746398720 as intpart 12071047340409398337027318521478927826749389806486681733786763264  diafora 866875498125355256527627546043388746822167751241423758772955774976 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 10986831818322058185808185807060.84765625 ^2 ::== 120710473404093983370273185214790328832928837209983307730649088 as intpart 120710473404093983370273185214771690407697356524564426516332544  diafora 878825834992360560881284591379652961290244094818504429326959640576 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 274670795458051454645204645176521.1875 ^2 ::== 75444045877558739606420740759243947637378353086937976774032621568 as intpart 75444045877558739606420740759243846225330334828585857037776191488  diafora 803502499588205915258234123805623857579550611468600817893140070400 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 627818961046974753474753474689191 ^2 ::== 394156647850102802841708359885029262079561750489313303545363038208 as intpart 394156647850102802841708359885029262079561750489313303545363038208  diafora 484789897615661852022946504679838401160499988504532523491050651648 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 156954740261743688368688368672297.75 ^2 ::== 24634790490631425177606772492814328879972609405582081471585189888 as intpart 24634790490631425177606772492814093096960966954913403084788989952  diafora 854311754975133229687048092072053585354907974777685241912063164416 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 15695474026174368836868836867229.775390625 ^2 ::== 246347904906314251776067724928143282461473092914673807232335872 as intpart 246347904906314251776067724928118959415581213763032589239582720  diafora 878700197560858340612878796839939601562607655593198874579450200064 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 392386850654359220921720921680744.375 ^2 ::== 153967440566446407360042328080089558668955309355461512939165450240 as intpart 153967440566446407360042328080089254432811254580405153730396160000  diafora 724979104899318247504612536484778489936888899020122369095022673920 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 109868318183220581858081858070608.46875 ^2 ::== 12071047340409398337027318521479030506448008293068202966746398720 as intpart 12071047340409398337027318521478927826749389806486681733786763264  diafora 866875498125355256527627546043388746822167751241423758772955774976 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 274670795458051454645204645176521.1875 ^2 ::== 75444045877558739606420740759243947637378353086937976774032621568 as intpart 75444045877558739606420740759243846225330334828585857037776191488  diafora 803502499588205915258234123805623857579550611468600817893140070400 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 27467079545805145464520464517652.1171875 ^2 ::== 754440458775587396064207407592439406653000518316762685421649920 as intpart 754440458775587396064207407592432989171836862905417608361672704  diafora 878192105006989067468590657157275238569846966128695856750166802432 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 686676988645128636613011612941303 ^2 ::== 471525286734742122540129629745274708227831513183785596745393635328 as intpart 471525286734742122540129629745274708227831513183785596745393635328  diafora 407421258731022532324525234819592995577049433113401078185522626560 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 306894743528549111335424184554772.3125 ^2 ::== 94184383605453936651690946923309463882276286343110785448871460864 as intpart 94184383605453936651690946923309271199385051652241757949984243712  diafora 784762161860310718212963917641558432605495894644944916980932018176 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 767236858821372778338560461386930.75 ^2 ::== 588652397534087104073068418270684080811094377320054728233473540096 as intpart 588652397534087104073068418270682944996156572826510987187401523200  diafora 290294147931677550791586446294184758808724373470675687743514738688 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 76723685882137277833856046138693.078125 ^2 ::== 5886523975340871040730684182706841492642267896444424090554466304 as intpart 5886523975340871040730684182706829449961565728265109871874015232  diafora 873060021490423783823924180382160854072509776917251141111790960640 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 191809214705343194584640115346732.6875 ^2 ::== 36790774845880444004566776141917755050693398582503420514592096256 as intpart 36790774845880444004566776141917491379368551110787909200325378048  diafora 842155770619884210860088088422950176931295588795975523822901133312 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 700088288937326232778369649806346.5 ^2 ::== 490123612307193180085177049782659723605569569368248006013177823232 as intpart 490123612307193180085177049782658993438823837908112743912131526656  diafora 388822933158571474779477814782208710366057108389073931018784735232 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 175022072234331558194592412451586.625 ^2 ::== 30632725769199573755323565611416232725348098085515500375823613952 as intpart 30632725769199573755323565611416014689444858830058442942872289280  diafora 848313819696565081109331298953451744892062497509221897842985009152 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 17502207223433155819459241245158.662109375 ^2 ::== 306327257691995737553235656114162301900468976290566973824172032 as intpart 306327257691995737553235656114139127662933553971820862218698752  diafora 878640218208072659127101628908753644816504395921592329938403328000 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 437555180585828895486481031128966.5625 ^2 ::== 191454536057497335970772285071351446927522011665095468368678354944 as intpart 191454536057497335970772285071350960149691524025005293634647490560  diafora 687492009408267318893882579493516743655189422272181381296268771328 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 408783798380027416298785013826956.6875 ^2 ::== 167104193818002905301909718614061791848975140026803755321382666240 as intpart 167104193818002905301909718614061223941506237780031884798346657792  diafora 711842351647761749562745145950806479863374708517154790132569604096 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 102195949595006854074696253456739.171875 ^2 ::== 10444012113625181581369357413378861990560946251675234707586416640 as intpart 10444012113625181581369357413378826496344139861251992799896666112  diafora 868502533352139473283285507151488801249500792742170592328827273216 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 10219594959500685407469625345673.91796875 ^2 ::== 104440121136251815813693574133788627828425713943186106430259200 as intpart 104440121136251815813693574133769870560950461861260834900017152  diafora 878842105344628403048841170990733994286372791076184575978120413184 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 255489873987517135186740633641847.9375 ^2 ::== 65275075710157384883558483833617887441005914072970216922415104000 as intpart 65275075710157384883558483833617410804380228258715254162009882624  diafora 813671469755607269981096380731250252435681510735130572874403807232 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 320924217518425642139329290134418.9375 ^2 ::== 102992353389813775821338061110684361728257034619262585521815158784 as intpart 102992353389813775821338061110683763397173726894985079077902221312  diafora 775954192075950879043316803454183930266502417576366383879388397568 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 802310543796064105348323225336047.375 ^2 ::== 643702208686336098883362881941777276013413669109143977471783206912 as intpart 643702208686336098883362881941776708105944766862372106948747198464  diafora 235244336779428555981291982623090995698936179434814567982169063424 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 80231054379606410534832322533604.734375 ^2 ::== 6437022086863360988833628819417772608016064663703911595113447424 as intpart 6437022086863360988833628819417654716510243438369572401715347456  diafora 872509523378901293875821235745449998382346693729641042661072699392 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 200577635949016026337080806334011.84375 ^2 ::== 40231388042896006180210180121361079750838354319321498591986450432 as intpart 40231388042896006180210180121360745091079894066759503462340231168  diafora 838715157422868648684444684443506923219584245840003929560886280192 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 109561423439692032746746433886053.671875 ^2 ::== 12003705506131498772321359494428858767020303419011777437523509248 as intpart 12003705506131498772321359494428711719550676944401203819951685632  diafora 866942839959633156092333505070438960394065263647050433693384441856 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 273903558599230081866866084715134.1875 ^2 ::== 75023159413321867327008496840180366343138946197651557861994528768 as intpart 75023159413321867327008496840180264931090927939299438125738098688  diafora 803923386052442787537646367724687449014994820183722448778803806208 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 27390355859923008186686608471513.41796875 ^2 ::== 750231594133218673270084968401803672938768963688236089845219328 as intpart 750231594133218673270084968401780775999802341294671555643572224  diafora 878196313871631436191384779596465937765319371609058795774447452160 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 684758896498075204667165211787835.5 ^2 ::== 468894746333261670793803105251127383450762830624297947393503002624 as intpart 468894746333261670793803105251126653284017099164162685292456706048  diafora 410051799132502984070851759313741050520863847133023989638459555840 from 878946545465764654864654864564867703804880946297186674930916261888
the size of xpl vector is 44 64
 of 802310543796064105348323225336047.375 ^2 ::== 643702208686336098883362881941777276013413669109143977471783206912 as intpart 643702208686336098883362881941776708105944766862372106948747198464  diafora 235244336779428555981291982623090995698936179434814567982169063424 from 878946545465764654864654864564867703804880946297186674930916261888

-------------------------------------------------------------------------

9 26 |35 17| 937521490668755099372400243128442.25  and main 878946545465764654864654864564867703804880946297186674930916261888
-------------------------------------------------------------------------
section_temp 0
section h inf
878946545465764654864654864564867703804880946297186674930916261888 / 35 ::== 25112758441878990138990138987567649476948404323378100224525336576
            ----->  | *2 50225516883757980277980277975135298953896808646756200449050673152
            ----->  /2 12556379220939495069495069493783824738474202161689050112262668288
                 --> 6278189610469747534747534746891912369237101080844525056131334144
                 --> 3139094805234873767373767373445956184618550540422262528065667072
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 252260254624065793818693350326417909944164301077809020715860492288 502255168837579802779802779751352.8125
i insert 15766265914004112113668334395401119371510268817363063794741280768 125563792209394950694950694937838.203125
i insert 0 0
i insert 157662659140041121136683343953991099076244195309686787395289088 12556379220939495069495069493783.8203125
i insert 98539161962525700710427089971257001142541581021436754703945826304 313909480523487376737376737344595.5
CDIS Start 
section_temp 0
section h inf
25112758441878990138990138987567649476948404323378100224525336576 / 16 ::== 1569547402617436883686883686722978092309275270211131264032833536
            ----->  | *2 3139094805234873767373767373445956184618550540422262528065667072
            ----->  /2 784773701308718441843441843361489046154637635105565632016416768
                 --> 392386850654359220921720921680744523077318817552782816008208384
                 --> 196193425327179610460860460840372261538659408776391408004104192
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 98539161962525700710427089971257001142541581021436754703945826304 313909480523487376737376737344595.5
i insert 615869762265785629440169312320357017731245018321620614921584640000 784773701308718441843441843361488.75
i insert 0 0
i insert 6158697622657856294401693123203444679903027588505457975598514176 78477370130871844184344184336148.875
i insert 38491860141611601840010582020022313608202813645101288432599040000 196193425327179610460860460840372.1875
section_temp 0
section h inf
1569547402617436883686883686722978092309275270211131264032833536 / 7 ::== 224221057516776697669554812388996859011587536563827667212697600
            ----->  | *2 448442115033553395339109624777993718023175073127655334425395200
            ----->  /2 112110528758388348834777406194498429505793768281913833606348800
                 --> 56055264379194174417388703097249214752896884140956916803174400
                 --> 28027632189597087208694351548624607376448442070478458401587200
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 201100330535766736143728755043381764129917437580915260039530283008 448442115033553395339109624777993.75
i insert 12568770658485421008983047190211303213842829578484136400826400768 112110528758388348834777406194498.4375
i insert 0 0
i insert 125687706584854210089830471902095096466998316624096937528786944 11211052875838834883477740619449.84375
i insert 78554816615533881306144044938821204437345035571749262925454376960 280276321895970872086943515486246.09375
CDIS End 
section_temp 0
section h inf
878946545465764654864654864564867703804880946297186674930916261888 / 17 ::== 51702737968574391462626756739109867315864714917678089577965813760
            ----->  | *2 103405475937148782925253513478219734631729429835356179155931627520
            ----->  /2 25851368984287195731313378369554933657932357458839044788982906880
                 --> 12925684492143597865656689184777466828966178729419522394491453440
                 --> 6462842246071798932828344592388733414483089364709761197245726720
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 10692692453788255966363299451552206501489080891610054168714149888 103405475937148782925253513478219.78125
i insert 66829327836176599789770621572202068021037345534243306407704133632 258513689842871957313133783695549.4375
i insert 0 0
i insert 668293278361765997897706215721974163771598080464545142552920064 25851368984287195731313378369554.9453125
i insert 417683298976103748686066384826263584309795528268309443333817630720 646284224607179893282834459238873.625
section_temp 0
section h inf
51702737968574391462626756739109867315864714917678089577965813760 / 358 ::== 144421055778140758275493733908128115571996461782686643955695616
            ----->  | *2 288842111556281516550987467816256231143992923565373287911391232
            ----->  /2 72210527889070379137746866954064057785998230891343321977847808
                 --> 36105263944535189568873433477032028892999115445671660988923904
                 --> 18052631972267594784436716738516014446499557722835830494461952
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 83429765408291376411186444333450426767376228396336931236793548800 288842111556281516550987467816256.1875
i insert 521436033801821102569915277084065169831402627933564623223366090752 722105278890703791377468669540640.5
i insert 0 0
i insert 5214360338018211025699152770840651672961014274771058202299596800 72210527889070379137746866954064.046875
i insert 32589752112613818910619704817754073114462664245847788951460380672 180526319722675947844367167385160.125
removals 
reporing rt 4
section_temp 0
section h inf
25112758441878990138990138987567649476948404323378100224525336576 - 144421055778140758275493733908128115571996461782686643955695616 ::== 24968337386100849380714645253659521143498960947368485198323777536
            ----->  | *2 49936674772201698761429290507319042286997921894736970396647555072
            ----->  /2 12484168693050424690357322626829760571749480473684242599161888768
                 --> 6242084346525212345178661313414880285874740236842121299580944384
                 --> 3121042173262606172589330656707440142937370118421060649790472192
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 249367148730464558288686007826775380851906865537359648057150406656 499366747722016987614292905073190.5625
i insert 15585446795654034893042875489173334538184156273144828333251362816 124841686930504246903573226268297.640625
i insert 0 0
i insert 155854467956540348930428754891715870818317416589148651278827520 12484168693050424690357322626829.763671875
i insert 97409042472837718081517971807334286530998746966288693623412228096 312104217326260617258933065670744.09375
section_temp 0
section h inf
1569547402617436883686883686722978092309275270211131264032833536 - 144421055778140758275493733908128115571996461782686643955695616 ::== 1425126346839296125411389952814849917316156922730191424919175168
            ----->  | *2 2850252693678592250822779905629699834632313845460382849838350336
            ----->  /2 712563173419648062705694976407424958658078461365095712459587584
                 --> 356281586709824031352847488203712479329039230682547856229793792
                 --> 178140793354912015676423744101856239664519615341273928114896896
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 81239404178220710301736072264113458533005345840605033099771772928 285025269367859225082277990562969.90625
i insert 507746276113879439385850451650711273372604999950222804262429130752 712563173419648062705694976407424.75
i insert 0 0
i insert 5077462761138794393858504516507055664096027724614572661045985280 71256317341964806270569497640742.4765625
i insert 31734142257117464961615653228169454585787812496888925266401820672 178140793354912015676423744101856.1875
section_temp 0
section h inf
224221057516776697669554812388996859011587536563827667212697600 - 144421055778140758275493733908128115571996461782686643955695616 ::== 79800001738635939394061078480868743439591074781141023257001984
            ----->  | *2 159600003477271878788122156961737486879182149562282046514003968
            ----->  /2 39900000869317969697030539240434371719795537390570511628500992
                 --> 19950000434658984848515269620217185859897768695285255814250496
                 --> 9975000217329492424257634810108592929948884347642627907125248
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 25472161109945195800588311512863361016869833492213494254216937472 159600003477271878788122156961737.46875
i insert 159201006937157473753676946955396406933026131446825212047068758016 399000008693179696970305392404343.6875
i insert 0 0
i insert 1592010069371574737536769469553940098057410998650269817813073920 39900000869317969697030539240434.3671875
i insert 9950062933572342109604809184712125850543306284357199141963563008 99750002173294924242576348101085.921875
section_temp 0
section h inf
51702737968574391462626756739109867315864714917678089577965813760 - 144421055778140758275493733908128115571996461782686643955695616 ::== 51558316912796250704351263005201741517716471998127277545170665472
            ----->  | *2 103116633825592501408702526010403483035432943996254555090341330944
            ----->  /2 25779158456398125352175631502600870758858235999063638772585332736
                 --> 12889579228199062676087815751300435379429117999531819386292666368
                 --> 6444789614099531338043907875650217689714558999765909693146333184
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 10633040171521327632229301143853842709225676677821435949858422784 103116633825592501408702526010403.46875
i insert 66456501072008297701433132149086778385596776308698033381651251200 257791584563981253521756315026008.6875
i insert 0 0
i insert 664565010720082977014331321490826505983297831367094097418387456 25779158456398125352175631502600.8671875
i insert 415353131700051860633957075931793660448893285179811038265996214272 644478961409953133804390787565021.6875
ending sqti reporting the results 
reporting size of xl vector 44 64
entering amfidromi loop of xl vector  with first 
 of 502255168837579802779802779751352.8125 ^2 ::== 252260254624065793818693350326418721240548447144625978605911932928 as intpart 252260254624065793818693350326417909944164301077809020715860492288  diafora 626686290841698861045961514238449793860716645219377654215055769600 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 125563792209394950694950694937838.203125 ^2 ::== 15766265914004112113668334395401170077534277946539123662869495808 as intpart 15766265914004112113668334395401119371510268817363063794741280768  diafora 863180279551760542750986530169466564150961073828153187188923695104 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 12556379220939495069495069493783.8203125 ^2 ::== 157662659140041121136683343954011698398497904037461108822376448 as intpart 157662659140041121136683343953991099076244195309686787395289088  diafora 878788882806624613743518181220913737840939259752238089695339216896 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 313909480523487376737376737344595.5 ^2 ::== 98539161962525700710427089971257315519890437622328325886340759552 as intpart 98539161962525700710427089971257001142541581021436754703945826304  diafora 780407383503238954154227774593610743227158572579090768121473007616 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 313909480523487376737376737344595.5 ^2 ::== 98539161962525700710427089971257315519890437622328325886340759552 as intpart 98539161962525700710427089971257001142541581021436754703945826304  diafora 780407383503238954154227774593610743227158572579090768121473007616 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 784773701308718441843441843361488.75 ^2 ::== 615869762265785629440169312320358234675821237421846051756661800960 as intpart 615869762265785629440169312320357017731245018321620614921584640000  diafora 263076783199979025424485552244510686073635927975566060009331621888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 78477370130871844184344184336148.875 ^2 ::== 6158697622657856294401693123203582219993152351395520367896297472 as intpart 6158697622657856294401693123203444679903027588505457975598514176  diafora 872787847843106798570253171441664336451664532630674708254213275648 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 196193425327179610460860460840372.1875 ^2 ::== 38491860141611601840010582020022389667238827338865378234791362560 as intpart 38491860141611601840010582020022313608202813645101288432599040000  diafora 840454685324153053024644282544845359773063727174579750577440292864 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 448442115033553395339109624777993.75 ^2 ::== 201100330535766736143728755043382433449434358086039250298822721536 as intpart 201100330535766736143728755043381764129917437580915260039530283008  diafora 677846214929997918720926109521485939674963508716271414891385978880 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 112110528758388348834777406194498.4375 ^2 ::== 12568770658485421008983047190211402090589647380377453143676420096 as intpart 12568770658485421008983047190211303213842829578484136400826400768  diafora 866377774807279233855671817374656465241218728358402014861953335296 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 11211052875838834883477740619449.84375 ^2 ::== 125687706584854210089830471902114012190798597234697396146929664 as intpart 125687706584854210089830471902095096466998316624096937528786944  diafora 878820857759179800654565034092965614135543080207669703151148072960 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 280276321895970872086943515486246.09375 ^2 ::== 78554816615533881306144044938821265284573846526760534767208235008 as intpart 78554816615533881306144044938821204437345035571749262925454376960  diafora 800391728850230773558510819626046489226331108899602200031836241920 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 103405475937148782925253513478219.78125 ^2 ::== 10692692453788255966363299451552368760765910104973445746724438016 as intpart 10692692453788255966363299451552206501489080891610054168714149888  diafora 868253853011976398898291565113315541671162873393605673146814300160 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 258513689842871957313133783695549.4375 ^2 ::== 66829327836176599789770621572202291127542985702617969827468279808 as intpart 66829327836176599789770621572202068021037345534243306407704133632  diafora 812117217629588055074884242992665595219024393459602520628709556224 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 25851368984287195731313378369554.9453125 ^2 ::== 668293278361765997897706215722023047547869381560840359170277376 as intpart 668293278361765997897706215721974163771598080464545142552920064  diafora 878278252187402888866757158349145744377547575869888922187538104320 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 646284224607179893282834459238873.625 ^2 ::== 417683298976103748686066384826264395606179674335126401223869071360 as intpart 417683298976103748686066384826263584309795528268309443333817630720  diafora 461263246489660906178588479738604119495085418028877231597098631168 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 288842111556281516550987467816256.1875 ^2 ::== 83429765408291376411186444333450538320629048480524262946675621888 as intpart 83429765408291376411186444333450426767376228396336931236793548800  diafora 795516780057473278453468420231417266896299916075014531720497070080 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 722105278890703791377468669540640.5 ^2 ::== 521436033801821102569915277084065899998148359393699885324412387328 as intpart 521436033801821102569915277084065169831402627933564623223366090752  diafora 357510511663943552294739587480802533973478318363622051707550171136 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 72210527889070379137746866954064.046875 ^2 ::== 5214360338018211025699152770840658645039315530032766434167226368 as intpart 5214360338018211025699152770840651672961014274771058202299596800  diafora 873732185127746443838955711794027066709901834647053733940703526912 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 180526319722675947844367167385160.125 ^2 ::== 32589752112613818910619704817754118749884272462106242832775774208 as intpart 32589752112613818910619704817754073114462664245847788951460380672  diafora 846356793353150835954035159747113640831623083877174097953081524224 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 499366747722016987614292905073190.5625 ^2 ::== 249367148730464558288686007826775948759375767784131518580186415104 as intpart 249367148730464558288686007826775380851906865537359648057150406656  diafora 629579396735300096575968856738092322952974080759827026873765855232 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 124841686930504246903573226268297.640625 ^2 ::== 15585446795654034893042875489173496797460985486508219911261650944 as intpart 15585446795654034893042875489173334538184156273144828333251362816  diafora 863361098670110619971611989075694359125491988198206634624039256064 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 12484168693050424690357322626829.763671875 ^2 ::== 155854467956540348930428754891734944998442725728424296984870912 as intpart 155854467956540348930428754891715870818317416589148651278827520  diafora 878790690997808114515724435809976064468467617659947641643093458944 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 312104217326260617258933065670744.09375 ^2 ::== 97409042472837718081517971807334347378227557921299965465166086144 as intpart 97409042472837718081517971807334286530998746966288693623412228096  diafora 781537502992926936783136892757533407132677397505062769333878390784 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 285025269367859225082277990562969.90625 ^2 ::== 81239404178220710301736072264113975734450238958200843754679566336 as intpart 81239404178220710301736072264113458533005345840605033099771772928  diafora 797707141287543944562918792300754214848261194979076005910267559936 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 712563173419648062705694976407424.75 ^2 ::== 507746276113879439385850451650712328057904389837084849519496003584 as intpart 507746276113879439385850451650711273372604999950222804262429130752  diafora 371200269351885215478804412914156430432275946346963870668487131136 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 71256317341964806270569497640742.4765625 ^2 ::== 5077462761138794393858504516507123483403139934887552734667472896 as intpart 5077462761138794393858504516507055664096027724614572661045985280  diafora 873869082704625860470796360048360605674489810926887152130312896512 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 178140793354912015676423744101856.1875 ^2 ::== 31734142257117464961615653228169520503619024364817803094968500224 as intpart 31734142257117464961615653228169454585787812496888925266401820672  diafora 847212403208647189903039211336698218795478728322792113743637512192 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 159600003477271878788122156961737.46875 ^2 ::== 25472161109945195800588311512863510599640660423282870865195171840 as intpart 25472161109945195800588311512863361016869833492213494254216937472  diafora 853474384355819459064066553052004363070420716456643604623950610432 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 399000008693179696970305392404343.6875 ^2 ::== 159201006937157473753676946955396954558085430041926658622853480448 as intpart 159201006937157473753676946955396406933026131446825212047068758016  diafora 719745538528607181110977917609471296871854814850361462883847503872 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 39900000869317969697030539240434.3671875 ^2 ::== 1592010069371574737536769469553969412477541276455179429074698240 as intpart 1592010069371574737536769469553940098057410998650269817813073920  diafora 877354535396393080127118095095313836279820398364669640799361695744 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 99750002173294924242576348101085.921875 ^2 ::== 9950062933572342109604809184712309659880339377620416163928342528 as intpart 9950062933572342109604809184712125850543306284357199141963563008  diafora 868996482532192312755050055380155544995422034078865036874669359104 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 103116633825592501408702526010403.46875 ^2 ::== 10633040171521327632229301143853940318321894251485351196005236736 as intpart 10633040171521327632229301143853842709225676677821435949858422784  diafora 868313505294243327232425563421013859828004669391135837484354633728 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 257791584563981253521756315026008.6875 ^2 ::== 66456501072008297701433132149087133327764840212930452458548756480 as intpart 66456501072008297701433132149086778385596776308698033381651251200  diafora 812490044393756357163221732415780935560488971814323853522890653696 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 25779158456398125352175631502600.8671875 ^2 ::== 664565010720082977014331321490871269895118390717834449750327296 as intpart 664565010720082977014331321490826505983297831367094097418387456  diafora 878281980455044571887640533243376838556326178990558497590506160128 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 644478961409953133804390787565021.6875 ^2 ::== 415353131700051860633957075931794512310096638549968844050550226944 as intpart 415353131700051860633957075931793660448893285179811038265996214272  diafora 463593413765712794230697788633074002791168453814034788770417475584 from 878946545465764654864654864564867703804880946297186674930916261888
the size of xpl vector is 44 64
 of 784773701308718441843441843361488.75 ^2 ::== 615869762265785629440169312320358234675821237421846051756661800960 as intpart 615869762265785629440169312320357017731245018321620614921584640000  diafora 263076783199979025424485552244510686073635927975566060009331621888 from 878946545465764654864654864564867703804880946297186674930916261888

-------------------------------------------------------------------------

9 |26| 35 |17| 937521490668755099372400243128442.25  and main 878946545465764654864654864564867703804880946297186674930916261888
-------------------------------------------------------------------------
section_temp 0
section h inf
878946545465764654864654864564867703804880946297186674930916261888 / 26 ::== 33805636364067871340948264021725679355386989961301762578323603456
            ----->  | *2 67611272728135742681896528043451358710773979922603525156647206912
            ----->  /2 16902818182033935670474132010862839677693494980650881289161801728
                 --> 8451409091016967835237066005431419838846747490325440644580900864
                 --> 4225704545508483917618533002715709919423373745162720322290450432
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 457128419991835203295709103771986078946369368329324068424973811712 676112727281357426818965280434513.75
i insert 28570526249489700205981818985749043733907270000983452500742897664 169028181820339356704741320108628.4375
i insert 0 0
i insert 285705262494897002059818189857463401520896332447274104069816320 16902818182033935670474132010862.84375
i insert 178565789059310626287386368660932375198123790876304383914197123072 422570454550848391761853300271571.0625
CDIS Start 
section_temp 0
section h inf
33805636364067871340948264021725679355386989961301762578323603456 / 16 ::== 2112852272754241958809266501357854959711686872581360161145225216
            ----->  | *2 4225704545508483917618533002715709919423373745162720322290450432
            ----->  /2 1056426136377120979404633250678927479855843436290680080572612608
                 --> 528213068188560489702316625339463739927921718145340040286306304
                 --> 264106534094280244851158312669731869963960859072670020143153152
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 178565789059310626287386368660932375198123790876304383914197123072 422570454550848391761853300271571.0625
i insert 11160361816206914142961648041308114993557708401093836906736648192 105642613637712097940463325067892.765625
i insert 0 0
i insert 111603618162069141429616480413076913605727446296807242272342016 10564261363771209794046332506789.27734375
i insert 69752261351293213393510300258176250489162473249070408534098706432 264106534094280244851158312669731.90625
section_temp 0
section h inf
2112852272754241958809266501357854959711686872581360161145225216 / 7 ::== 301836038964891708401323785908265005562835626692242536384167936
            ----->  | *2 603672077929783416802647571816530011125671253384485072768335872
            ----->  /2 150918019482445854200661892954132502781417813346121268192083968
                 --> 75459009741222927100330946477066251390708906673060634096041984
                 --> 37729504870611463550165473238533125695354453336530317048020992
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 364419977672062502627319119716187320424990377505840998865122099200 603672077929783416802647571816529.8125
i insert 22776248604503906414207444982261631467525884900350972626877808640 150918019482445854200661892954132.453125
i insert 0 0
i insert 227762486045039064142074449822610261643642759208117579510972416 15091801948244585420066189295413.24609375
i insert 142351553778149415088796531139135953459445116880146272449799913472 377295048706114635501654732385331.125
CDIS End 
section_temp 0
section h inf
878946545465764654864654864564867703804880946297186674930916261888 / 17 ::== 51702737968574391462626756739109867315864714917678089577965813760
            ----->  | *2 103405475937148782925253513478219734631729429835356179155931627520
            ----->  /2 25851368984287195731313378369554933657932357458839044788982906880
                 --> 12925684492143597865656689184777466828966178729419522394491453440
                 --> 6462842246071798932828344592388733414483089364709761197245726720
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 10692692453788255966363299451552206501489080891610054168714149888 103405475937148782925253513478219.78125
i insert 66829327836176599789770621572202068021037345534243306407704133632 258513689842871957313133783695549.4375
i insert 0 0
i insert 668293278361765997897706215721974163771598080464545142552920064 25851368984287195731313378369554.9453125
i insert 417683298976103748686066384826263584309795528268309443333817630720 646284224607179893282834459238873.625
section_temp 0
section h inf
51702737968574391462626756739109867315864714917678089577965813760 / 358 ::== 144421055778140758275493733908128115571996461782686643955695616
            ----->  | *2 288842111556281516550987467816256231143992923565373287911391232
            ----->  /2 72210527889070379137746866954064057785998230891343321977847808
                 --> 36105263944535189568873433477032028892999115445671660988923904
                 --> 18052631972267594784436716738516014446499557722835830494461952
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 83429765408291376411186444333450426767376228396336931236793548800 288842111556281516550987467816256.1875
i insert 521436033801821102569915277084065169831402627933564623223366090752 722105278890703791377468669540640.5
i insert 0 0
i insert 5214360338018211025699152770840651672961014274771058202299596800 72210527889070379137746866954064.046875
i insert 32589752112613818910619704817754073114462664245847788951460380672 180526319722675947844367167385160.125
removals 
reporing rt 4
section_temp 0
section h inf
33805636364067871340948264021725679355386989961301762578323603456 - 144421055778140758275493733908128115571996461782686643955695616 ::== 33661215308289730582672770287817553557238747041750950545528455168
            ----->  | *2 67322430616579461165345540575635107114477494083501901091056910336
            ----->  /2 16830607654144865291336385143908776778619373520875475272764227584
                 --> 8415303827072432645668192571954388389309686760437737636382113792
                 --> 4207651913536216322834096285977194194654843380218868818191056896
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 453230966412415560765361909337855724715488001556414788015822471168 673224306165794611653455405756351.125
i insert 28326935400775972547835119333615729264597954451395624910347829248 168306076541448652913363851439087.78125
i insert 0 0
i insert 283269354007759725478351193336133747620643555438110199712317440 16830607654144865291336385143908.77734375
i insert 177043346254849828423969495835099562877831441268330137425847255040 420765191353621632283409628597719.4375
section_temp 0
section h inf
2112852272754241958809266501357854959711686872581360161145225216 - 144421055778140758275493733908128115571996461782686643955695616 ::== 1968431216976101200533772767449726943174893553629095509119467520
            ----->  | *2 3936862433952202401067545534899453886349787107258191018238935040
            ----->  /2 984215608488050600266886383724863471587446776814547754559733760
                 --> 492107804244025300133443191862431735793723388407273877279866880
                 --> 246053902122012650066721595931215867896861694203636938639933440
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 154988858238640592126571276363238698386406964566537590061062422528 393686243395220240106754553489945.375
i insert 9686803639915037007910704772702369210777026384461941007391391744 98421560848805060026688638372486.34375
i insert 0 0
i insert 96868036399150370079107047727011883942429137887744468283555840 9842156084880506002668863837248.634765625
i insert 60542522749468981299441904829389801229103413761740123812680171520 246053902122012650066721595931215.875
section_temp 0
section h inf
301836038964891708401323785908265005562835626692242536384167936 - 144421055778140758275493733908128115571996461782686643955695616 ::== 157414983186750950125830052000136889990839164909555892428472320
            ----->  | *2 314829966373501900251660104000273779981678329819111784856944640
            ----->  /2 78707491593375475062915026000068444995419582454777946214236160
                 --> 39353745796687737531457513000034222497709791227388973107118080
                 --> 19676872898343868765728756500017111248854895613694486553559040
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 99117907726740337253834753463525881487328927432674539287624024064 314829966373501900251660104000273.6875
i insert 619486923292127107836467209147039096843512617309232230468360863744 787074915933754750629150260000684.25
i insert 0 0
i insert 6194869232921271078364672091470328295789450889430712307677134848 78707491593375475062915026000068.421875
i insert 38717932705757944239779200571689943552719538581827014404272553984 196768728983438687657287565000171.0625
section_temp 0
section h inf
51702737968574391462626756739109867315864714917678089577965813760 - 144421055778140758275493733908128115571996461782686643955695616 ::== 51558316912796250704351263005201741517716471998127277545170665472
            ----->  | *2 103116633825592501408702526010403483035432943996254555090341330944
            ----->  /2 25779158456398125352175631502600870758858235999063638772585332736
                 --> 12889579228199062676087815751300435379429117999531819386292666368
                 --> 6444789614099531338043907875650217689714558999765909693146333184
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 10633040171521327632229301143853842709225676677821435949858422784 103116633825592501408702526010403.46875
i insert 66456501072008297701433132149086778385596776308698033381651251200 257791584563981253521756315026008.6875
i insert 0 0
i insert 664565010720082977014331321490826505983297831367094097418387456 25779158456398125352175631502600.8671875
i insert 415353131700051860633957075931793660448893285179811038265996214272 644478961409953133804390787565021.6875
ending sqti reporting the results 
reporting size of xl vector 44 64
entering amfidromi loop of xl vector  with first 
 of 676112727281357426818965280434513.75 ^2 ::== 457128419991835203295709103771987052502030343609504417893035540480 as intpart 457128419991835203295709103771986078946369368329324068424973811712  diafora 421818125473929451568945760792881624858511577967862606505942450176 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 169028181820339356704741320108628.4375 ^2 ::== 28570526249489700205981818985749190781376896475594026118314721280 as intpart 28570526249489700205981818985749043733907270000983452500742897664  diafora 850376019216274954658673045579118741200612090902884918219178508288 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 16902818182033935670474132010862.84375 ^2 ::== 285705262494897002059818189857491923659401467608807779891937280 as intpart 285705262494897002059818189857463401520896332447274104069816320  diafora 878660840203269757862595046375010295308476672349925353152804028416 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 422570454550848391761853300271571.0625 ^2 ::== 178565789059310626287386368660932415762942998179645231808699695104 as intpart 178565789059310626287386368660932375198123790876304383914197123072  diafora 700380756406454028577268495903935308324347551769211867069467852800 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 422570454550848391761853300271571.0625 ^2 ::== 178565789059310626287386368660932415762942998179645231808699695104 as intpart 178565789059310626287386368660932375198123790876304383914197123072  diafora 700380756406454028577268495903935308324347551769211867069467852800 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 105642613637712097940463325067892.765625 ^2 ::== 11160361816206914142961648041308275985183937386227826988043730944 as intpart 11160361816206914142961648041308114993557708401093836906736648192  diafora 867786183649557740721693216523559510216986023745869945228580880384 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 10564261363771209794046332506789.27734375 ^2 ::== 111603618162069141429616480413082776489753501857789164524666880 as intpart 111603618162069141429616480413076913605727446296807242272342016  diafora 878834941847602585723225248084454610510852619026738070223432187904 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 264106534094280244851158312669731.90625 ^2 ::== 69752261351293213393510300258176727125788159063325371294503927808 as intpart 69752261351293213393510300258176250489162473249070408534098706432  diafora 809194284114471441471144564306691453315718473048116266396817555456 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 603672077929783416802647571816529.8125 ^2 ::== 364419977672062502627319119716188293980651352786021348333183827968 as intpart 364419977672062502627319119716187320424990377505840998865122099200  diafora 514526567793702152237335744848680383379890568791345676065794162688 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 150918019482445854200661892954132.453125 ^2 ::== 22776248604503906414207444982261768373790709549126334270823989248 as intpart 22776248604503906414207444982261631467525884900350972626877808640  diafora 856170296861260748450447419582606087549162264135588520264476917760 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 15091801948244585420066189295413.24609375 ^2 ::== 227762486045039064142074449822617709090919100055851372642304000 as intpart 227762486045039064142074449822610261643642759208117579510972416  diafora 878718782979719615800512790115045170394554942374386023089037115392 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 377295048706114635501654732385331.125 ^2 ::== 142351553778149415088796531139136034589083531486827968238805057536 as intpart 142351553778149415088796531139135953459445116880146272449799913472  diafora 736594991687615239775858333425731750345435829417040402481116348416 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 103405475937148782925253513478219.78125 ^2 ::== 10692692453788255966363299451552368760765910104973445746724438016 as intpart 10692692453788255966363299451552206501489080891610054168714149888  diafora 868253853011976398898291565113315541671162873393605673146814300160 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 258513689842871957313133783695549.4375 ^2 ::== 66829327836176599789770621572202291127542985702617969827468279808 as intpart 66829327836176599789770621572202068021037345534243306407704133632  diafora 812117217629588055074884242992665595219024393459602520628709556224 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 25851368984287195731313378369554.9453125 ^2 ::== 668293278361765997897706215722023047547869381560840359170277376 as intpart 668293278361765997897706215721974163771598080464545142552920064  diafora 878278252187402888866757158349145744377547575869888922187538104320 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 646284224607179893282834459238873.625 ^2 ::== 417683298976103748686066384826264395606179674335126401223869071360 as intpart 417683298976103748686066384826263584309795528268309443333817630720  diafora 461263246489660906178588479738604119495085418028877231597098631168 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 288842111556281516550987467816256.1875 ^2 ::== 83429765408291376411186444333450538320629048480524262946675621888 as intpart 83429765408291376411186444333450426767376228396336931236793548800  diafora 795516780057473278453468420231417266896299916075014531720497070080 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 722105278890703791377468669540640.5 ^2 ::== 521436033801821102569915277084065899998148359393699885324412387328 as intpart 521436033801821102569915277084065169831402627933564623223366090752  diafora 357510511663943552294739587480802533973478318363622051707550171136 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 72210527889070379137746866954064.046875 ^2 ::== 5214360338018211025699152770840658645039315530032766434167226368 as intpart 5214360338018211025699152770840651672961014274771058202299596800  diafora 873732185127746443838955711794027066709901834647053733940703526912 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 180526319722675947844367167385160.125 ^2 ::== 32589752112613818910619704817754118749884272462106242832775774208 as intpart 32589752112613818910619704817754073114462664245847788951460380672  diafora 846356793353150835954035159747113640831623083877174097953081524224 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 673224306165794611653455405756351.125 ^2 ::== 453230966412415560765361909337855886974764830769778179593832759296 as intpart 453230966412415560765361909337855724715488001556414788015822471168  diafora 425715579053349094099292955227011979089392944740771886915093790720 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 168306076541448652913363851439087.78125 ^2 ::== 28326935400775972547835119333615992935922801923111136224614547456 as intpart 28326935400775972547835119333615729264597954451395624910347829248  diafora 850619610064988682316819745231251984681487793671626261994194075648 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 16830607654144865291336385143908.77734375 ^2 ::== 283269354007759725478351193336159892914273262669516069215928320 as intpart 283269354007759725478351193336133747620643555438110199712317440  diafora 878663276111756895139176513371531635856249270838280936169454698496 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 420765191353621632283409628597719.4375 ^2 ::== 177043346254849828423969495835099927961204306998397768476370403328 as intpart 177043346254849828423969495835099562877831441268330137425847255040  diafora 701903199210914826440685368729768120644639901377186113557817720832 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 393686243395220240106754553489945.375 ^2 ::== 154988858238640592126571276363238982340141415689923525322580426752 as intpart 154988858238640592126571276363238698386406964566537590061062422528  diafora 723957687227124062738083588201628985136064378078978660922602553344 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 98421560848805060026688638372486.34375 ^2 ::== 9686803639915037007910704772702436396258838480620220332661276672 as intpart 9686803639915037007910704772702369210777026384461941007391391744  diafora 869259741825849617856744159792165278817477509870631068068583833600 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 9842156084880506002668863837248.634765625 ^2 ::== 96868036399150370079107047727024372281545448803957650648727552 as intpart 96868036399150370079107047727011883942429137887744468283555840  diafora 878849677429365504494575757517140713629455046067727431093675098112 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 246053902122012650066721595931215.875 ^2 ::== 60542522749468981299441904829390237300909892272654238678582820864 as intpart 60542522749468981299441904829389801229103413761740123812680171520  diafora 818404022716295673565212959735477912716982334361281763091861733376 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 314829966373501900251660104000273.6875 ^2 ::== 99117907726740337253834753463526307417930604117753442179901030400 as intpart 99117907726740337253834753463525881487328927432674539287624024064  diafora 779828637739024317610820111101341802035142415212841711696040951808 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 787074915933754750629150260000684.25 ^2 ::== 619486923292127107836467209147039502491704690342640709413386584064 as intpart 619486923292127107836467209147039096843512617309232230468360863744  diafora 259459622173637547028187655417828606961368328987954444462555398144 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 78707491593375475062915026000068.421875 ^2 ::== 6194869232921271078364672091470394213620662757359590136243814400 as intpart 6194869232921271078364672091470328295789450889430712307677134848  diafora 872751676232843383786290192473397309591260283539827084794672447488 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 196768728983438687657287565000171.0625 ^2 ::== 38717932705757944239779200571689968905731543146415044338336661504 as intpart 38717932705757944239779200571689943552719538581827014404272553984  diafora 840228612760006710624875663993177780534571011367030084473894993920 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 103116633825592501408702526010403.46875 ^2 ::== 10633040171521327632229301143853940318321894251485351196005236736 as intpart 10633040171521327632229301143853842709225676677821435949858422784  diafora 868313505294243327232425563421013859828004669391135837484354633728 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 257791584563981253521756315026008.6875 ^2 ::== 66456501072008297701433132149087133327764840212930452458548756480 as intpart 66456501072008297701433132149086778385596776308698033381651251200  diafora 812490044393756357163221732415780935560488971814323853522890653696 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 25779158456398125352175631502600.8671875 ^2 ::== 664565010720082977014331321490871269895118390717834449750327296 as intpart 664565010720082977014331321490826505983297831367094097418387456  diafora 878281980455044571887640533243376838556326178990558497590506160128 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 644478961409953133804390787565021.6875 ^2 ::== 415353131700051860633957075931794512310096638549968844050550226944 as intpart 415353131700051860633957075931793660448893285179811038265996214272  diafora 463593413765712794230697788633074002791168453814034788770417475584 from 878946545465764654864654864564867703804880946297186674930916261888
the size of xpl vector is 44 64
 of 787074915933754750629150260000684.25 ^2 ::== 619486923292127107836467209147039502491704690342640709413386584064 as intpart 619486923292127107836467209147039096843512617309232230468360863744  diafora 259459622173637547028187655417828606961368328987954444462555398144 from 878946545465764654864654864564867703804880946297186674930916261888

-------------------------------------------------------------------------

10 25 |35 15| 937521490668755099372400243128442.25  and main 878946545465764654864654864564867703804880946297186674930916261888
-------------------------------------------------------------------------
section_temp 0
section h inf
878946545465764654864654864564867703804880946297186674930916261888 / 35 ::== 25112758441878990138990138987567649476948404323378100224525336576
            ----->  | *2 50225516883757980277980277975135298953896808646756200449050673152
            ----->  /2 12556379220939495069495069493783824738474202161689050112262668288
                 --> 6278189610469747534747534746891912369237101080844525056131334144
                 --> 3139094805234873767373767373445956184618550540422262528065667072
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 252260254624065793818693350326417909944164301077809020715860492288 502255168837579802779802779751352.8125
i insert 15766265914004112113668334395401119371510268817363063794741280768 125563792209394950694950694937838.203125
i insert 0 0
i insert 157662659140041121136683343953991099076244195309686787395289088 12556379220939495069495069493783.8203125
i insert 98539161962525700710427089971257001142541581021436754703945826304 313909480523487376737376737344595.5
CDIS Start 
section_temp 0
section h inf
25112758441878990138990138987567649476948404323378100224525336576 / 16 ::== 1569547402617436883686883686722978092309275270211131264032833536
            ----->  | *2 3139094805234873767373767373445956184618550540422262528065667072
            ----->  /2 784773701308718441843441843361489046154637635105565632016416768
                 --> 392386850654359220921720921680744523077318817552782816008208384
                 --> 196193425327179610460860460840372261538659408776391408004104192
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 98539161962525700710427089971257001142541581021436754703945826304 313909480523487376737376737344595.5
i insert 615869762265785629440169312320357017731245018321620614921584640000 784773701308718441843441843361488.75
i insert 0 0
i insert 6158697622657856294401693123203444679903027588505457975598514176 78477370130871844184344184336148.875
i insert 38491860141611601840010582020022313608202813645101288432599040000 196193425327179610460860460840372.1875
section_temp 0
section h inf
1569547402617436883686883686722978092309275270211131264032833536 / 7 ::== 224221057516776697669554812388996859011587536563827667212697600
            ----->  | *2 448442115033553395339109624777993718023175073127655334425395200
            ----->  /2 112110528758388348834777406194498429505793768281913833606348800
                 --> 56055264379194174417388703097249214752896884140956916803174400
                 --> 28027632189597087208694351548624607376448442070478458401587200
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 201100330535766736143728755043381764129917437580915260039530283008 448442115033553395339109624777993.75
i insert 12568770658485421008983047190211303213842829578484136400826400768 112110528758388348834777406194498.4375
i insert 0 0
i insert 125687706584854210089830471902095096466998316624096937528786944 11211052875838834883477740619449.84375
i insert 78554816615533881306144044938821204437345035571749262925454376960 280276321895970872086943515486246.09375
CDIS End 
section_temp 0
section h inf
878946545465764654864654864564867703804880946297186674930916261888 / 15 ::== 58596436364384310324310324304324516291313343573368501521694588928
            ----->  | *2 117192872728768620648620648608649032582626687146737003043389177856
            ----->  /2 29298218182192155162155162152162258145656671786684250760847294464
                 --> 14649109091096077581077581076081129072828335893342125380423647232
                 --> 7324554545548038790538790538040564536414167946671062690211823616
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 13734169418421359885684415739993910026918745570194797932568379392 117192872728768620648620648608649
i insert 85838558865133499285527598374961649911555908005643347326924750848 292982181821921551621551621521622.5
i insert 0 0
i insert 858385588651334992855275983749604798700518973499057658698661888 29298218182192155162155162152162.25
i insert 536490992907084370534547489843511777351318288868459050982185107456 732455454554803879053879053804056.25
section_temp 0
section h inf
58596436364384310324310324304324516291313343573368501521694588928 / 358 ::== 163677196548559526045559565095878540224881616684550915729915904
            ----->  | *2 327354393097119052091119130191757080449763233369101831459831808
            ----->  /2 81838598274279763022779782547939270112440808342275457864957952
                 --> 40919299137139881511389891273969635056220404171137728932478976
                 --> 20459649568569940755694945636984817528110202085568864466239488
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 107160898679983145701479477388298689009052158721228491311170977792 327354393097119052091119130191757.125
i insert 669755616749894660634246733676865964586577440463355476883890241536 818385982742797630227797825479392.875
i insert 0 0
i insert 6697556167498946606342467336768626230595952388506531315742408704 81838598274279763022779782547939.28125
i insert 41859726046868416289640420854804122786661090028959717305243140096 204596495685699407556949456369848.21875
removals 
reporing rt 4
section_temp 0
section h inf
25112758441878990138990138987567649476948404323378100224525336576 - 163677196548559526045559565095878540224881616684550915729915904 ::== 24949081245330430612944579422471770699039035163900536528163569664
            ----->  | *2 49898162490660861225889158844943541398078070327801073056327139328
            ----->  /2 12474540622665215306472289711235885349519517581950268264081784832
                 --> 6237270311332607653236144855617942674759758790975134132040892416
                 --> 3118635155666303826618072427808971337379879395487567066020446208
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 248982661994439452176595242310870665949658812613302444613099847680 498981624906608612258891588449435.375
i insert 15561416374652465761037202644429229009564842010379981276244344832 124745406226652153064722897112358.84375
i insert 0 0
i insert 155614163746524657610372026444272334898355952345090126847672320 12474540622665215306472289711235.884765625
i insert 97258852341577911006482516527683928044145587028491254984129642496 311863515566630382661807242780897.09375
section_temp 0
section h inf
1569547402617436883686883686722978092309275270211131264032833536 - 163677196548559526045559565095878540224881616684550915729915904 ::== 1405870206068877357641324121627099472856231139262242754758967296
            ----->  | *2 2811740412137754715282648243254198945712462278524485509517934592
            ----->  /2 702935103034438678820662060813549736428115569631121377379483648
                 --> 351467551517219339410331030406774868214057784815560688689741824
                 --> 175733775758609669705165515203387434107028892407780344344870912
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 79058841452485907438265284974598280098523287619931927960751177728 281174041213775471528264824325419.90625
i insert 494117759078036921489158031091241400551188534701639488163331178496 702935103034438678820662060813549.75
i insert 0 0
i insert 4941177590780369214891580310912287291157886533205421271180902400 70293510303443867882066206081354.9765625
i insert 30882359942377307593072376943202496263606066986335560247577411584 175733775758609669705165515203387.4375
section_temp 0
section h inf
224221057516776697669554812388996859011587536563827667212697600 - 163677196548559526045559565095878540224881616684550915729915904 ::== 60543860968217171623995247293118318786705919879276751482781696
            ----->  | *2 121087721936434343247990494586236637573411839758553502965563392
            ----->  /2 30271930484108585811997623646559159393352959939638375741390848
                 --> 15135965242054292905998811823279579696676479969819187870695424
                 --> 7567982621027146452999405911639789848338239984909593935347712
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 14662236403755242856971092852515590986120098919426125748664008704 121087721936434343247990494586236.640625
i insert 91638977523470267856069330328223053403189328024755405843391840256 302719304841085858119976236465591.59375
i insert 0 0
i insert 916389775234702678560693303282224436632506182464132859291500544 30271930484108585811997623646559.16015625
i insert 572743609521689174100433314551396342723302906859514753646310981632 756798262102714645299940591163979
section_temp 0
section h inf
58596436364384310324310324304324516291313343573368501521694588928 - 163677196548559526045559565095878540224881616684550915729915904 ::== 58432759167835750798264764739228634978102773957432134831926411264
            ----->  | *2 116865518335671501596529529478457269956205547914864269663852822528
            ----->  /2 29216379583917875399132382369614317489051386978716067415963205632
                 --> 14608189791958937699566191184807158744525693489358033707981602816
                 --> 7304094895979468849783095592403579372262846744679016853990801408
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 13657549375865171936507857913661221627334900171797344447816007680 116865518335671501596529529478457.328125
i insert 85359683599157324603174111960382923561354677995922243298829271040 292163795839178753991323823696143.3125
i insert 0 0
i insert 853596835991573246031741119603811615270203607570541628813737984 29216379583917875399132382369614.33203125
i insert 533498022494733278769838199752394022707622072586319706665980526592 730409489597946884978309559240358.25
ending sqti reporting the results 
reporting size of xl vector 44 64
entering amfidromi loop of xl vector  with first 
 of 502255168837579802779802779751352.8125 ^2 ::== 252260254624065793818693350326418721240548447144625978605911932928 as intpart 252260254624065793818693350326417909944164301077809020715860492288  diafora 626686290841698861045961514238449793860716645219377654215055769600 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 125563792209394950694950694937838.203125 ^2 ::== 15766265914004112113668334395401170077534277946539123662869495808 as intpart 15766265914004112113668334395401119371510268817363063794741280768  diafora 863180279551760542750986530169466564150961073828153187188923695104 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 12556379220939495069495069493783.8203125 ^2 ::== 157662659140041121136683343954011698398497904037461108822376448 as intpart 157662659140041121136683343953991099076244195309686787395289088  diafora 878788882806624613743518181220913737840939259752238089695339216896 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 313909480523487376737376737344595.5 ^2 ::== 98539161962525700710427089971257315519890437622328325886340759552 as intpart 98539161962525700710427089971257001142541581021436754703945826304  diafora 780407383503238954154227774593610743227158572579090768121473007616 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 313909480523487376737376737344595.5 ^2 ::== 98539161962525700710427089971257315519890437622328325886340759552 as intpart 98539161962525700710427089971257001142541581021436754703945826304  diafora 780407383503238954154227774593610743227158572579090768121473007616 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 784773701308718441843441843361488.75 ^2 ::== 615869762265785629440169312320358234675821237421846051756661800960 as intpart 615869762265785629440169312320357017731245018321620614921584640000  diafora 263076783199979025424485552244510686073635927975566060009331621888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 78477370130871844184344184336148.875 ^2 ::== 6158697622657856294401693123203582219993152351395520367896297472 as intpart 6158697622657856294401693123203444679903027588505457975598514176  diafora 872787847843106798570253171441664336451664532630674708254213275648 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 196193425327179610460860460840372.1875 ^2 ::== 38491860141611601840010582020022389667238827338865378234791362560 as intpart 38491860141611601840010582020022313608202813645101288432599040000  diafora 840454685324153053024644282544845359773063727174579750577440292864 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 448442115033553395339109624777993.75 ^2 ::== 201100330535766736143728755043382433449434358086039250298822721536 as intpart 201100330535766736143728755043381764129917437580915260039530283008  diafora 677846214929997918720926109521485939674963508716271414891385978880 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 112110528758388348834777406194498.4375 ^2 ::== 12568770658485421008983047190211402090589647380377453143676420096 as intpart 12568770658485421008983047190211303213842829578484136400826400768  diafora 866377774807279233855671817374656465241218728358402014861953335296 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 11211052875838834883477740619449.84375 ^2 ::== 125687706584854210089830471902114012190798597234697396146929664 as intpart 125687706584854210089830471902095096466998316624096937528786944  diafora 878820857759179800654565034092965614135543080207669703151148072960 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 280276321895970872086943515486246.09375 ^2 ::== 78554816615533881306144044938821265284573846526760534767208235008 as intpart 78554816615533881306144044938821204437345035571749262925454376960  diafora 800391728850230773558510819626046489226331108899602200031836241920 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 117192872728768620648620648608649 ^2 ::== 13734169418421359885684415739993910026918745570194797932568379392 as intpart 13734169418421359885684415739993910026918745570194797932568379392  diafora 865212376047343294978970448824873849554588610769085542853288919040 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 292982181821921551621551621521622.5 ^2 ::== 85838558865133499285527598374961944006495160954864494562068398080 as intpart 85838558865133499285527598374961649911555908005643347326924750848  diafora 793107986600631155579127266189906033610915434639872903656740225024 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 29298218182192155162155162152162.25 ^2 ::== 858385588651334992855275983749619376682421598137174870785523712 as intpart 858385588651334992855275983749604798700518973499057658698661888  diafora 878088159877113319871799588581118027067008864371669082334310694912 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 732455454554803879053879053804056.25 ^2 ::== 536490992907084370534547489843512182999510361901867529927210827776 as intpart 536490992907084370534547489843511777351318288868459050982185107456  diafora 342455552558680284330107374721355926453562657428727623948731154432 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 327354393097119052091119130191757.125 ^2 ::== 107160898679983145701479477388298770138690573327910187100176121856 as intpart 107160898679983145701479477388298689009052158721228491311170977792  diafora 771785646785781509163175387176568974231009580272617335725242712064 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 818385982742797630227797825479392.875 ^2 ::== 669755616749894660634246733676867424920068903383626001085982834688 as intpart 669755616749894660634246733676865964586577440463355476883890241536  diafora 209190928715869994230408130888001739218303505833831198047026020352 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 81838598274279763022779782547939.28125 ^2 ::== 6697556167498946606342467336768673133668160832994386693761007616 as intpart 6697556167498946606342467336768626230595952388506531315742408704  diafora 872248989298265708258312397228099144759766806004838422940443738112 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 204596495685699407556949456369848.21875 ^2 ::== 41859726046868416289640420854804214057504306461476625067873927168 as intpart 41859726046868416289640420854804122786661090028959717305243140096  diafora 837086819418896238575014443710063601300629459919897381572924407808 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 498981624906608612258891588449435.375 ^2 ::== 248982661994439452176595242310871031033031678343370075663622995968 as intpart 248982661994439452176595242310870665949658812613302444613099847680  diafora 629963883471325202688059622253996997290402926380543382423313842176 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 124745406226652153064722897112358.84375 ^2 ::== 15561416374652465761037202644429439439564479896460629728976437248 as intpart 15561416374652465761037202644429229009564842010379981276244344832  diafora 863385129091112189103617661920438457048207701091595072700827041792 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 12474540622665215306472289711235.884765625 ^2 ::== 155614163746524657610372026444294419748656803529194327223828480 as intpart 155614163746524657610372026444272334898355952345090126847672320  diafora 878790931302018130207044492538423463260282799193407044213578661888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 311863515566630382661807242780897.09375 ^2 ::== 97258852341577911006482516527683988891374397983502526825883500544 as intpart 97258852341577911006482516527683928044145587028491254984129642496  diafora 781687693124186743858172348037183775760735359268695419946786619392 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 281174041213775471528264824325419.90625 ^2 ::== 79058841452485907438265284974598797299968180737527738615658971136 as intpart 79058841452485907438265284974598280098523287619931927960751177728  diafora 799887704013278747426389579590269423706357658677254746970165084160 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 702935103034438678820662060813549.75 ^2 ::== 494117759078036921489158031091242455236487924588501533420398051328 as intpart 494117759078036921489158031091241400551188534701639488163331178496  diafora 384828786387727733375496833473626303253692411595547186767585083392 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 70293510303443867882066206081354.9765625 ^2 ::== 4941177590780369214891580310912424831248011296095483663478685696 as intpart 4941177590780369214891580310912287291157886533205421271180902400  diafora 874005367874984285649763284253955341722337646298446565354246242304 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 175733775758609669705165515203387.4375 ^2 ::== 30882359942377307593072376943202653452280495286781345838774878208 as intpart 30882359942377307593072376943202496263606066986335560247577411584  diafora 848064185523387347271582487621665156835250870181675054815210635264 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 121087721936434343247990494586236.640625 ^2 ::== 14662236403755242856971092852515745639493326763413108346455064576 as intpart 14662236403755242856971092852515590986120098919426125748664008704  diafora 864284309062009412007683771712352107748158446464842943195439431680 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 302719304841085858119976236465591.59375 ^2 ::== 91638977523470267856069330328223408345357391928987824920289345536 as intpart 91638977523470267856069330328223053403189328024755405843391840256  diafora 787307567942294387008585534236644619978077212794925633166647492608 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 30271930484108585811997623646559.16015625 ^2 ::== 916389775234702678560693303282234102468332922713319271653441536 as intpart 916389775234702678560693303282224436632506182464132859291500544  diafora 878030155690529952186094171261585529757359799186841251565577175040 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 756798262102714645299940591163979 ^2 ::== 572743609521689174100433314551396342723302906859514753646310981632 as intpart 572743609521689174100433314551396342723302906859514753646310981632  diafora 306202935944075480764221550013471361081578039437671921284605280256 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 116865518335671501596529529478457.328125 ^2 ::== 13657549375865171936507857913661297686370913865561434250008330240 as intpart 13657549375865171936507857913661221627334900171797344447816007680  diafora 865288996089899482928147006651206403583208831975166437687501520896 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 292163795839178753991323823696143.3125 ^2 ::== 85359683599157324603174111960383106103041110860956058824090845184 as intpart 85359683599157324603174111960382923561354677995922243298829271040  diafora 793586861866607330261480752604484780243526268301264431632086990848 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 29216379583917875399132382369614.33203125 ^2 ::== 853596835991573246031741119603831105398182116597589640625520640 as intpart 853596835991573246031741119603811615270203607570541628813737984  diafora 878092948629773081618623123445263902964640844629566046024079769600 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 730409489597946884978309559240358.25 ^2 ::== 533498022494733278769838199752394347226175731013046489822001102848 as intpart 533498022494733278769838199752394022707622072586319706665980526592  diafora 345448522971031376094816664812473681097258873710866968264935735296 from 878946545465764654864654864564867703804880946297186674930916261888
the size of xpl vector is 44 64
 of 818385982742797630227797825479392.875 ^2 ::== 669755616749894660634246733676867424920068903383626001085982834688 as intpart 669755616749894660634246733676865964586577440463355476883890241536  diafora 209190928715869994230408130888001739218303505833831198047026020352 from 878946545465764654864654864564867703804880946297186674930916261888

-------------------------------------------------------------------------

10 |25| 35 |15| 937521490668755099372400243128442.25  and main 878946545465764654864654864564867703804880946297186674930916261888
-------------------------------------------------------------------------
section_temp 0
section h inf
878946545465764654864654864564867703804880946297186674930916261888 / 25 ::== 35157861818630586194586194582594708760667525961437579715654189056
            ----->  | *2 70315723637261172389172389165189417521335051922875159431308378112
            ----->  /2 17578930909315293097293097291297354380333762980718789857827094528
                 --> 8789465454657646548646548645648677190166881490359394928913547264
                 --> 4394732727328823274323274322824338595083440745179697464456773632
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 494430099063168955884638966639780781251484444178683149519712944128 703157236372611723891723891651894.25
i insert 30901881191448059742789935414986126427736146721969093293346127872 175789309093152930972930972912973.5625
i insert 0 0
i insert 309018811914480597427899354149850685733102562645335442945212416 17578930909315293097293097291297.35546875
i insert 193136757446550373392437096343663717371603193925615137472393510912 439473272732882327432327432282433.875
CDIS Start 
section_temp 0
section h inf
35157861818630586194586194582594708760667525961437579715654189056 / 16 ::== 2197366363664411637161637161412169297541720372589848732228386816
            ----->  | *2 4394732727328823274323274322824338595083440745179697464456773632
            ----->  /2 1098683181832205818580818580706084648770860186294924366114193408
                 --> 549341590916102909290409290353042324385430093147462183057096704
                 --> 274670795458051454645204645176521162192715046573731091528548352
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 193136757446550373392437096343663717371603193925615137472393510912 439473272732882327432327432282433.875
i insert 12071047340409398337027318521478927826749389806486681733786763264 109868318183220581858081858070608.46875
i insert 0 0
i insert 120710473404093983370273185214771690407697356524564426516332544 10986831818322058185808185807060.84765625
i insert 75444045877558739606420740759243846225330334828585857037776191488 274670795458051454645204645176521.1875
section_temp 0
section h inf
2197366363664411637161637161412169297541720372589848732228386816 / 7 ::== 313909480523487376737376737344595602616222551189358734097776640
            ----->  | *2 627818961046974753474753474689191205232445102378717468195553280
            ----->  /2 156954740261743688368688368672297801308111275594679367048888320
                 --> 78477370130871844184344184336148900654055637797339683524444160
                 --> 39238685065435922092172092168074450327027818898669841762222080
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 394156647850102802841708359885029262079561750489313303545363038208 627818961046974753474753474689191
i insert 24634790490631425177606772492814093096960966954913403084788989952 156954740261743688368688368672297.75
i insert 0 0
i insert 246347904906314251776067724928118959415581213763032589239582720 15695474026174368836868836867229.775390625
i insert 153967440566446407360042328080089254432811254580405153730396160000 392386850654359220921720921680744.375
CDIS End 
section_temp 0
section h inf
878946545465764654864654864564867703804880946297186674930916261888 / 15 ::== 58596436364384310324310324304324516291313343573368501521694588928
            ----->  | *2 117192872728768620648620648608649032582626687146737003043389177856
            ----->  /2 29298218182192155162155162152162258145656671786684250760847294464
                 --> 14649109091096077581077581076081129072828335893342125380423647232
                 --> 7324554545548038790538790538040564536414167946671062690211823616
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 13734169418421359885684415739993910026918745570194797932568379392 117192872728768620648620648608649
i insert 85838558865133499285527598374961649911555908005643347326924750848 292982181821921551621551621521622.5
i insert 0 0
i insert 858385588651334992855275983749604798700518973499057658698661888 29298218182192155162155162152162.25
i insert 536490992907084370534547489843511777351318288868459050982185107456 732455454554803879053879053804056.25
section_temp 0
section h inf
58596436364384310324310324304324516291313343573368501521694588928 / 358 ::== 163677196548559526045559565095878540224881616684550915729915904
            ----->  | *2 327354393097119052091119130191757080449763233369101831459831808
            ----->  /2 81838598274279763022779782547939270112440808342275457864957952
                 --> 40919299137139881511389891273969635056220404171137728932478976
                 --> 20459649568569940755694945636984817528110202085568864466239488
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 107160898679983145701479477388298689009052158721228491311170977792 327354393097119052091119130191757.125
i insert 669755616749894660634246733676865964586577440463355476883890241536 818385982742797630227797825479392.875
i insert 0 0
i insert 6697556167498946606342467336768626230595952388506531315742408704 81838598274279763022779782547939.28125
i insert 41859726046868416289640420854804122786661090028959717305243140096 204596495685699407556949456369848.21875
removals 
reporing rt 4
section_temp 0
section h inf
35157861818630586194586194582594708760667525961437579715654189056 - 163677196548559526045559565095878540224881616684550915729915904 ::== 34994184622082026668540635017498832518059357258418819012698832896
            ----->  | *2 69988369244164053337081270034997665036118714516837638025397665792
            ----->  /2 17497092311041013334270317508749416259029678629209409506349416448
                 --> 8748546155520506667135158754374708129514839314604704753174708224
                 --> 4374273077760253333567579377187354064757419657302352376587354112
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 489837182945744878259873556238917694321356314781472732451537158144 699883692441640533370812700349976.75
i insert 30614823934109054891242097264932355895084769673842045778221072384 174970923110410133342703175087494.1875
i insert 0 0
i insert 306148239341090548912420972649309579933853679938695452887613440 17497092311041013334270317508749.41796875
i insert 191342649588181593070263107905827235753135212515577399584210550784 437427307776025333356757937718735.4375
section_temp 0
section h inf
2197366363664411637161637161412169297541720372589848732228386816 - 163677196548559526045559565095878540224881616684550915729915904 ::== 2033689167115852111116077596316290836545001270169635410042421248
            ----->  | *2 4067378334231704222232155192632581673090002540339270820084842496
            ----->  /2 1016844583557926055558038798158145418272500635084817705021210624
                 --> 508422291778963027779019399079072709136250317542408852510605312
                 --> 254211145889481513889509699539536354568125158771204426255302656
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 165435665137774730228604651438789121367399260840386519516745564160 406737833423170422223215519263258.3125
i insert 10339729071110920639287790714924218673414435544172037733540167680 101684458355792605555803879815814.578125
i insert 0 0
i insert 103397290711109206392877907149234061886078517633900159403294720 10168445835579260555580387981581.45703125
i insert 64623306694443253995548691968276873769080313442835834515908198400 254211145889481513889509699539536.4375
section_temp 0
section h inf
313909480523487376737376737344595602616222551189358734097776640 - 163677196548559526045559565095878540224881616684550915729915904 ::== 150232283974927850691817172248717062391340934504807818367860736
            ----->  | *2 300464567949855701383634344497434124782681869009615636735721472
            ----->  /2 75116141987463925345908586124358531195670467252403909183930368
                 --> 37558070993731962672954293062179265597835233626201954591965184
                 --> 18779035496865981336477146531089632798917616813100977295982592
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 90278956593293453959655841862496619774336358479056659977236119552 300464567949855701383634344497434.09375
i insert 564243478708084087247849011640603858377795037755351306897287282688 751161419874639253459085861243585.25
i insert 0 0
i insert 5642434787080840872478490116405963310685308825291652194736537600 75116141987463925345908586124358.5234375
i insert 35265217419255255452990563227537649877768973427192548918449668096 187790354968659813364771465310896.3125
section_temp 0
section h inf
58596436364384310324310324304324516291313343573368501521694588928 - 163677196548559526045559565095878540224881616684550915729915904 ::== 58432759167835750798264764739228634978102773957432134831926411264
            ----->  | *2 116865518335671501596529529478457269956205547914864269663852822528
            ----->  /2 29216379583917875399132382369614317489051386978716067415963205632
                 --> 14608189791958937699566191184807158744525693489358033707981602816
                 --> 7304094895979468849783095592403579372262846744679016853990801408
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 13657549375865171936507857913661221627334900171797344447816007680 116865518335671501596529529478457.328125
i insert 85359683599157324603174111960382923561354677995922243298829271040 292163795839178753991323823696143.3125
i insert 0 0
i insert 853596835991573246031741119603811615270203607570541628813737984 29216379583917875399132382369614.33203125
i insert 533498022494733278769838199752394022707622072586319706665980526592 730409489597946884978309559240358.25
ending sqti reporting the results 
reporting size of xl vector 44 64
entering amfidromi loop of xl vector  with first 
 of 703157236372611723891723891651894.25 ^2 ::== 494430099063168955884638966639781186899676517212091628464738664448 as intpart 494430099063168955884638966639780781251484444178683149519712944128  diafora 384516446402595698980015897925086922553396502118503525411203317760 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 175789309093152930972930972912973.5625 ^2 ::== 30901881191448059742789935414986324181229782325755726779046166528 as intpart 30901881191448059742789935414986126427736146721969093293346127872  diafora 848044664274316595121864929149881612871361605965640823545259884544 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 17578930909315293097293097291297.35546875 ^2 ::== 309018811914480597427899354149863203782779816410675222889365504 as intpart 309018811914480597427899354149850685733102562645335442945212416  diafora 878637526653850174267226965210717839650360216309603948585499492352 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 439473272732882327432327432282433.875 ^2 ::== 193136757446550373392437096343664488103168132689091247467942379520 as intpart 193136757446550373392437096343663717371603193925615137472393510912  diafora 685809788019214281472217768221203986433277752371571537458522750976 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 439473272732882327432327432282433.875 ^2 ::== 193136757446550373392437096343664488103168132689091247467942379520 as intpart 193136757446550373392437096343663717371603193925615137472393510912  diafora 685809788019214281472217768221203986433277752371571537458522750976 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 109868318183220581858081858070608.46875 ^2 ::== 12071047340409398337027318521479030506448008293068202966746398720 as intpart 12071047340409398337027318521478927826749389806486681733786763264  diafora 866875498125355256527627546043388746822167751241423758772955774976 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 10986831818322058185808185807060.84765625 ^2 ::== 120710473404093983370273185214790328832928837209983307730649088 as intpart 120710473404093983370273185214771690407697356524564426516332544  diafora 878825834992360560881284591379652961290244094818504429326959640576 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 274670795458051454645204645176521.1875 ^2 ::== 75444045877558739606420740759243947637378353086937976774032621568 as intpart 75444045877558739606420740759243846225330334828585857037776191488  diafora 803502499588205915258234123805623857579550611468600817893140070400 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 627818961046974753474753474689191 ^2 ::== 394156647850102802841708359885029262079561750489313303545363038208 as intpart 394156647850102802841708359885029262079561750489313303545363038208  diafora 484789897615661852022946504679838401160499988504532523491050651648 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 156954740261743688368688368672297.75 ^2 ::== 24634790490631425177606772492814328879972609405582081471585189888 as intpart 24634790490631425177606772492814093096960966954913403084788989952  diafora 854311754975133229687048092072053585354907974777685241912063164416 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 15695474026174368836868836867229.775390625 ^2 ::== 246347904906314251776067724928143282461473092914673807232335872 as intpart 246347904906314251776067724928118959415581213763032589239582720  diafora 878700197560858340612878796839939601562607655593198874579450200064 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 392386850654359220921720921680744.375 ^2 ::== 153967440566446407360042328080089558668955309355461512939165450240 as intpart 153967440566446407360042328080089254432811254580405153730396160000  diafora 724979104899318247504612536484778489936888899020122369095022673920 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 117192872728768620648620648608649 ^2 ::== 13734169418421359885684415739993910026918745570194797932568379392 as intpart 13734169418421359885684415739993910026918745570194797932568379392  diafora 865212376047343294978970448824873849554588610769085542853288919040 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 292982181821921551621551621521622.5 ^2 ::== 85838558865133499285527598374961944006495160954864494562068398080 as intpart 85838558865133499285527598374961649911555908005643347326924750848  diafora 793107986600631155579127266189906033610915434639872903656740225024 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 29298218182192155162155162152162.25 ^2 ::== 858385588651334992855275983749619376682421598137174870785523712 as intpart 858385588651334992855275983749604798700518973499057658698661888  diafora 878088159877113319871799588581118027067008864371669082334310694912 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 732455454554803879053879053804056.25 ^2 ::== 536490992907084370534547489843512182999510361901867529927210827776 as intpart 536490992907084370534547489843511777351318288868459050982185107456  diafora 342455552558680284330107374721355926453562657428727623948731154432 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 327354393097119052091119130191757.125 ^2 ::== 107160898679983145701479477388298770138690573327910187100176121856 as intpart 107160898679983145701479477388298689009052158721228491311170977792  diafora 771785646785781509163175387176568974231009580272617335725242712064 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 818385982742797630227797825479392.875 ^2 ::== 669755616749894660634246733676867424920068903383626001085982834688 as intpart 669755616749894660634246733676865964586577440463355476883890241536  diafora 209190928715869994230408130888001739218303505833831198047026020352 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 81838598274279763022779782547939.28125 ^2 ::== 6697556167498946606342467336768673133668160832994386693761007616 as intpart 6697556167498946606342467336768626230595952388506531315742408704  diafora 872248989298265708258312397228099144759766806004838422940443738112 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 204596495685699407556949456369848.21875 ^2 ::== 41859726046868416289640420854804214057504306461476625067873927168 as intpart 41859726046868416289640420854804122786661090028959717305243140096  diafora 837086819418896238575014443710063601300629459919897381572924407808 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 699883692441640533370812700349976.75 ^2 ::== 489837182945744878259873556238918749006655704668334777708604030976 as intpart 489837182945744878259873556238917694321356314781472732451537158144  diafora 389109362520019776604781308325950009483524631515713942479379103744 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 174970923110410133342703175087494.1875 ^2 ::== 30614823934109054891242097264932421812915981541770923606787751936 as intpart 30614823934109054891242097264932355895084769673842045778221072384  diafora 848331721531655599973412767299935423968832190317108718954887512064 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 17497092311041013334270317508749.41796875 ^2 ::== 306148239341090548912420972649324197529837561708981461746450432 as intpart 306148239341090548912420972649309579933853679938695452887613440  diafora 878640397226423564315742443592218393987262605074454966697396797440 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 437427307776025333356757937718735.4375 ^2 ::== 191342649588181593070263107905827621118917681897315454581984985088 as intpart 191342649588181593070263107905827235753135212515577399584210550784  diafora 687603895877583061794391756659040468051745733781609275346705711104 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 406737833423170422223215519263258.3125 ^2 ::== 165435665137774730228604651438789385038724108312102030831012282368 as intpart 165435665137774730228604651438789121367399260840386519516745564160  diafora 713510880327989924636050213126078582437481685456800155414170697728 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 101684458355792605555803879815814.578125 ^2 ::== 10339729071110920639287790714924336564920256769506376926938267648 as intpart 10339729071110920639287790714924218673414435544172037733540167680  diafora 868606816394653734225367073849943444566647303449673789302873522176 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 10168445835579260555580387981581.45703125 ^2 ::== 103397290711109206392877907149243351388133315127483002431471616 as intpart 103397290711109206392877907149234061886078517633900159403294720  diafora 878843148175053545658261986657718508267688890340586929632258818048 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 254211145889481513889509699539536.4375 ^2 ::== 64623306694443253995548691968277096875585953611210497935672344576 as intpart 64623306694443253995548691968276873769080313442835834515908198400  diafora 814323238771321400869106172596590799612186227376845204494131134464 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 300464567949855701383634344497434.09375 ^2 ::== 90278956593293453959655841862496670480360367608232719845364334592 as intpart 90278956593293453959655841862496619774336358479056659977236119552  diafora 788667588872471200904999022702371063748134984166459591006428856320 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 751161419874639253459085861243585.25 ^2 ::== 564243478708084087247849011640604264025987110788759785842313003008 as intpart 564243478708084087247849011640603858377795037755351306897287282688  diafora 314703066757680567616805852924263845427085908541835368033628979200 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 75116141987463925345908586124358.5234375 ^2 ::== 5642434787080840872478490116406041905022522975514544990335270912 as intpart 5642434787080840872478490116405963310685308825291652194736537600  diafora 873304110678683813992176374448461699295551130054439474093325549568 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 187790354968659813364771465310896.3125 ^2 ::== 35265217419255255452990563227537766501624194424297486615144562688 as intpart 35265217419255255452990563227537649877768973427192548918449668096  diafora 843681328046509399411664301337330013362292765566653278117964021760 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 116865518335671501596529529478457.328125 ^2 ::== 13657549375865171936507857913661297686370913865561434250008330240 as intpart 13657549375865171936507857913661221627334900171797344447816007680  diafora 865288996089899482928147006651206403583208831975166437687501520896 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 292163795839178753991323823696143.3125 ^2 ::== 85359683599157324603174111960383106103041110860956058824090845184 as intpart 85359683599157324603174111960382923561354677995922243298829271040  diafora 793586861866607330261480752604484780243526268301264431632086990848 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 29216379583917875399132382369614.33203125 ^2 ::== 853596835991573246031741119603831105398182116597589640625520640 as intpart 853596835991573246031741119603811615270203607570541628813737984  diafora 878092948629773081618623123445263902964640844629566046024079769600 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 730409489597946884978309559240358.25 ^2 ::== 533498022494733278769838199752394347226175731013046489822001102848 as intpart 533498022494733278769838199752394022707622072586319706665980526592  diafora 345448522971031376094816664812473681097258873710866968264935735296 from 878946545465764654864654864564867703804880946297186674930916261888
the size of xpl vector is 44 64
 of 818385982742797630227797825479392.875 ^2 ::== 669755616749894660634246733676867424920068903383626001085982834688 as intpart 669755616749894660634246733676865964586577440463355476883890241536  diafora 209190928715869994230408130888001739218303505833831198047026020352 from 878946545465764654864654864564867703804880946297186674930916261888

-------------------------------------------------------------------------

10 26 |36 16| 937521490668755099372400243128442.25  and main 878946545465764654864654864564867703804880946297186674930916261888
-------------------------------------------------------------------------
section_temp 0
section h inf
878946545465764654864654864564867703804880946297186674930916261888 / 36 ::== 24415181818493462635129301793468547609613493003417274636237275136
            ----->  | *2 48830363636986925270258603586937095219226986006834549272474550272
            ----->  /2 12207590909246731317564650896734273804806746501708637318118637568
                 --> 6103795454623365658782325448367136902403373250854318659059318784
                 --> 3051897727311682829391162724183568451201686625427159329529659392
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 238440441292037498015354439930449998834159652667892933826491449344 488303636369869252702586035869371.0625
i insert 14902527580752343625959652495652942385448545426709492838894141440 122075909092467313175646508967342.765625
i insert 0 0
i insert 149025275807523436259596524956524539438266449870682286404403200 12207590909246731317564650896734.27734375
i insert 93140797379702147662247828097831499015166818581161749408978567168 305189772731168282939116272418356.90625
CDIS Start 
section_temp 0
section h inf
24415181818493462635129301793468547609613493003417274636237275136 / 16 ::== 1525948863655841414695581362091784225600843312713579664764829696
            ----->  | *2 3051897727311682829391162724183568451201686625427159329529659392
            ----->  /2 762974431827920707347790681045892112800421656356789832382414848
                 --> 381487215913960353673895340522946056400210828178394916191207424
                 --> 190743607956980176836947670261473028200105414089197458095603712
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 93140797379702147662247828097831499015166818581161749408978567168 305189772731168282939116272418356.90625
i insert 582129983623138422889048925611449936559245168447412555827873054720 762974431827920707347790681045892.25
i insert 0 0
i insert 5821299836231384228890489256114468688447926161322609338061160448 76297443182792070734779068104589.2265625
i insert 36383123976446151430565557850715621034952823027963284739242065920 190743607956980176836947670261473.0625
section_temp 0
section h inf
1525948863655841414695581362091784225600843312713579664764829696 / 7 ::== 217992694807977344956511623155969175085834758959082809252118528
            ----->  | *2 435985389615954689913023246311938350171669517918165618504237056
            ----->  /2 108996347403988672478255811577984587542917379479541404626059264
                 --> 54498173701994336239127905788992293771458689739770702313029632
                 --> 27249086850997168119563952894496146885729344869885351156514816
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 190083259958575811555607812444554839178332746100640875185795235840 435985389615954689913023246311938.375
i insert 11880203747410988222225488277784568430694177003561525982636539904 108996347403988672478255811577984.59375
i insert 0 0
i insert 118802037474109882222254882777836958117122448961472706895675392 10899634740398867247825581157798.458984375
i insert 74251273421318676388909301736154097464684054353844830599680884736 272490868509971681195639528944961.5
CDIS End 
section_temp 0
section h inf
878946545465764654864654864564867703804880946297186674930916261888 / 16 ::== 54934159091610290929040929035304231487805059143574167183182266368
            ----->  | *2 109868318183220581858081858070608462975610118287148334366364532736
            ----->  /2 27467079545805145464520464517652115743902529571787083591591133184
                 --> 13733539772902572732260232258826057871951264785893541795795566592
                 --> 6866769886451286366130116129413028935975632392946770897897783296
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 12071047340409398337027318521478927826749389806486681733786763264 109868318183220581858081858070608.46875
i insert 75444045877558739606420740759243846225330334828585857037776191488 274670795458051454645204645176521.1875
i insert 0 0
i insert 754440458775587396064207407592432989171836862905417608361672704 27467079545805145464520464517652.1171875
i insert 471525286734742122540129629745274708227831513183785596745393635328 686676988645128636613011612941303
section_temp 0
section h inf
54934159091610290929040929035304231487805059143574167183182266368 / 358 ::== 153447371764274555667712092277386116605546044217203184707305472
            ----->  | *2 306894743528549111335424184554772233211092088434406369414610944
            ----->  /2 76723685882137277833856046138693058302773022108601592353652736
                 --> 38361842941068638916928023069346529151386511054300796176826368
                 --> 19180921470534319458464011534673264575693255527150398088413184
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 94184383605453936651690946923309271199385051652241757949984243712 306894743528549111335424184554772.3125
i insert 588652397534087104073068418270682944996156572826510987187401523200 767236858821372778338560461386930.75
i insert 0 0
i insert 5886523975340871040730684182706829449961565728265109871874015232 76723685882137277833856046138693.078125
i insert 36790774845880444004566776141917491379368551110787909200325378048 191809214705343194584640115346732.6875
removals 
reporing rt 4
section_temp 0
section h inf
24415181818493462635129301793468547609613493003417274636237275136 - 153447371764274555667712092277386116605546044217203184707305472 ::== 24261734446729188079461589701191160779954484330821033109634416640
            ----->  | *2 48523468893458376158923179402382321559908968661642066219268833280
            ----->  /2 12130867223364594039730794850595580389977242165410516554817208320
                 --> 6065433611682297019865397425297790194988621082705258277408604160
                 --> 3032716805841148509932698712648895097494310541352629138704302080
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 235452703345442264802681354891938106240044433857392639602665193472 485234688934583761589231794023823.1875
i insert 14715793959090141550167584680745949098316344251053224449905000448 121308672233645940397307948505955.796875
i insert 0 0
i insert 147157939590901415501675846807447354813229507499299665436737536 12130867223364594039730794850595.580078125
i insert 91973712244313384688547404254663086333180414410760620709643288576 303271680584114850993269871264889.5
section_temp 0
section h inf
1525948863655841414695581362091784225600843312713579664764829696 - 153447371764274555667712092277386116605546044217203184707305472 ::== 1372501491891566859027869269814398188223459782760714073601474560
            ----->  | *2 2745002983783133718055738539628796376446919565521428147202949120
            ----->  /2 686250745945783429513934634907199094111729891380357036800737280
                 --> 343125372972891714756967317453599547055864945690178518400368640
                 --> 171562686486445857378483658726799773527932472845089259200184320
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 75350413809783070739150649234539897427727162432506767362591031296 274500298378313371805573853962879.65625
i insert 470940086311144192119691557715876432799676738586468144622637940736 686250745945783429513934634907199.125
i insert 0 0
i insert 4709400863111441921196915577158640275709029051335450978850701312 68625074594578342951393463490719.9140625
i insert 29433755394446512007480722357242018449257349602856353711460974592 171562686486445857378483658726799.78125
section_temp 0
section h inf
217992694807977344956511623155969175085834758959082809252118528 - 153447371764274555667712092277386116605546044217203184707305472 ::== 64545323043702789288799530878583058480288714741879624544813056
            ----->  | *2 129090646087405578577599061757166116960577429483759249089626112
            ----->  /2 32272661521851394644399765439291529240144357370939812272406528
                 --> 16136330760925697322199882719645764620072178685469906136203264
                 --> 8068165380462848661099941359822882310036089342734953068101632
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 16664394907263801212811783188937751094075885974651522656224935936 129090646087405578577599061757166.125
i insert 104152468170398757580073644930860950676227288482719024084921876480 322726615218513946443997654392915.3125
i insert 0 0
i insert 1041524681703987575800736449308577276745762082094657187170222080 32272661521851394644399765439291.53125
i insert 650952926064992234875460280817881753022804699083810858420813168640 806816538046284866109994135982288.25
section_temp 0
section h inf
54934159091610290929040929035304231487805059143574167183182266368 - 153447371764274555667712092277386116605546044217203184707305472 ::== 54780711719846016373373216943026849728748451383895531643392229376
            ----->  | *2 109561423439692032746746433886053699457496902767791063286784458752
            ----->  /2 27390355859923008186686608471513424864374225691947765821696114688
                 --> 13695177929961504093343304235756712432187112845973882910848057344
                 --> 6847588964980752046671652117878356216093556422986941455424028672
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 12003705506131498772321359494428711719550676944401203819951685632 109561423439692032746746433886053.671875
i insert 75023159413321867327008496840180264931090927939299438125738098688 273903558599230081866866084715134.1875
i insert 0 0
i insert 750231594133218673270084968401780775999802341294671555643572224 27390355859923008186686608471513.41796875
i insert 468894746333261670793803105251126653284017099164162685292456706048 684758896498075204667165211787835.5
ending sqti reporting the results 
reporting size of xl vector 44 64
entering amfidromi loop of xl vector  with first 
 of 488303636369869252702586035869371.0625 ^2 ::== 238440441292037498015354439930450079963798067274574629615496593408 as intpart 238440441292037498015354439930449998834159652667892933826491449344  diafora 640506104173727156849300424634417664405902086325952893209922240512 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 122075909092467313175646508967342.765625 ^2 ::== 14902527580752343625959652495653129997737379204660914350968537088 as intpart 14902527580752343625959652495652942385448545426709492838894141440  diafora 864044017885012311238695212069214738601721596762347955151364423680 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 12207590909246731317564650896734.27734375 ^2 ::== 149025275807523436259596524956531313446161419471546534412156928 as intpart 149025275807523436259596524956524539438266449870682286404403200  diafora 878797520189957131428395268039911151436550596711967412912199303168 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 305189772731168282939116272418356.90625 ^2 ::== 93140797379702147662247828097832056781430919002098407958388932608 as intpart 93140797379702147662247828097831499015166818581161749408978567168  diafora 785805748086062507202407036467036184507304524064354501574686408704 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 305189772731168282939116272418356.90625 ^2 ::== 93140797379702147662247828097832056781430919002098407958388932608 as intpart 93140797379702147662247828097831499015166818581161749408978567168  diafora 785805748086062507202407036467036184507304524064354501574686408704 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 762974431827920707347790681045892.25 ^2 ::== 582129983623138422889048925611450342207437241480821034772898775040 as intpart 582129983623138422889048925611449936559245168447412555827873054720  diafora 296816561842626231975605938953417767245635777849774119103043207168 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 76297443182792070734779068104589.2265625 ^2 ::== 5821299836231384228890489256114503548839432437631150497399308288 as intpart 5821299836231384228890489256114468688447926161322609338061160448  diafora 873125245629533270635764375308753269342999226298057906003841646592 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 190743607956980176836947670261473.0625 ^2 ::== 36383123976446151430565557850715646387964827592551314673306173440 as intpart 36383123976446151430565557850715621034952823027963284739242065920  diafora 842563421489318503434089306714152123334747330572564238086176768000 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 435985389615954689913023246311938.375 ^2 ::== 190083259958575811555607812444555163696886404527367658341815812096 as intpart 190083259958575811555607812444554839178332746100640875185795235840  diafora 688863285507188843309047052120312844344138596544875375797869740032 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 108996347403988672478255811577984.59375 ^2 ::== 11880203747410988222225488277784697731055400282960478646363488256 as intpart 11880203747410988222225488277784568430694177003561525982636539904  diafora 867066341718353666642429376287083156924246973173524974392234213376 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 10899634740398867247825581157798.458984375 ^2 ::== 118802037474109882222254882777846960672639874834093891819405312 as intpart 118802037474109882222254882777836958117122448961472706895675392  diafora 878827743428290544982432609682089864826445679734484593588649852928 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 272490868509971681195639528944961.5 ^2 ::== 74251273421318676388909301736154371277213703651395553887573245952 as intpart 74251273421318676388909301736154097464684054353844830599680884736  diafora 804695272044445978475745562828713636763811297420847480252112306176 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 109868318183220581858081858070608.46875 ^2 ::== 12071047340409398337027318521479030506448008293068202966746398720 as intpart 12071047340409398337027318521478927826749389806486681733786763264  diafora 866875498125355256527627546043388746822167751241423758772955774976 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 274670795458051454645204645176521.1875 ^2 ::== 75444045877558739606420740759243947637378353086937976774032621568 as intpart 75444045877558739606420740759243846225330334828585857037776191488  diafora 803502499588205915258234123805623857579550611468600817893140070400 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 27467079545805145464520464517652.1171875 ^2 ::== 754440458775587396064207407592439406653000518316762685421649920 as intpart 754440458775587396064207407592432989171836862905417608361672704  diafora 878192105006989067468590657157275238569846966128695856750166802432 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 686676988645128636613011612941303 ^2 ::== 471525286734742122540129629745274708227831513183785596745393635328 as intpart 471525286734742122540129629745274708227831513183785596745393635328  diafora 407421258731022532324525234819592995577049433113401078185522626560 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 306894743528549111335424184554772.3125 ^2 ::== 94184383605453936651690946923309463882276286343110785448871460864 as intpart 94184383605453936651690946923309271199385051652241757949984243712  diafora 784762161860310718212963917641558432605495894644944916980932018176 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 767236858821372778338560461386930.75 ^2 ::== 588652397534087104073068418270684080811094377320054728233473540096 as intpart 588652397534087104073068418270682944996156572826510987187401523200  diafora 290294147931677550791586446294184758808724373470675687743514738688 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 76723685882137277833856046138693.078125 ^2 ::== 5886523975340871040730684182706841492642267896444424090554466304 as intpart 5886523975340871040730684182706829449961565728265109871874015232  diafora 873060021490423783823924180382160854072509776917251141111790960640 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 191809214705343194584640115346732.6875 ^2 ::== 36790774845880444004566776141917755050693398582503420514592096256 as intpart 36790774845880444004566776141917491379368551110787909200325378048  diafora 842155770619884210860088088422950176931295588795975523822901133312 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 485234688934583761589231794023823.1875 ^2 ::== 235452703345442264802681354891938268499321263070756031180675481600 as intpart 235452703345442264802681354891938106240044433857392639602665193472  diafora 643493842120322390061973509672929638129655719743134883222753640448 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 121308672233645940397307948505955.796875 ^2 ::== 14715793959090141550167584680746141781207578941922251948792217600 as intpart 14715793959090141550167584680745949098316344251053224449905000448  diafora 864230751506674513314487279884121726818251397025086617553540743168 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 12130867223364594039730794850595.580078125 ^2 ::== 147157939590901415501675846807461437619116417985306917873909760 as intpart 147157939590901415501675846807447354813229507499299665436737536  diafora 878799387526173753449153188718060187244267760579788487304838905856 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 303271680584114850993269871264889.5 ^2 ::== 91973712244313384688547404254663390569324469185816979918412578816 as intpart 91973712244313384688547404254663086333180414410760620709643288576  diafora 786972833221451270176107460310204576906881324583085206326770401280 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 274500298378313371805573853962879.65625 ^2 ::== 75350413809783070739150649234540252369895226336739186439488536576 as intpart 75350413809783070739150649234539897427727162432506767362591031296  diafora 803596131655981584125504215330327786094744180213009483621073944576 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 686250745945783429513934634907199.125 ^2 ::== 470940086311144192119691557715876595058953567799831536200648228864 as intpart 470940086311144192119691557715876432799676738586468144622637940736  diafora 408006459154620462744963306848991271005204207710718530308278321152 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 68625074594578342951393463490719.9140625 ^2 ::== 4709400863111441921196915577158765773118451646046199152468033536 as intpart 4709400863111441921196915577158640275709029051335450978850701312  diafora 874237144602653212943457948987709121207274227630288992052061405184 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 171562686486445857378483658726799.78125 ^2 ::== 29433755394446512007480722357242287191184597987489471012540514304 as intpart 29433755394446512007480722357242018449257349602856353711460974592  diafora 849512790071318142857174142207625629578997186652236655364514250752 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 129090646087405578577599061757166.125 ^2 ::== 16664394907263801212811783188937784052991491908615961570508275712 as intpart 16664394907263801212811783188937751094075885974651522656224935936  diafora 862282150558500853651843081375929886792973848454606274446124646400 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 322726615218513946443997654392915.3125 ^2 ::== 104152468170398757580073644930861153500323324999423263557434736640 as intpart 104152468170398757580073644930860950676227288482719024084921876480  diafora 774794077295365897284581219634006753128653657814467650845994385408 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 32272661521851394644399765439291.53125 ^2 ::== 1041524681703987575800736449308611503311968244288497598156767232 as intpart 1041524681703987575800736449308577276745762082094657187170222080  diafora 877905020784060667288854128115559191653684770940377519636873216000 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 806816538046284866109994135982288.25 ^2 ::== 650952926064992234875460280817882158670996772117219337365838888960 as intpart 650952926064992234875460280817881753022804699083810858420813168640  diafora 227993619400772419989194583746985950782076247213375816510103093248 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 109561423439692032746746433886053.671875 ^2 ::== 12003705506131498772321359494428858767020303419011777437523509248 as intpart 12003705506131498772321359494428711719550676944401203819951685632  diafora 866942839959633156092333505070438960394065263647050433693384441856 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 273903558599230081866866084715134.1875 ^2 ::== 75023159413321867327008496840180366343138946197651557861994528768 as intpart 75023159413321867327008496840180264931090927939299438125738098688  diafora 803923386052442787537646367724687449014994820183722448778803806208 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 27390355859923008186686608471513.41796875 ^2 ::== 750231594133218673270084968401803672938768963688236089845219328 as intpart 750231594133218673270084968401780775999802341294671555643572224  diafora 878196313871631436191384779596465937765319371609058795774447452160 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 684758896498075204667165211787835.5 ^2 ::== 468894746333261670793803105251127383450762830624297947393503002624 as intpart 468894746333261670793803105251126653284017099164162685292456706048  diafora 410051799132502984070851759313741050520863847133023989638459555840 from 878946545465764654864654864564867703804880946297186674930916261888
the size of xpl vector is 44 64
 of 806816538046284866109994135982288.25 ^2 ::== 650952926064992234875460280817882158670996772117219337365838888960 as intpart 650952926064992234875460280817881753022804699083810858420813168640  diafora 227993619400772419989194583746985950782076247213375816510103093248 from 878946545465764654864654864564867703804880946297186674930916261888

-------------------------------------------------------------------------

10 |26| 36 |16| 937521490668755099372400243128442.25  and main 878946545465764654864654864564867703804880946297186674930916261888
-------------------------------------------------------------------------
section_temp 0
section h inf
878946545465764654864654864564867703804880946297186674930916261888 / 26 ::== 33805636364067871340948264021725679355386989961301762578323603456
            ----->  | *2 67611272728135742681896528043451358710773979922603525156647206912
            ----->  /2 16902818182033935670474132010862839677693494980650881289161801728
                 --> 8451409091016967835237066005431419838846747490325440644580900864
                 --> 4225704545508483917618533002715709919423373745162720322290450432
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 457128419991835203295709103771986078946369368329324068424973811712 676112727281357426818965280434513.75
i insert 28570526249489700205981818985749043733907270000983452500742897664 169028181820339356704741320108628.4375
i insert 0 0
i insert 285705262494897002059818189857463401520896332447274104069816320 16902818182033935670474132010862.84375
i insert 178565789059310626287386368660932375198123790876304383914197123072 422570454550848391761853300271571.0625
CDIS Start 
section_temp 0
section h inf
33805636364067871340948264021725679355386989961301762578323603456 / 16 ::== 2112852272754241958809266501357854959711686872581360161145225216
            ----->  | *2 4225704545508483917618533002715709919423373745162720322290450432
            ----->  /2 1056426136377120979404633250678927479855843436290680080572612608
                 --> 528213068188560489702316625339463739927921718145340040286306304
                 --> 264106534094280244851158312669731869963960859072670020143153152
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 178565789059310626287386368660932375198123790876304383914197123072 422570454550848391761853300271571.0625
i insert 11160361816206914142961648041308114993557708401093836906736648192 105642613637712097940463325067892.765625
i insert 0 0
i insert 111603618162069141429616480413076913605727446296807242272342016 10564261363771209794046332506789.27734375
i insert 69752261351293213393510300258176250489162473249070408534098706432 264106534094280244851158312669731.90625
section_temp 0
section h inf
2112852272754241958809266501357854959711686872581360161145225216 / 7 ::== 301836038964891708401323785908265005562835626692242536384167936
            ----->  | *2 603672077929783416802647571816530011125671253384485072768335872
            ----->  /2 150918019482445854200661892954132502781417813346121268192083968
                 --> 75459009741222927100330946477066251390708906673060634096041984
                 --> 37729504870611463550165473238533125695354453336530317048020992
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 364419977672062502627319119716187320424990377505840998865122099200 603672077929783416802647571816529.8125
i insert 22776248604503906414207444982261631467525884900350972626877808640 150918019482445854200661892954132.453125
i insert 0 0
i insert 227762486045039064142074449822610261643642759208117579510972416 15091801948244585420066189295413.24609375
i insert 142351553778149415088796531139135953459445116880146272449799913472 377295048706114635501654732385331.125
CDIS End 
section_temp 0
section h inf
878946545465764654864654864564867703804880946297186674930916261888 / 16 ::== 54934159091610290929040929035304231487805059143574167183182266368
            ----->  | *2 109868318183220581858081858070608462975610118287148334366364532736
            ----->  /2 27467079545805145464520464517652115743902529571787083591591133184
                 --> 13733539772902572732260232258826057871951264785893541795795566592
                 --> 6866769886451286366130116129413028935975632392946770897897783296
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 12071047340409398337027318521478927826749389806486681733786763264 109868318183220581858081858070608.46875
i insert 75444045877558739606420740759243846225330334828585857037776191488 274670795458051454645204645176521.1875
i insert 0 0
i insert 754440458775587396064207407592432989171836862905417608361672704 27467079545805145464520464517652.1171875
i insert 471525286734742122540129629745274708227831513183785596745393635328 686676988645128636613011612941303
section_temp 0
section h inf
54934159091610290929040929035304231487805059143574167183182266368 / 358 ::== 153447371764274555667712092277386116605546044217203184707305472
            ----->  | *2 306894743528549111335424184554772233211092088434406369414610944
            ----->  /2 76723685882137277833856046138693058302773022108601592353652736
                 --> 38361842941068638916928023069346529151386511054300796176826368
                 --> 19180921470534319458464011534673264575693255527150398088413184
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 94184383605453936651690946923309271199385051652241757949984243712 306894743528549111335424184554772.3125
i insert 588652397534087104073068418270682944996156572826510987187401523200 767236858821372778338560461386930.75
i insert 0 0
i insert 5886523975340871040730684182706829449961565728265109871874015232 76723685882137277833856046138693.078125
i insert 36790774845880444004566776141917491379368551110787909200325378048 191809214705343194584640115346732.6875
removals 
reporing rt 4
section_temp 0
section h inf
33805636364067871340948264021725679355386989961301762578323603456 - 153447371764274555667712092277386116605546044217203184707305472 ::== 33652188992303596785280551929448292525727981288705521051720744960
            ----->  | *2 67304377984607193570561103858896585051455962577411042103441489920
            ----->  /2 16826094496151798392640275964724146262863990644352760525860372480
                 --> 8413047248075899196320137982362073131431995322176380262930186240
                 --> 4206523624037949598160068991181036565715997661088190131465093120
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 452987929589487747542136690220703279066551226835308926120136540160 673043779846071935705611038588965.875
i insert 28311745599342984221383543138793868741418636157607506106690568192 168260944961517983926402759647241.46875
i insert 0 0
i insert 283117455993429842213835431387935342401165009335741861641322496 16826094496151798392640275964724.146484375
i insert 176948409995893651383647144617462114438022354267731626536015495168 420652362403794959816006899118103.6875
section_temp 0
section h inf
2112852272754241958809266501357854959711686872581360161145225216 - 153447371764274555667712092277386116605546044217203184707305472 ::== 1959404900989967403141554409080468763877978314099819382893969408
            ----->  | *2 3918809801979934806283108818160937527755956628199638765787938816
            ----->  /2 979702450494983701570777204540234381938989157049909691446984704
                 --> 489851225247491850785388602270117190969494578524954845723492352
                 --> 244925612623745925392694301135058595484747289262477422861746176
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 153570702640940158483668386592822724769498489865704145044998455296 391880980197993480628310881816093.75
i insert 9598168915058759905229274162051370859720246715659850693887393792 97970245049498370157077720454023.4375
i insert 0 0
i insert 95981689150587599052292741620507838186500972740504513299873792 9797024504949837015707772045402.34375
i insert 59988555719117249407682963512821320135720987390524964680734081024 244925612623745925392694301135058.59375
section_temp 0
section h inf
301836038964891708401323785908265005562835626692242536384167936 - 153447371764274555667712092277386116605546044217203184707305472 ::== 148388667200617152733611693630878888957289582475039351676862464
            ----->  | *2 296777334401234305467223387261757777914579164950078703353724928
            ----->  /2 74194333600308576366805846815439444478644791237519675838431232
                 --> 37097166800154288183402923407719722239322395618759837919215616
                 --> 18548583400077144091701461703859861119661197809379918959607808
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 88076786214302051132797330391752734946598195898350104823273095168 296777334401234305467223387261757.8125
i insert 550479913839387819579983314948456778845873517832176335461782913024 741943336003085763668058468154394.5
i insert 0 0
i insert 5504799138393878195799833149484508538469680510879537398710009856 74194333600308576366805846815439.453125
i insert 34404994614961738723748957184278366136180661999477205441099857920 185485834000771440917014617038598.625
section_temp 0
section h inf
54934159091610290929040929035304231487805059143574167183182266368 - 153447371764274555667712092277386116605546044217203184707305472 ::== 54780711719846016373373216943026849728748451383895531643392229376
            ----->  | *2 109561423439692032746746433886053699457496902767791063286784458752
            ----->  /2 27390355859923008186686608471513424864374225691947765821696114688
                 --> 13695177929961504093343304235756712432187112845973882910848057344
                 --> 6847588964980752046671652117878356216093556422986941455424028672
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 12003705506131498772321359494428711719550676944401203819951685632 109561423439692032746746433886053.671875
i insert 75023159413321867327008496840180264931090927939299438125738098688 273903558599230081866866084715134.1875
i insert 0 0
i insert 750231594133218673270084968401780775999802341294671555643572224 27390355859923008186686608471513.41796875
i insert 468894746333261670793803105251126653284017099164162685292456706048 684758896498075204667165211787835.5
ending sqti reporting the results 
reporting size of xl vector 44 64
entering amfidromi loop of xl vector  with first 
 of 676112727281357426818965280434513.75 ^2 ::== 457128419991835203295709103771987052502030343609504417893035540480 as intpart 457128419991835203295709103771986078946369368329324068424973811712  diafora 421818125473929451568945760792881624858511577967862606505942450176 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 169028181820339356704741320108628.4375 ^2 ::== 28570526249489700205981818985749190781376896475594026118314721280 as intpart 28570526249489700205981818985749043733907270000983452500742897664  diafora 850376019216274954658673045579118741200612090902884918219178508288 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 16902818182033935670474132010862.84375 ^2 ::== 285705262494897002059818189857491923659401467608807779891937280 as intpart 285705262494897002059818189857463401520896332447274104069816320  diafora 878660840203269757862595046375010295308476672349925353152804028416 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 422570454550848391761853300271571.0625 ^2 ::== 178565789059310626287386368660932415762942998179645231808699695104 as intpart 178565789059310626287386368660932375198123790876304383914197123072  diafora 700380756406454028577268495903935308324347551769211867069467852800 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 422570454550848391761853300271571.0625 ^2 ::== 178565789059310626287386368660932415762942998179645231808699695104 as intpart 178565789059310626287386368660932375198123790876304383914197123072  diafora 700380756406454028577268495903935308324347551769211867069467852800 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 105642613637712097940463325067892.765625 ^2 ::== 11160361816206914142961648041308275985183937386227826988043730944 as intpart 11160361816206914142961648041308114993557708401093836906736648192  diafora 867786183649557740721693216523559510216986023745869945228580880384 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 10564261363771209794046332506789.27734375 ^2 ::== 111603618162069141429616480413082776489753501857789164524666880 as intpart 111603618162069141429616480413076913605727446296807242272342016  diafora 878834941847602585723225248084454610510852619026738070223432187904 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 264106534094280244851158312669731.90625 ^2 ::== 69752261351293213393510300258176727125788159063325371294503927808 as intpart 69752261351293213393510300258176250489162473249070408534098706432  diafora 809194284114471441471144564306691453315718473048116266396817555456 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 603672077929783416802647571816529.8125 ^2 ::== 364419977672062502627319119716188293980651352786021348333183827968 as intpart 364419977672062502627319119716187320424990377505840998865122099200  diafora 514526567793702152237335744848680383379890568791345676065794162688 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 150918019482445854200661892954132.453125 ^2 ::== 22776248604503906414207444982261768373790709549126334270823989248 as intpart 22776248604503906414207444982261631467525884900350972626877808640  diafora 856170296861260748450447419582606087549162264135588520264476917760 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 15091801948244585420066189295413.24609375 ^2 ::== 227762486045039064142074449822617709090919100055851372642304000 as intpart 227762486045039064142074449822610261643642759208117579510972416  diafora 878718782979719615800512790115045170394554942374386023089037115392 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 377295048706114635501654732385331.125 ^2 ::== 142351553778149415088796531139136034589083531486827968238805057536 as intpart 142351553778149415088796531139135953459445116880146272449799913472  diafora 736594991687615239775858333425731750345435829417040402481116348416 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 109868318183220581858081858070608.46875 ^2 ::== 12071047340409398337027318521479030506448008293068202966746398720 as intpart 12071047340409398337027318521478927826749389806486681733786763264  diafora 866875498125355256527627546043388746822167751241423758772955774976 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 274670795458051454645204645176521.1875 ^2 ::== 75444045877558739606420740759243947637378353086937976774032621568 as intpart 75444045877558739606420740759243846225330334828585857037776191488  diafora 803502499588205915258234123805623857579550611468600817893140070400 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 27467079545805145464520464517652.1171875 ^2 ::== 754440458775587396064207407592439406653000518316762685421649920 as intpart 754440458775587396064207407592432989171836862905417608361672704  diafora 878192105006989067468590657157275238569846966128695856750166802432 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 686676988645128636613011612941303 ^2 ::== 471525286734742122540129629745274708227831513183785596745393635328 as intpart 471525286734742122540129629745274708227831513183785596745393635328  diafora 407421258731022532324525234819592995577049433113401078185522626560 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 306894743528549111335424184554772.3125 ^2 ::== 94184383605453936651690946923309463882276286343110785448871460864 as intpart 94184383605453936651690946923309271199385051652241757949984243712  diafora 784762161860310718212963917641558432605495894644944916980932018176 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 767236858821372778338560461386930.75 ^2 ::== 588652397534087104073068418270684080811094377320054728233473540096 as intpart 588652397534087104073068418270682944996156572826510987187401523200  diafora 290294147931677550791586446294184758808724373470675687743514738688 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 76723685882137277833856046138693.078125 ^2 ::== 5886523975340871040730684182706841492642267896444424090554466304 as intpart 5886523975340871040730684182706829449961565728265109871874015232  diafora 873060021490423783823924180382160854072509776917251141111790960640 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 191809214705343194584640115346732.6875 ^2 ::== 36790774845880444004566776141917755050693398582503420514592096256 as intpart 36790774845880444004566776141917491379368551110787909200325378048  diafora 842155770619884210860088088422950176931295588795975523822901133312 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 673043779846071935705611038588965.875 ^2 ::== 452987929589487747542136690220704496011127445935534362955213701120 as intpart 452987929589487747542136690220703279066551226835308926120136540160  diafora 425958615876276907322518174344164424738329719461877748810779721728 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 168260944961517983926402759647241.46875 ^2 ::== 28311745599342984221383543138794031000695465370970897684700856320 as intpart 28311745599342984221383543138793868741418636157607506106690568192  diafora 850634799866421670643271321426073840134064711052496774811038515200 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 16826094496151798392640275964724.146484375 ^2 ::== 283117455993429842213835431387940254547240893724672661366243328 as intpart 283117455993429842213835431387935342401165009335741861641322496  diafora 878663428009771225022441029133479718112982503472864392372094500864 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 420652362403794959816006899118103.6875 ^2 ::== 176948409995893651383647144617462702627900860166173921006302789632 as intpart 176948409995893651383647144617462114438022354267731626536015495168  diafora 701998135469871003481007719947405609649268195681125472342152052736 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 391880980197993480628310881816093.75 ^2 ::== 153570702640940158483668386592823312959376995764146439515285749760 as intpart 153570702640940158483668386592822724769498489865704145044998455296  diafora 725375842824824496380986477972044958752972852779812105938666520576 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 97970245049498370157077720454023.4375 ^2 ::== 9598168915058759905229274162051457059961062235259152469705359360 as intpart 9598168915058759905229274162051370859720246715659850693887393792  diafora 869348376550705894959425590402816297450943893191103582329339117568 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 9797024504949837015707772045402.34375 ^2 ::== 95981689150587599052292741620514572580314685209199964535652352 as intpart 95981689150587599052292741620507838186500972740504513299873792  diafora 878850563776614067265602571823247132950594685541448656952596889600 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 244925612623745925392694301135058.59375 ^2 ::== 59988555719117249407682963512821604089455438513910899942252085248 as intpart 59988555719117249407682963512821320135720987390524964680734081024  diafora 818957989746647405456971901052046373527955157080826498276556537856 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 296777334401234305467223387261757.8125 ^2 ::== 88076786214302051132797330391753211583223881712605067583678316544 as intpart 88076786214302051132797330391752734946598195898350104823273095168  diafora 790869759251462603731857534173114989140692354050506994054894452736 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 741943336003085763668058468154394.5 ^2 ::== 550479913839387819579983314948457509012619249292311597562829209600 as intpart 550479913839387819579983314948456778845873517832176335461782913024  diafora 328466631626376835284671549616410924959007428465010339469133348864 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 74194333600308576366805846815439.453125 ^2 ::== 5504799138393878195799833149484575723951492607037816723979894784 as intpart 5504799138393878195799833149484508538469680510879537398710009856  diafora 873441746327370776668855031415383169279573961107604406849790541824 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 185485834000771440917014617038598.625 ^2 ::== 34404994614961738723748957184278594313288703080769474847676825600 as intpart 34404994614961738723748957184278366136180661999477205441099857920  diafora 844541550850802916140905907380589403586531496165638347318383083520 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 109561423439692032746746433886053.671875 ^2 ::== 12003705506131498772321359494428858767020303419011777437523509248 as intpart 12003705506131498772321359494428711719550676944401203819951685632  diafora 866942839959633156092333505070438960394065263647050433693384441856 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 273903558599230081866866084715134.1875 ^2 ::== 75023159413321867327008496840180366343138946197651557861994528768 as intpart 75023159413321867327008496840180264931090927939299438125738098688  diafora 803923386052442787537646367724687449014994820183722448778803806208 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867703804880946297186674930916261888 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 27390355859923008186686608471513.41796875 ^2 ::== 750231594133218673270084968401803672938768963688236089845219328 as intpart 750231594133218673270084968401780775999802341294671555643572224  diafora 878196313871631436191384779596465937765319371609058795774447452160 from 878946545465764654864654864564867703804880946297186674930916261888
entering amfidromi loop of xl vector  with first 
 of 684758896498075204667165211787835.5 ^2 ::== 468894746333261670793803105251127383450762830624297947393503002624 as intpart 468894746333261670793803105251126653284017099164162685292456706048  diafora 410051799132502984070851759313741050520863847133023989638459555840 from 878946545465764654864654864564867703804880946297186674930916261888
the size of xpl vector is 44 64
 of 767236858821372778338560461386930.75 ^2 ::== 588652397534087104073068418270684080811094377320054728233473540096 as intpart 588652397534087104073068418270682944996156572826510987187401523200  diafora 290294147931677550791586446294184758808724373470675687743514738688 from 878946545465764654864654864564867703804880946297186674930916261888

-------------------------------------------------------------------------


 807855280758974866603543074048592.000000 ^2 ::== 652630154650162107321978726291038077569836533845294154017792851968.000000 as intpart 652630154650162107321978726291038077569836533845294154017792851968.000000 diafora 226316390815602547542676138273829626235044412451892520913123409920.000000 from 878946545465764654864654864564867703804880946297186674930916261888.000000 
 802310543796064105348323225336047.375000 ^2 ::== 643702208686336098883362881941777276013413669109143977471783206912.000000 as intpart 643702208686336098883362881941776708105944766862372106948747198464.000000 diafora 235244336779428555981291982623090995698936179434814567982169063424.000000 from 878946545465764654864654864564867703804880946297186674930916261888.000000 
 784773701308718441843441843361488.750000 ^2 ::== 615869762265785629440169312320358234675821237421846051756661800960.000000 as intpart 615869762265785629440169312320357017731245018321620614921584640000.000000 diafora 263076783199979025424485552244510686073635927975566060009331621888.000000 from 878946545465764654864654864564867703804880946297186674930916261888.000000 
 787074915933754750629150260000684.250000 ^2 ::== 619486923292127107836467209147039502491704690342640709413386584064.000000 as intpart 619486923292127107836467209147039096843512617309232230468360863744.000000 diafora 259459622173637547028187655417828606961368328987954444462555398144.000000 from 878946545465764654864654864564867703804880946297186674930916261888.000000 
 818385982742797630227797825479392.875000 ^2 ::== 669755616749894660634246733676867424920068903383626001085982834688.000000 as intpart 669755616749894660634246733676865964586577440463355476883890241536.000000 diafora 209190928715869994230408130888001739218303505833831198047026020352.000000 from 878946545465764654864654864564867703804880946297186674930916261888.000000 
 818385982742797630227797825479392.875000 ^2 ::== 669755616749894660634246733676867424920068903383626001085982834688.000000 as intpart 669755616749894660634246733676865964586577440463355476883890241536.000000 diafora 209190928715869994230408130888001739218303505833831198047026020352.000000 from 878946545465764654864654864564867703804880946297186674930916261888.000000 
 806816538046284866109994135982288.250000 ^2 ::== 650952926064992234875460280817882158670996772117219337365838888960.000000 as intpart 650952926064992234875460280817881753022804699083810858420813168640.000000 diafora 227993619400772419989194583746985950782076247213375816510103093248.000000 from 878946545465764654864654864564867703804880946297186674930916261888.000000 
 767236858821372778338560461386930.750000 ^2 ::== 588652397534087104073068418270684080811094377320054728233473540096.000000 as intpart 588652397534087104073068418270682944996156572826510987187401523200.000000 diafora 290294147931677550791586446294184758808724373470675687743514738688.000000 from 878946545465764654864654864564867703804880946297186674930916261888.000000 

---------order of near approximation numbers--------
|----------bigger value is the nearest-------------|

the size of fnl_weirdo vector is 7 8
 818385982742797630227797825479392  818385982742797630227797825479392  807855280758974866603543074048592  806816538046284866109994135982288  802310543796064105348323225336047  787074915933754750629150260000684  784773701308718441843441843361488 
----------------------------------------------------

auto value is 818385982742797630227797825479392
lenght of 818385982742797630227797825479392 33
lenght of 878946545465764654864654864564867703804880946297186674930916261888 is 66
moving with ps_ask 34
-------------------------------------------------------
times 1 8 8
main 2.828427124746190097603377448419395968694492778317254832511024748099349480912056975512314238585531712 second 2.828427124746190097603377448419395968694492778317254832511024748099349480912056975512314238585531712
main 7.999999999999999999999999999999999229628022245105658777608822966029072584759340713844721904024481773 second 7.999999999999999999999999999999999229628022245105658777608822966029072584759340713844721904024481773
times of 0.3535533905932737622004221810524245442350602069705531804633266581356016485665483273237441608216613531
new times of 0.3535533905932737622004221810524245442350602069705531804633266581356016485665483273237441608216613531
using 818385982742797630227797825479392 * 0.3535533905932737622004221810524245442350602069705531804633266581356016485665483273237441608216613531
289343139012724531164913725526841.3125  with length of 37 and dot length 33 will move 4

 trying to reach the main number 878946545465764654864654864564867703804880946297186674930916261888  main number intpart lenght 66 
 fract 0 int 878946545465764654864654864564867703804880946297186674930916261888
    -----------------> 289343139012724531164913725526841.3125 ^2 ::== 83719452093736832579280841709608245573322180057919434610486280192
 temp fract 0 temp int 83719452093736832579280841709608245573322180057919434610486280192
before loop xstp is 0entering tens with lap of value 4
using t_rst as 2893431390127245311649137255268413
using for fract 8371945209373683257928084170960824395072941176578580069470617731072
getting the part of 8371945209373683257928084170960824395072941176578580069470617731072 :: ad 67 and mad 66
have to exit bigger lenght with ad 67 and mad 66
i push_back a near value of 2893431390127245311649137255268413
stopping with ad 67 and mad of 66
    -----------------> 2893431390127245311649137255268413 ^2 ::== 8371945209373683257928084170960824395072941176578580069470617731072
t_ten increased 
breaking with xbrk of value 1

increasing the digits 2
-------------------------------------------------------
-------------------------------------------------------
times 2 87 81
main 9.327379053088815045554475542320557471527647726584875648712282054562071331726968992370530031621456146 second 9
main 87.00000000000000000000000000000001232595164407830945955825883254353483864385054857848444953560829163 second 81
times of 0.1151528278159112968586972289175377431441384965545644663199438618268983863194426797704750242701265961
new times of 0.1151528278159112968586972289175377431441384965545644663199438618268983863194426797704750242701265961
using 818385982742797630227797825479392 * 0.1151528278159112968586972289175377431441384965545644663199438618268983863194426797704750242701265961
94239460157736729520286998299492.109375  with length of 38 and dot length 32 will move 6

 trying to reach the main number 878946545465764654864654864564867703804880946297186674930916261888  main number intpart lenght 66 
 fract 0 int 878946545465764654864654864564867703804880946297186674930916261888
    -----------------> 94239460157736729520286998299492.109375 ^2 ::== 8881075850821648449196687369286288794189249787398942003438813184
 temp fract 0 temp int 8881075850821648449196687369286288794189249787398942003438813184
before loop xstp is 0entering tens with lap of value 6
using t_rst as 942394601577367295202869982994921.125
using for fract 888107585082164844919668736928629026466394605214504773961453142016
getting the part of 888107585082164844919668736928629026466394605214504773961453142016 :: ad 66 and mad 66
i push_back a near value of 942394601577367295202869982994921
stopping with ad 66 and mad of 66
    -----------------> 942394601577367295202869982994921.125 ^2 ::== 888107585082164844919668736928629026466394605214504773961453142016
t_ten increased 
breaking with xbrk of value 1

increasing the digits 3
-------------------------------------------------------
-------------------------------------------------------
times 3 878 818
main 29.6310647800581071187546542085948978899151365306819798276977635028296004238157479449000675231218338 second 28.60069929215018336873987516199633378375203468954974134096793510434551116583534735582361463457345963
main 878.000000000000000000000000000000098607613152626475676466070660348278709150804388627875596284866333 second 817.999999999999999999999999999999901392386847373524323533929339651721290849195611372124403715133667
times of 0.03622379557464316273686388045060501201452584727425190338053247949744830648261678662791496208228636533
new times of 0.03622379557464316273686388045060501201452584727425190338053247949744830648261678662791496208228636533
using 818385982742797630227797825479392 * 0.03622379557464316273686388045060501201452584727425190338053247949744830648261678662791496208228636533
29645046540028548546695285642059.5234375  with length of 39 and dot length 32 will move 7

 trying to reach the main number 878946545465764654864654864564867703804880946297186674930916261888  main number intpart lenght 66 
 fract 0 int 878946545465764654864654864564867703804880946297186674930916261888
    -----------------> 29645046540028548546695285642059.5234375 ^2 ::== 878828784360458617590863027134415081762871354002747240185069568
 temp fract 0 temp int 878828784360458617590863027134415081762871354002747240185069568
before loop xstp is 0entering tens with lap of value 7
using t_rst as 296450465400285485466952856420595.25
using for fract 87882878436045861759086302713441521486618437796683439733890613248
getting the part of 87882878436045861759086302713441521486618437796683439733890613248 :: ad 65 and mad 66
i push_back a near value of 296450465400285485466952856420595
stopping with ad 65 and mad of 66
    -----------------> 296450465400285485466952856420595.25 ^2 ::== 87882878436045861759086302713441521486618437796683439733890613248
t_ten increased 
breaking with xbrk of value 1

increasing the digits 4
-------------------------------------------------------
-------------------------------------------------------
times 4 8789 8183
main 93.74966666607407196706882482764269786085029109606588594281784853528075029949206964374752715229988098 second 90.45993588324059828191367563224088785340604477578046365811645498564153022869049891596660017967224121
main 8789.000000000000000000000000000001577721810442023610823457130565572459346412870218046009540557861328 second 8183
times of 0.01145663774484590883136610348620832249776013655266394241424404253222058623737540650200372738254372962
new times of 0.01145663774484590883136610348620832249776013655266394241424404253222058623737540650200372738254372962
using 818385982742797630227797825479392 * 0.01145663774484590883136610348620832249776013655266394241424404253222058623737540650200372738254372962
9375951739743947904889903963790.056640625  with length of 40 and dot length 31 will move 9

 trying to reach the main number 878946545465764654864654864564867703804880946297186674930916261888  main number intpart lenght 66 
 fract 0 int 878946545465764654864654864564867703804880946297186674930916261888
    -----------------> 9375951739743947904889903963790.056640625 ^2 ::== 87908471026007563426709261830870829247692478914348219826700288
 temp fract 0 temp int 87908471026007563426709261830870829247692478914348219826700288
before loop xstp is 0entering tens with lap of value 9
using t_rst as 93759517397439479048899039637900.5625
using for fract 8790847102600756342670926183087082251329866520187952437546450944
getting the part of 8790847102600756342670926183087082251329866520187952437546450944 :: ad 64 and mad 66
    -----------------> 93759517397439479048899039637900.5625 ^2 ::== 8790847102600756342670926183087082251329866520187952437546450944
t_ten increased 
using t_rst as 937595173974394790488990396379005.625
using for fract 879084710260075634267092618308708230203589052931712849741457915904
getting the part of 879084710260075634267092618308708230203589052931712849741457915904 :: ad 66 and mad 66
i push_back a near value of 937595173974394790488990396379005
stopping with ad 66 and mad of 66
    -----------------> 937595173974394790488990396379005.625 ^2 ::== 879084710260075634267092618308708230203589052931712849741457915904
t_ten increased 
breaking with xbrk of value 1

increasing the digits 5
-------------------------------------------------------
-------------------------------------------------------
times 5 87894 81838
main 296.4692226859307566326379017943671893234291320392629396225253363573309828282731359649915248155593872 second 286.073417150213382072889246899554116633400238669254546401250424454004717134125712618697434663772583
main 87894.00000000000000000000000000001262177448353618888658765704452457967477130296174436807632446289062 second 81838.00000000000000000000000000001262177448353618888658765704452457967477130296174436807632446289062
times of 0.003622635238959050277776068596426686051617748319951442391416815464063530137419494314698908965510781854
new times of 0.003622635238959050277776068596426686051617748319951442391416815464063530137419494314698908965510781854
using 818385982742797630227797825479392 * 0.003622635238959050277776068596426686051617748319951442391416815464063530137419494314698908965510781854
2964713900154191890043635317708.81005859375  with length of 42 and dot length 31 will move 11
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867703804880946297186674930916261888  main number intpart lenght 66 
 fract 0 int 878946545465764654864654864564867703804880946297186674930916261888
    -----------------> 2964713900154191890043635317708.81005859375 ^2 ::== 8789528509767479679383049604839679020933988743074722579742720
 temp fract 0 temp int 8789528509767479679383049604839679020933988743074722579742720
before loop xstp is 0entering tens with lap of value 10
using t_rst as 29647139001541918900436353177088.1015625
using for fract 878952850976747967938304960483967911996919188590514457167265792
getting the part of 878952850976747967938304960483967911996919188590514457167265792 :: ad 63 and mad 66
    -----------------> 29647139001541918900436353177088.1015625 ^2 ::== 878952850976747967938304960483967911996919188590514457167265792
t_ten increased 
using t_rst as 296471390015419189004363531770881
using for fract 87895285097674796793830496048396785495264217832019138981562155008
getting the part of 87895285097674796793830496048396785495264217832019138981562155008 :: ad 65 and mad 66
i push_back a near value of 296471390015419189004363531770881
stopping with ad 65 and mad of 66
    -----------------> 296471390015419189004363531770881 ^2 ::== 87895285097674796793830496048396785495264217832019138981562155008
t_ten increased 
breaking with xbrk of value 1

increasing the digits 6
-------------------------------------------------------
-------------------------------------------------------
times 6 878946 818385
main 937.5211997603040869596046837510080805810404728036896793480609014169446790987194617628119885921478271 second 904.6463397372478177112623319199555337680591357442107759303211037341108102793896250659599900245666504
main 878945.999999999999999999999999999899025804131710488907298743643803362601829576306045055389404296875 second 818384.999999999999999999999999999899025804131710488907298743643803362601829576306045055389404296875
times of 0.001145574759752810824929103886008429002746480405559275575117204646574853710153715086184078586484247353
new times of 0.001145574759752810824929103886008429002746480405559275575117204646574853710153715086184078586484247353
using 818385982742797630227797825479392 * 0.001145574759752810824929103886008429002746480405559275575117204646574853710153715086184078586484247353
937522325565648381013001469922.4747314453125  with length of 43 and dot length 30 will move 13
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867703804880946297186674930916261888  main number intpart lenght 66 
 fract 0 int 878946545465764654864654864564867703804880946297186674930916261888
    -----------------> 937522325565648381013001469922.4747314453125 ^2 ::== 878948110934021595919548077562901791461459899937028007002112
 temp fract 0 temp int 878948110934021595919548077562901791461459899937028007002112
before loop xstp is 0entering tens with lap of value 10
using t_rst as 9375223255656483810130014699224.7470703125
using for fract 87894811093402159591954807756290176670265911422942250901962752
getting the part of 87894811093402159591954807756290176670265911422942250901962752 :: ad 62 and mad 66
    -----------------> 9375223255656483810130014699224.7470703125 ^2 ::== 87894811093402159591954807756290176670265911422942250901962752
t_ten increased 
using t_rst as 93752232556564838101300146992247.46875
using for fract 8789481109340215959195480775629017904711078685087237870828126208
getting the part of 8789481109340215959195480775629017904711078685087237870828126208 :: ad 64 and mad 66
    -----------------> 93752232556564838101300146992247.46875 ^2 ::== 8789481109340215959195480775629017904711078685087237870828126208
t_ten increased 
using t_rst as 937522325565648381013001469922474.75
using for fract 878948110934021595919548077562901831035927075812064634977315192832
getting the part of 878948110934021595919548077562901831035927075812064634977315192832 :: ad 66 and mad 66
i push_back a near value of 937522325565648381013001469922474
stopping with ad 66 and mad of 66
    -----------------> 937522325565648381013001469922474.75 ^2 ::== 878948110934021595919548077562901831035927075812064634977315192832
t_ten increased 
breaking with xbrk of value 1

increasing the digits 7
-------------------------------------------------------
-------------------------------------------------------
times 7 8789465 8183859
main 2964.703189191120359563837776166703541032780873505232619241557719125257364112258073873817920684814453 second 2860.744483521728299830089994995964265860799167764478481312438121891839060140227957163006067276000977
main 8789464.99999999999999999999999999838441286610736782251677989830085380162927322089672088623046875 second 8183859.000000000000000000000000000807793566946316088741610050849573099185363389551639556884765625
times of 0.0003622622517312578771901908104925442987591798873021644959000695156609278869161254454933640545277739875
new times of 0.0003622622517312578771901908104925442987591798873021644959000695156609278869161254454933640545277739875
using 818385982742797630227797825479392 * 0.0003622622517312578771901908104925442987591798873021644959000695156609278869161254454933640545277739875
296470348893704220026494008505.67022705078125  with length of 44 and dot length 30 will move 14
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867703804880946297186674930916261888  main number intpart lenght 66 
 fract 0 int 878946545465764654864654864564867703804880946297186674930916261888
    -----------------> 296470348893704220026494008505.67022705078125 ^2 ::== 87894667773154707039353728736346034169713156376571859173376
 temp fract 0 temp int 87894667773154707039353728736346034169713156376571859173376
before loop xstp is 0entering tens with lap of value 10
using t_rst as 2964703488937042200264940085056.7021484375
using for fract 8789466777315470703935372873634602720630043539630781286580224
getting the part of 8789466777315470703935372873634602720630043539630781286580224 :: ad 61 and mad 66
    -----------------> 2964703488937042200264940085056.7021484375 ^2 ::== 8789466777315470703935372873634602720630043539630781286580224
t_ten increased 
using t_rst as 29647034889370422002649400850567.0234375
using for fract 878946677731547070393537287363460376049967653935021220184457216
getting the part of 878946677731547070393537287363460376049967653935021220184457216 :: ad 63 and mad 66
    -----------------> 29647034889370422002649400850567.0234375 ^2 ::== 878946677731547070393537287363460376049967653935021220184457216
t_ten increased 
using t_rst as 296470348893704220026494008505670.21875
using for fract 87894667773154707039353728736346029999093164024125713038226489344
getting the part of 87894667773154707039353728736346029999093164024125713038226489344 :: ad 65 and mad 66
i push_back a near value of 296470348893704220026494008505670
stopping with ad 65 and mad of 66
    -----------------> 296470348893704220026494008505670.21875 ^2 ::== 87894667773154707039353728736346029999093164024125713038226489344
t_ten increased 
breaking with xbrk of value 1

increasing the digits 8
-------------------------------------------------------
-------------------------------------------------------
times 8 87894654 81838598
main 9375.214877537474340744708743012260967695356648055455136777942143355701887230679858475923538208007812 second 9046.468813852176210905475859377551655641055260876353114388431081449581938613846432417631149291992188
main 87894654 second 81838598
times of 0.0001145573739855303281312896971061535177525992972503115547721795391340579178907706399404009545150984195
new times of 0.0001145573739855303281312896971061535177525992972503115547721795391340579178907706399404009545150984195
using 818385982742797630227797825479392 * 0.0001145573739855303281312896971061535177525992972503115547721795391340579178907706399404009545150984195
93752149089582437300079246408.27960205078125  with length of 43 and dot length 29 will move 14
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867703804880946297186674930916261888  main number intpart lenght 66 
 fract 0 int 878946545465764654864654864564867703804880946297186674930916261888
    -----------------> 93752149089582437300079246408.27960205078125 ^2 ::== 8789465458915293027105387514776117926545699068466583044096
 temp fract 0 temp int 8789465458915293027105387514776117926545699068466583044096
before loop xstp is 0entering tens with lap of value 10
using t_rst as 937521490895824373000792464082.7960205078125
using for fract 878946545891529302710538751477611720119020729968907822039040
getting the part of 878946545891529302710538751477611720119020729968907822039040 :: ad 60 and mad 66
    -----------------> 937521490895824373000792464082.7960205078125 ^2 ::== 878946545891529302710538751477611720119020729968907822039040
t_ten increased 
using t_rst as 9375214908958243730007924640827.9599609375
using for fract 87894654589152930271053875147761170773962033711510507304779776
getting the part of 87894654589152930271053875147761170773962033711510507304779776 :: ad 62 and mad 66
    -----------------> 9375214908958243730007924640827.9599609375 ^2 ::== 87894654589152930271053875147761170773962033711510507304779776
t_ten increased 
using t_rst as 93752149089582437300079246408279.609375
using for fract 8789465458915293027105387514776119533469241313345516130340438016
getting the part of 8789465458915293027105387514776119533469241313345516130340438016 :: ad 64 and mad 66
    -----------------> 93752149089582437300079246408279.609375 ^2 ::== 8789465458915293027105387514776119533469241313345516130340438016
t_ten increased 
using t_rst as 937521490895824373000792464082796
using for fract 878946545891529302710538751477611659251984878385330465798900154368
getting the part of 878946545891529302710538751477611659251984878385330465798900154368 :: ad 66 and mad 66
i push_back a near value of 937521490895824373000792464082796
stopping with ad 66 and mad of 66
    -----------------> 937521490895824373000792464082796 ^2 ::== 878946545891529302710538751477611659251984878385330465798900154368
t_ten increased 
breaking with xbrk of value 1

increasing the digits 9
-------------------------------------------------------
-------------------------------------------------------
times 9 878946545 818385982
main 29647.03265084045472758795028768039383049128697748282144778294439069199484038108494132757186889648438 second 28607.44626841060764312455059163003684202747358860085072430391207876088088823962607420980930328369141
main 878946545 second 818385982.00000000000000000000000010339757656912845935892608650874535669572651386260986328125
times of 3.622622247070753800813263476411842075810605055777718318070016007897893010354780848891742550677008694e-05
new times of 3.622622247070753800813263476411842075810605055777718318070016007897893010354780848891742550677008694e-05
using 818385982742797630227797825479392 * 3.622622247070753800813263476411842075810605055777718318070016007897893010354780848891742550677008694e-05
29647032677749206930934508647.41609954833984375  with length of 46 and dot length 29 will move 17
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867703804880946297186674930916261888  main number intpart lenght 66 
 fract 0 int 878946545465764654864654864564867703804880946297186674930916261888
    -----------------> 29647032677749206930934508647.41609954833984375 ^2 ::== 878946546595529311056061831059128666379484568656948494336
 temp fract 0 temp int 878946546595529311056061831059128666379484568656948494336
before loop xstp is 0entering tens with lap of value 10
using t_rst as 296470326777492069309345086474.1610107421875
using for fract 87894654659552931105606183105912872078114645131526135611392
getting the part of 87894654659552931105606183105912872078114645131526135611392 :: ad 59 and mad 66
    -----------------> 296470326777492069309345086474.1610107421875 ^2 ::== 87894654659552931105606183105912872078114645131526135611392
t_ten increased 
using t_rst as 2964703267774920693093450864741.60986328125
using for fract 8789465465955293110560618310591286085928303910776739433807872
getting the part of 8789465465955293110560618310591286085928303910776739433807872 :: ad 61 and mad 66
    -----------------> 2964703267774920693093450864741.60986328125 ^2 ::== 8789465465955293110560618310591286085928303910776739433807872
t_ten increased 
using t_rst as 29647032677749206930934508647416.09765625
using for fract 878946546595529311056061831059128598689310076794631744187793408
getting the part of 878946546595529311056061831059128598689310076794631744187793408 :: ad 63 and mad 66
    -----------------> 29647032677749206930934508647416.09765625 ^2 ::== 878946546595529311056061831059128598689310076794631744187793408
t_ten increased 
using t_rst as 296470326777492069309345086474161
using for fract 87894654659552931105606183105912870643961109619413087140756586496
getting the part of 87894654659552931105606183105912870643961109619413087140756586496 :: ad 65 and mad 66
i push_back a near value of 296470326777492069309345086474161
stopping with ad 65 and mad of 66
    -----------------> 296470326777492069309345086474161 ^2 ::== 87894654659552931105606183105912870643961109619413087140756586496
t_ten increased 
breaking with xbrk of value 1

increasing the digits 10
-------------------------------------------------------
-------------------------------------------------------
times 10 8789465454 8183859827
main 93752.14906336814207845240203253937714699402539928552753471010378083505543145292904227972030639648438 second 90464.68828775126001207903553185794024703958366272214750025432855595752812405407894402742385864257812
main 8789465453.9999999999999999999999983456387748939446502571826158600742928683757781982421875 second 8183859827.00000000000000000000000082718061255302767487140869206996285356581211090087890625
times of 1.145573739594894237897757703524500555639870619413433234897657438159408030776815448810446174121580043e-05
new times of 1.145573739594894237897757703524500555639870619413433234897657438159408030776815448810446174121580043e-05
using 818385982742797630227797825479392 * 1.145573739594894237897757703524500555639870619413433234897657438159408030776815448810446174121580043e-05
9375214906827092620903818606.14086055755615234375  with length of 48 and dot length 28 will move 20
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867703804880946297186674930916261888  main number intpart lenght 66 
 fract 0 int 878946545465764654864654864564867703804880946297186674930916261888
    -----------------> 9375214906827092620903818606.14086055755615234375 ^2 ::== 87894654549192930972964256980777429094339675858122309632
 temp fract 0 temp int 87894654549192930972964256980777429094339675858122309632
before loop xstp is 0entering tens with lap of value 10
using t_rst as 93752149068270926209038186061.408599853515625
using for fract 8789465454919293097296425698077741889402807285968864804864
getting the part of 8789465454919293097296425698077741889402807285968864804864 :: ad 58 and mad 66
    -----------------> 93752149068270926209038186061.408599853515625 ^2 ::== 8789465454919293097296425698077741889402807285968864804864
t_ten increased 
using t_rst as 937521490682709262090381860614.0860595703125
using for fract 878946545491929309729642569807774217954500399347986673434624
getting the part of 878946545491929309729642569807774217954500399347986673434624 :: ad 60 and mad 66
    -----------------> 937521490682709262090381860614.0860595703125 ^2 ::== 878946545491929309729642569807774217954500399347986673434624
t_ten increased 
using t_rst as 9375214906827092620903818606140.8603515625
using for fract 87894654549192930972964256980777417462659902435967705196527616
getting the part of 87894654549192930972964256980777417462659902435967705196527616 :: ad 62 and mad 66
    -----------------> 9375214906827092620903818606140.8603515625 ^2 ::== 87894654549192930972964256980777417462659902435967705196527616
t_ten increased 
using t_rst as 93752149068270926209038186061408.609375
using for fract 8789465454919293097296425698077743885426378128733885545339420672
getting the part of 8789465454919293097296425698077743885426378128733885545339420672 :: ad 64 and mad 66
    -----------------> 93752149068270926209038186061408.609375 ^2 ::== 8789465454919293097296425698077743885426378128733885545339420672
t_ten increased 
using t_rst as 937521490682709262090381860614086
using for fract 878946545491929309729642569807774175577336974530849103087803564032
getting the part of 878946545491929309729642569807774175577336974530849103087803564032 :: ad 66 and mad 66
i push_back a near value of 937521490682709262090381860614086
stopping with ad 66 and mad of 66
    -----------------> 937521490682709262090381860614086 ^2 ::== 878946545491929309729642569807774175577336974530849103087803564032
t_ten increased 
breaking with xbrk of value 1

increasing the digits 11
-------------------------------------------------------
-------------------------------------------------------
times 11 87894654546 81838598274
main 296470.32658598398083291272497742756366654003228393470296096745553171558640315197408199310302734375 second 286074.462813443031727715761873253850554309641462689541382448388251447113361791707575321197509765625
main 87894654546.0000000000000000000000132348898008484427979425390731194056570529937744140625 second 81838598274
times of 3.622622244743067149968922071293828008445763198667824818494892333168942389028413205483841741383344015e-06
new times of 3.622622244743067149968922071293828008445763198667824818494892333168942389028413205483841741383344015e-06
using 818385982742797630227797825479392 * 3.622622244743067149968922071293828008445763198667824818494892333168942389028413205483841741383344015e-06
2964703265869974565824913266.610787868499755859375  with length of 49 and dot length 28 will move 21
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867703804880946297186674930916261888  main number intpart lenght 66 
 fract 0 int 878946545465764654864654864564867703804880946297186674930916261888
    -----------------> 2964703265869974565824913266.610787868499755859375 ^2 ::== 8789465454660093097293011304907882745207051393364393984
 temp fract 0 temp int 8789465454660093097293011304907882745207051393364393984
before loop xstp is 0entering tens with lap of value 10
using t_rst as 29647032658699745658249132666.107879638671875
using for fract 878946545466009309729301130490788406746966659686505381888
getting the part of 878946545466009309729301130490788406746966659686505381888 :: ad 57 and mad 66
    -----------------> 29647032658699745658249132666.107879638671875 ^2 ::== 878946545466009309729301130490788406746966659686505381888
t_ten increased 
using t_rst as 296470326586997456582491326661.07879638671875
using for fract 87894654546600930972930113049078838256845026739392188776448
getting the part of 87894654546600930972930113049078838256845026739392188776448 :: ad 59 and mad 66
    -----------------> 296470326586997456582491326661.07879638671875 ^2 ::== 87894654546600930972930113049078838256845026739392188776448
t_ten increased 
using t_rst as 2964703265869974565824913266610.7880859375
using for fract 8789465454660093097293011304907884560711400999633757098999808
getting the part of 8789465454660093097293011304907884560711400999633757098999808 :: ad 61 and mad 66
    -----------------> 2964703265869974565824913266610.7880859375 ^2 ::== 8789465454660093097293011304907884560711400999633757098999808
t_ten increased 
using t_rst as 29647032658699745658249132666107.87890625
using for fract 878946545466009309729301130490788292663054914293179423215583232
getting the part of 878946545466009309729301130490788292663054914293179423215583232 :: ad 63 and mad 66
    -----------------> 29647032658699745658249132666107.87890625 ^2 ::== 878946545466009309729301130490788292663054914293179423215583232
t_ten increased 
using t_rst as 296470326586997456582491326661078.78125
using for fract 87894654546600930972930113049078826731004290972859139328151912448
getting the part of 87894654546600930972930113049078826731004290972859139328151912448 :: ad 65 and mad 66
i push_back a near value of 296470326586997456582491326661078
stopping with ad 65 and mad of 66
    -----------------> 296470326586997456582491326661078.78125 ^2 ::== 87894654546600930972930113049078826731004290972859139328151912448
t_ten increased 
breaking with xbrk of value 1

increasing the digits 12
-------------------------------------------------------
-------------------------------------------------------
times 12 878946545465 818385982742
main 937521.490668347292792889417508933962014530607032781659403164464805513489409349858760833740234375 second 904646.8829007260775529277362922018144680040777823337196095199175260859192349016666412353515625
main 878946545465 second 818385982742
times of 1.145573739578461618891305614141842889977565683430304869028495481960747310558239599165807065528355224e-06
new times of 1.145573739578461618891305614141842889977565683430304869028495481960747310558239599165807065528355224e-06
using 818385982742797630227797825479392 * 1.145573739578461618891305614141842889977565683430304869028495481960747310558239599165807065528355224e-06
937521490669261037035748592.65227901935577392578125  with length of 50 and dot length 27 will move 23
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867703804880946297186674930916261888  main number intpart lenght 66 
 fract 0 int 878946545465764654864654864564867703804880946297186674930916261888
    -----------------> 937521490669261037035748592.65227901935577392578125 ^2 ::== 878946545466713309729310743391701037239437951877775360
 temp fract 0 temp int 878946545466713309729310743391701037239437951877775360
before loop xstp is 0entering tens with lap of value 10
using t_rst as 9375214906692610370357485926.52278995513916015625
using for fract 87894654546671330972931074339170096640394070883309715456
getting the part of 87894654546671330972931074339170096640394070883309715456 :: ad 56 and mad 66
    -----------------> 9375214906692610370357485926.52278995513916015625 ^2 ::== 87894654546671330972931074339170096640394070883309715456
t_ten increased 
using t_rst as 93752149066926103703574859265.2279052734375
using for fract 8789465454667133097293107433917010457396976210431367446528
getting the part of 8789465454667133097293107433917010457396976210431367446528 :: ad 58 and mad 66
    -----------------> 93752149066926103703574859265.2279052734375 ^2 ::== 8789465454667133097293107433917010457396976210431367446528
t_ten increased 
using t_rst as 937521490669261037035748592652.279052734375
using for fract 878946545466713309729310743391701137618059911754954022322176
getting the part of 878946545466713309729310743391701137618059911754954022322176 :: ad 60 and mad 66
    -----------------> 937521490669261037035748592652.279052734375 ^2 ::== 878946545466713309729310743391701137618059911754954022322176
t_ten increased 
using t_rst as 9375214906692610370357485926522.7900390625
using for fract 87894654546671330972931074339170100144465559036312378341851136
getting the part of 87894654546671330972931074339170100144465559036312378341851136 :: ad 62 and mad 66
    -----------------> 9375214906692610370357485926522.7900390625 ^2 ::== 87894654546671330972931074339170100144465559036312378341851136
t_ten increased 
using t_rst as 93752149066926103703574859265227.90625
using for fract 8789465454667133097293107433917010569043693503481600988992765952
getting the part of 8789465454667133097293107433917010569043693503481600988992765952 :: ad 64 and mad 66
    -----------------> 93752149066926103703574859265227.90625 ^2 ::== 8789465454667133097293107433917010569043693503481600988992765952
t_ten increased 
using t_rst as 937521490669261037035748592652279
using for fract 878946545466713309729310743391700904786297322960631919294891950080
getting the part of 878946545466713309729310743391700904786297322960631919294891950080 :: ad 66 and mad 66
i push_back a near value of 937521490669261037035748592652279
stopping with ad 66 and mad of 66
    -----------------> 937521490669261037035748592652279 ^2 ::== 878946545466713309729310743391700904786297322960631919294891950080
t_ten increased 
breaking with xbrk of value 1

increasing the digits 13
-------------------------------------------------------
-------------------------------------------------------
times 13 8789465454657 8183859827427
main 2964703.2658694529120512254088480664740294246765950740844959565567506842853617854416370391845703125 second 2860744.6281391493683477149315979474880777784892120564380797731462990896034170873463153839111328125
main 8789465454657.0000000000000000000008470329472543003390683225006796419620513916015625 second 8183859827426.9999999999999999999991529670527456996609316774993203580379486083984375
times of 3.622622244742861896772691639426185403178467015537725917802870645648097935532720134709297465924748849e-07
new times of 3.622622244742861896772691639426185403178467015537725917802870645648097935532720134709297465924748849e-07
using 818385982742797630227797825479392 * 3.622622244742861896772691639426185403178467015537725917802870645648097935532720134709297465924748849e-07
296470326586980658948620512.4340746402740478515625  with length of 49 and dot length 27 will move 22
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867703804880946297186674930916261888  main number intpart lenght 66 
 fract 0 int 878946545465764654864654864564867703804880946297186674930916261888
    -----------------> 296470326586980658948620512.4340746402740478515625 ^2 ::== 87894654546590970972930975122991072749795141048336384
 temp fract 0 temp int 87894654546590970972930975122991072749795141048336384
before loop xstp is 0entering tens with lap of value 10
using t_rst as 2964703265869806589486205124.340746402740478515625
using for fract 8789465454659097097293097512299107311873002252252741632
getting the part of 8789465454659097097293097512299107311873002252252741632 :: ad 55 and mad 66
    -----------------> 2964703265869806589486205124.340746402740478515625 ^2 ::== 8789465454659097097293097512299107311873002252252741632
t_ten increased 
using t_rst as 29647032658698065894862051243.40746307373046875
using for fract 878946545465909709729309751229910674518902430789531598848
getting the part of 878946545465909709729309751229910674518902430789531598848 :: ad 57 and mad 66
    -----------------> 29647032658698065894862051243.40746307373046875 ^2 ::== 878946545465909709729309751229910674518902430789531598848
t_ten increased 
using t_rst as 296470326586980658948620512434.07464599609375
using for fract 87894654546590970972930975122991076518833890188671970181120
getting the part of 87894654546590970972930975122991076518833890188671970181120 :: ad 59 and mad 66
    -----------------> 296470326586980658948620512434.07464599609375 ^2 ::== 87894654546590970972930975122991076518833890188671970181120
t_ten increased 
using t_rst as 2964703265869806589486205124340.74658203125
using for fract 8789465454659097097293097512299108154796529978552933695881216
getting the part of 8789465454659097097293097512299108154796529978552933695881216 :: ad 61 and mad 66
    -----------------> 2964703265869806589486205124340.74658203125 ^2 ::== 8789465454659097097293097512299108154796529978552933695881216
t_ten increased 
using t_rst as 29647032658698065894862051243407.46484375
using for fract 878946545465909709729309751229910835286693626421377767974109184
getting the part of 878946545465909709729309751229910835286693626421377767974109184 :: ad 63 and mad 66
    -----------------> 29647032658698065894862051243407.46484375 ^2 ::== 878946545465909709729309751229910835286693626421377767974109184
t_ten increased 
using t_rst as 296470326586980658948620512434074.625
using for fract 87894654546590970972930975122991061344783858648123250605104824320
getting the part of 87894654546590970972930975122991061344783858648123250605104824320 :: ad 65 and mad 66
i push_back a near value of 296470326586980658948620512434074
stopping with ad 65 and mad of 66
    -----------------> 296470326586980658948620512434074.625 ^2 ::== 87894654546590970972930975122991061344783858648123250605104824320
t_ten increased 
breaking with xbrk of value 1

increasing the digits 14
-------------------------------------------------------
-------------------------------------------------------
times 14 87894654546576 81838598274279
main 9375214.90668752616834825800887280262320472882957004992325600323255230250651948153972625732421875 second 9046468.82901162712009383660531918225041839548012168113581832340486243992927484214305877685546875
main 87894654546576 second 81838598274278.999999999999999999986447472843931194574906839989125728607177734375
times of 1.14557373957785105221144149291543435125001760336273850862937609818445756932558791600749049238716637e-07
new times of 1.14557373957785105221144149291543435125001760336273850862937609818445756932558791600749049238716637e-07
using 818385982742797630227797825479392 * 1.14557373957785105221144149291543435125001760336273850862937609818445756932558791600749049238716637e-07
93752149066876135782341798.6692938506603240966796875  with length of 51 and dot length 26 will move 25
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867703804880946297186674930916261888  main number intpart lenght 66 
 fract 0 int 878946545465764654864654864564867703804880946297186674930916261888
    -----------------> 93752149066876135782341798.6692938506603240966796875 ^2 ::== 8789465454657763897293097292721494994269218845753344
 temp fract 0 temp int 8789465454657763897293097292721494994269218845753344
before loop xstp is 0entering tens with lap of value 10
using t_rst as 937521490668761357823417986.6929385662078857421875
using for fract 878946545465776389729309729272149647000874474251747328
getting the part of 878946545465776389729309729272149647000874474251747328 :: ad 54 and mad 66
    -----------------> 937521490668761357823417986.6929385662078857421875 ^2 ::== 878946545465776389729309729272149647000874474251747328
t_ten increased 
using t_rst as 9375214906687613578234179866.92938518524169921875
using for fract 87894654546577638972930972927214945220325705587888226304
getting the part of 87894654546577638972930972927214945220325705587888226304 :: ad 56 and mad 66
    -----------------> 9375214906687613578234179866.92938518524169921875 ^2 ::== 87894654546577638972930972927214945220325705587888226304
t_ten increased 
using t_rst as 93752149066876135782341798669.293853759765625
using for fract 8789465454657763897293097292721495844295185762289482465280
getting the part of 8789465454657763897293097292721495844295185762289482465280 :: ad 58 and mad 66
    -----------------> 93752149066876135782341798669.293853759765625 ^2 ::== 8789465454657763897293097292721495844295185762289482465280
t_ten increased 
using t_rst as 937521490668761357823417986692.9384765625
using for fract 878946545465776389729309729272149458701233336307514077085696
getting the part of 878946545465776389729309729272149458701233336307514077085696 :: ad 60 and mad 66
    -----------------> 937521490668761357823417986692.9384765625 ^2 ::== 878946545465776389729309729272149458701233336307514077085696
t_ten increased 
using t_rst as 9375214906687613578234179866929.384765625
using for fract 87894654546577638972930972927214940918363176489230308112072704
getting the part of 87894654546577638972930972927214940918363176489230308112072704 :: ad 62 and mad 66
    -----------------> 9375214906687613578234179866929.384765625 ^2 ::== 87894654546577638972930972927214940918363176489230308112072704
t_ten increased 
using t_rst as 93752149066876135782341798669293.84375
using for fract 8789465454657763897293097292721493735309586334733511640259493888
getting the part of 8789465454657763897293097292721493735309586334733511640259493888 :: ad 64 and mad 66
    -----------------> 93752149066876135782341798669293.84375 ^2 ::== 8789465454657763897293097292721493735309586334733511640259493888
t_ten increased 
using t_rst as 937521490668761357823417986692938.5
using for fract 878946545465776389729309729272149439448789845341280041854516068352
getting the part of 878946545465776389729309729272149439448789845341280041854516068352 :: ad 66 and mad 66
i push_back a near value of 937521490668761357823417986692938
stopping with ad 66 and mad of 66
    -----------------> 937521490668761357823417986692938.5 ^2 ::== 878946545465776389729309729272149439448789845341280041854516068352
t_ten increased 
breaking with xbrk of value 1

increasing the digits 15
-------------------------------------------------------
-------------------------------------------------------
times 15 878946545465764 818385982742797
main 29647032.65869560848654420719991921919208754642176446847390280936451745219528675079345703125 second 28607446.2813931890462691629020399871509068559325363501240346852938500887830741703510284423828125
main 878946545465764 second 818385982742797
times of 3.622622244742564411527735702103404758498701689875630029751542646622452527826145082063755142876004811e-08
new times of 3.622622244742564411527735702103404758498701689875630029751542646622452527826145082063755142876004811e-08
using 818385982742797630227797825479392 * 3.622622244742564411527735702103404758498701689875630029751542646622452527826145082063755142876004811e-08
29647032658695631317316603.7769313119351863861083984375  with length of 54 and dot length 26 will move 28
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867703804880946297186674930916261888  main number intpart lenght 66 
 fract 0 int 878946545465764654864654864564867703804880946297186674930916261888
    -----------------> 29647032658695631317316603.7769313119351863861083984375 ^2 ::== 878946545465765353729309729130289068407590066585600
 temp fract 0 temp int 878946545465765353729309729130289068407590066585600
before loop xstp is 0entering tens with lap of value 10
using t_rst as 296470326586956313173166037.7693131268024444580078125
using for fract 87894654546576535372930972913028915487670291209912320
getting the part of 87894654546576535372930972913028915487670291209912320 :: ad 53 and mad 66
    -----------------> 296470326586956313173166037.7693131268024444580078125 ^2 ::== 87894654546576535372930972913028915487670291209912320
t_ten increased 
using t_rst as 2964703265869563131731660377.693130970001220703125
using for fract 8789465454657653537293097291302889704092621750036070400
getting the part of 8789465454657653537293097291302889704092621750036070400 :: ad 55 and mad 66
    -----------------> 2964703265869563131731660377.693130970001220703125 ^2 ::== 8789465454657653537293097291302889704092621750036070400
t_ten increased 
using t_rst as 29647032658695631317316603776.93131256103515625
using for fract 878946545465765353729309729130289249028884664312674648064
getting the part of 878946545465765353729309729130289249028884664312674648064 :: ad 57 and mad 66
    -----------------> 29647032658695631317316603776.93131256103515625 ^2 ::== 878946545465765353729309729130289249028884664312674648064
t_ten increased 
using t_rst as 296470326586956313173166037769.3131103515625
using for fract 87894654546576535372930972913028910395778631055717368332288
getting the part of 87894654546576535372930972913028910395778631055717368332288 :: ad 59 and mad 66
    -----------------> 296470326586956313173166037769.3131103515625 ^2 ::== 87894654546576535372930972913028910395778631055717368332288
t_ten increased 
using t_rst as 2964703265869563131731660377693.13134765625
using for fract 8789465454657653537293097291302892703059790895301481228926976
getting the part of 8789465454657653537293097291302892703059790895301481228926976 :: ad 61 and mad 66
    -----------------> 2964703265869563131731660377693.13134765625 ^2 ::== 8789465454657653537293097291302892703059790895301481228926976
t_ten increased 
using t_rst as 29647032658695631317316603776931.3125
using for fract 878946545465765353729309729130289096994373589576909637015306240
getting the part of 878946545465765353729309729130289096994373589576909637015306240 :: ad 63 and mad 66
    -----------------> 29647032658695631317316603776931.3125 ^2 ::== 878946545465765353729309729130289096994373589576909637015306240
t_ten increased 
using t_rst as 296470326586956313173166037769313.125
using for fract 87894654546576535372930972913028921108292761011755577171859472384
getting the part of 87894654546576535372930972913028921108292761011755577171859472384 :: ad 65 and mad 66
i push_back a near value of 296470326586956313173166037769313
stopping with ad 65 and mad of 66
    -----------------> 296470326586956313173166037769313.125 ^2 ::== 87894654546576535372930972913028921108292761011755577171859472384
t_ten increased 
breaking with xbrk of value 1

increasing the digits 16
-------------------------------------------------------
-------------------------------------------------------
times 16 8789465454657646 8183859827427976
main 93752149.06687550701119217310952513122915767011390894732081324747241524164564907550811767578125 second 90464688.2901166912543395134222661660570309756265847296596849247407590155489742755889892578125
main 8789465454657646 second 8183859827427975.999999999999999999132638262011596452794037759304046630859375
times of 1.145573739577843411460675082636556502069960583110610310706600376641634942001448638109389671288496082e-08
new times of 1.145573739577843411460675082636556502069960583110610310706600376641634942001448638109389671288496082e-08
using 818385982742797630227797825479392 * 1.145573739577843411460675082636556502069960583110610310706600376641634942001448638109389671288496082e-08
9375214906687551047400931.252326817251741886138916015625  with length of 55 and dot length 25 will move 30
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867703804880946297186674930916261888  main number intpart lenght 66 
 fract 0 int 878946545465764654864654864564867703804880946297186674930916261888
    -----------------> 9375214906687551047400931.252326817251741886138916015625 ^2 ::== 87894654546576466492930972912973363387882480336896
 temp fract 0 temp int 87894654546576466492930972912973363387882480336896
before loop xstp is 0entering tens with lap of value 10
using t_rst as 93752149066875510474009312.52326817810535430908203125
using for fract 8789465454657646649293097291297338104199301962924032
getting the part of 8789465454657646649293097291297338104199301962924032 :: ad 52 and mad 66
    -----------------> 93752149066875510474009312.52326817810535430908203125 ^2 ::== 8789465454657646649293097291297338104199301962924032
t_ten increased 
using t_rst as 937521490668755104740093125.232681751251220703125
using for fract 878946545465764664929309729129733708962837790889869312
getting the part of 878946545465764664929309729129733708962837790889869312 :: ad 54 and mad 66
    -----------------> 937521490668755104740093125.232681751251220703125 ^2 ::== 878946545465764664929309729129733708962837790889869312
t_ten increased 
using t_rst as 9375214906687551047400931252.32681751251220703125
using for fract 87894654546576466492930972912973372667171210165103886336
getting the part of 87894654546576466492930972912973372667171210165103886336 :: ad 56 and mad 66
    -----------------> 9375214906687551047400931252.32681751251220703125 ^2 ::== 87894654546576466492930972912973372667171210165103886336
t_ten increased 
using t_rst as 93752149066875510474009312523.2681732177734375
using for fract 8789465454657646649293097291297336888927802386938771537920
getting the part of 8789465454657646649293097291297336888927802386938771537920 :: ad 58 and mad 66
    -----------------> 93752149066875510474009312523.2681732177734375 ^2 ::== 8789465454657646649293097291297336888927802386938771537920
t_ten increased 
using t_rst as 937521490668755104740093125232.6817626953125
using for fract 878946545465764664929309729129733775935439250947177732636672
getting the part of 878946545465764664929309729129733775935439250947177732636672 :: ad 60 and mad 66
    -----------------> 937521490668755104740093125232.6817626953125 ^2 ::== 878946545465764664929309729129733775935439250947177732636672
t_ten increased 
using t_rst as 9375214906687551047400931252326.8173828125
using for fract 87894654546576466492930972912973371403843728667816398768046080
getting the part of 87894654546576466492930972912973371403843728667816398768046080 :: ad 62 and mad 66
    -----------------> 9375214906687551047400931252326.8173828125 ^2 ::== 87894654546576466492930972912973371403843728667816398768046080
t_ten increased 
using t_rst as 93752149066875510474009312523268.171875
using for fract 8789465454657646649293097291297336348102747724138263941365104640
getting the part of 8789465454657646649293097291297336348102747724138263941365104640 :: ad 64 and mad 66
    -----------------> 93752149066875510474009312523268.171875 ^2 ::== 8789465454657646649293097291297336348102747724138263941365104640
t_ten increased 
using t_rst as 937521490668755104740093125232681.75
using for fract 878946545465764664929309729129733776787141997975519361767269466112
getting the part of 878946545465764664929309729129733776787141997975519361767269466112 :: ad 66 and mad 66
i push_back a near value of 937521490668755104740093125232681
stopping with ad 66 and mad of 66
    -----------------> 937521490668755104740093125232681.75 ^2 ::== 878946545465764664929309729129733776787141997975519361767269466112
t_ten increased 
breaking with xbrk of value 1

increasing the digits 17
-------------------------------------------------------
-------------------------------------------------------
times 17 87894654546576465 81838598274279763
main 296470326.586956194488554692235056886446225509637131083351402338621483067981898784637451171875 second 286074462.813932000573883275260334265072937051652200539375581200829401495866477489471435546875
main 87894654546576465.00000000000000001387778780781445675529539585113525390625 second 81838598274279763
times of 3.62262224474256296230828058565426257537891174712101938449012506980929871120754005032429023638179677e-09
new times of 3.62262224474256296230828058565426257537891174712101938449012506980929871120754005032429023638179677e-09
using 818385982742797630227797825479392 * 3.62262224474256296230828058565426257537891174712101938449012506980929871120754005032429023638179677e-09
2964703265869561945710772.3922361987642943859100341796875  with length of 56 and dot length 25 will move 31
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867703804880946297186674930916261888  main number intpart lenght 66 
 fract 0 int 878946545465764654864654864564867703804880946297186674930916261888
    -----------------> 2964703265869561945710772.3922361987642943859100341796875 ^2 ::== 8789465454657646504893097291297342136877704019968
 temp fract 0 temp int 8789465454657646504893097291297342136877704019968
before loop xstp is 0entering tens with lap of value 10
using t_rst as 29647032658695619457107723.9223619885742664337158203125
using for fract 878946545465764650489309729129734267730965930442752
getting the part of 878946545465764650489309729129734267730965930442752 :: ad 51 and mad 66
    -----------------> 29647032658695619457107723.9223619885742664337158203125 ^2 ::== 878946545465764650489309729129734267730965930442752
t_ten increased 
using t_rst as 296470326586956194571077239.223619878292083740234375
using for fract 87894654546576465048930972912973425043714336134004736
getting the part of 87894654546576465048930972912973425043714336134004736 :: ad 53 and mad 66
    -----------------> 296470326586956194571077239.223619878292083740234375 ^2 ::== 87894654546576465048930972912973425043714336134004736
t_ten increased 
using t_rst as 2964703265869561945710772392.236198902130126953125
using for fract 8789465454657646504893097291297343832537006920488189952
getting the part of 8789465454657646504893097291297343832537006920488189952 :: ad 55 and mad 66
    -----------------> 2964703265869561945710772392.236198902130126953125 ^2 ::== 8789465454657646504893097291297343832537006920488189952
t_ten increased 
using t_rst as 29647032658695619457107723922.361988067626953125
using for fract 878946545465764650489309729129734293528737517525559934976
getting the part of 878946545465764650489309729129734293528737517525559934976 :: ad 57 and mad 66
    -----------------> 29647032658695619457107723922.361988067626953125 ^2 ::== 878946545465764650489309729129734293528737517525559934976
t_ten increased 
using t_rst as 296470326586956194571077239223.619873046875
using for fract 87894654546576465048930972912973425121633383101353882025984
getting the part of 87894654546576465048930972912973425121633383101353882025984 :: ad 59 and mad 66
    -----------------> 296470326586956194571077239223.619873046875 ^2 ::== 87894654546576465048930972912973425121633383101353882025984
t_ten increased 
using t_rst as 2964703265869561945710772392236.19873046875
using for fract 8789465454657646504893097291297342357420833399462853840207872
getting the part of 8789465454657646504893097291297342357420833399462853840207872 :: ad 61 and mad 66
    -----------------> 2964703265869561945710772392236.19873046875 ^2 ::== 8789465454657646504893097291297342357420833399462853840207872
t_ten increased 
using t_rst as 29647032658695619457107723922361.98828125
using for fract 878946545465764650489309729129734230790323182804764284424290304
getting the part of 878946545465764650489309729129734230790323182804764284424290304 :: ad 63 and mad 66
    -----------------> 29647032658695619457107723922361.98828125 ^2 ::== 878946545465764650489309729129734230790323182804764284424290304
t_ten increased 
using t_rst as 296470326586956194571077239223619.875
using for fract 87894654546576465048930972912973423079032318280476428442429030400
getting the part of 87894654546576465048930972912973423079032318280476428442429030400 :: ad 65 and mad 66
i push_back a near value of 296470326586956194571077239223619
stopping with ad 65 and mad of 66
    -----------------> 296470326586956194571077239223619.875 ^2 ::== 87894654546576465048930972912973423079032318280476428442429030400
t_ten increased 
breaking with xbrk of value 1

increasing the digits 18
-------------------------------------------------------
-------------------------------------------------------
times 18 878946545465764654 818385982742797630
main 937521490.66875509891126155288461114149123412709924303698461045541989733465015888214111328125 second 904646882.90116692912445044267140236242696517076863384210216878500432358123362064361572265625
main 878946545465764654.00000000000000011102230246251565404236316680908203125 second 818385982742797630.00000000000000011102230246251565404236316680908203125
times of 1.145573739577843404657195449608904980819276328154053061660530952497638676238335842475877938192313499e-09
new times of 1.145573739577843404657195449608904980819276328154053061660530952497638676238335842475877938192313499e-09
using 818385982742797630227797825479392 * 1.145573739577843404657195449608904980819276328154053061660530952497638676238335842475877938192313499e-09
937521490668755099172220.75968673895113170146942138671875  with length of 56 and dot length 24 will move 32
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867703804880946297186674930916261888  main number intpart lenght 66 
 fract 0 int 878946545465764654864654864564867703804880946297186674930916261888
    -----------------> 937521490668755099172220.75968673895113170146942138671875 ^2 ::== 878946545465764654489309729129733645833823322112
 temp fract 0 temp int 878946545465764654489309729129733645833823322112
before loop xstp is 0entering tens with lap of value 10
using t_rst as 9375214906687550991722207.596867389976978302001953125
using for fract 87894654546576465448930972912973379783031074586624
getting the part of 87894654546576465448930972912973379783031074586624 :: ad 50 and mad 66
    -----------------> 9375214906687550991722207.596867389976978302001953125 ^2 ::== 87894654546576465448930972912973379783031074586624
t_ten increased 
using t_rst as 93752149066875509917222075.96867389976978302001953125
using for fract 8789465454657646544893097291297337329784761117310976
getting the part of 8789465454657646544893097291297337329784761117310976 :: ad 52 and mad 66
    -----------------> 93752149066875509917222075.96867389976978302001953125 ^2 ::== 8789465454657646544893097291297337329784761117310976
t_ten increased 
using t_rst as 937521490668755099172220759.6867389678955078125
using for fract 878946545465764654489309729129733756036906203868037120
getting the part of 878946545465764654489309729129733756036906203868037120 :: ad 54 and mad 66
    -----------------> 937521490668755099172220759.6867389678955078125 ^2 ::== 878946545465764654489309729129733756036906203868037120
t_ten increased 
using t_rst as 9375214906687550991722207596.867389678955078125
using for fract 87894654546576465448930972912973375013394810028098060288
getting the part of 87894654546576465448930972912973375013394810028098060288 :: ad 56 and mad 66
    -----------------> 9375214906687550991722207596.867389678955078125 ^2 ::== 87894654546576465448930972912973375013394810028098060288
t_ten increased 
using t_rst as 93752149066875509917222075968.67388916015625
using for fract 8789465454657646544893097291297335990182206484523337646080
getting the part of 8789465454657646544893097291297335990182206484523337646080 :: ad 58 and mad 66
    -----------------> 93752149066875509917222075968.67388916015625 ^2 ::== 8789465454657646544893097291297335990182206484523337646080
t_ten increased 
using t_rst as 937521490668755099172220759686.7388916015625
using for fract 878946545465764654489309729129733579675407534618266969309184
getting the part of 878946545465764654489309729129733579675407534618266969309184 :: ad 60 and mad 66
    -----------------> 937521490668755099172220759686.7388916015625 ^2 ::== 878946545465764654489309729129733579675407534618266969309184
t_ten increased 
using t_rst as 9375214906687550991722207596867.3896484375
using for fract 87894654546576465448930972912973367252091048102178758674350080
getting the part of 87894654546576465448930972912973367252091048102178758674350080 :: ad 62 and mad 66
    -----------------> 9375214906687550991722207596867.3896484375 ^2 ::== 87894654546576465448930972912973367252091048102178758674350080
t_ten increased 
using t_rst as 93752149066875509917222075968673.890625
using for fract 8789465454657646544893097291297335695242992124781487151363653632
getting the part of 8789465454657646544893097291297335695242992124781487151363653632 :: ad 64 and mad 66
    -----------------> 93752149066875509917222075968673.890625 ^2 ::== 8789465454657646544893097291297335695242992124781487151363653632
t_ten increased 
using t_rst as 937521490668755099172220759686739
using for fract 878946545465764654489309729129733838266226460862781832437444902912
getting the part of 878946545465764654489309729129733838266226460862781832437444902912 :: ad 66 and mad 66
i push_back a near value of 937521490668755099172220759686739
stopping with ad 66 and mad of 66
    -----------------> 937521490668755099172220759686739 ^2 ::== 878946545465764654489309729129733838266226460862781832437444902912
t_ten increased 
breaking with xbrk of value 1

increasing the digits 19
-------------------------------------------------------
-------------------------------------------------------
times 19 8789465454657646548 8183859827427976302
main 2964703265.869561952980792161998754196428381213544549221960977547496440820395946502685546875 second 2860744628.139320006088392091162834742468989992982171532975854688629624433815479278564453125
main 8789465454657646548 second 8183859827427976302.00000000000000088817841970012523233890533447265625
times of 3.622622244742562971314691919823145344024605847757183544258980024504172579710096480282944197102990014e-10
new times of 3.622622244742562971314691919823145344024605847757183544258980024504172579710096480282944197102990014e-10
using 818385982742797630227797825479392 * 3.622622244742562971314691919823145344024605847757183544258980024504172579710096480282944197102990014e-10
296470326586956195308149.31829358710092492401599884033203125  with length of 59 and dot length 24 will move 35
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867703804880946297186674930916261888  main number intpart lenght 66 
 fract 0 int 878946545465764654864654864564867703804880946297186674930916261888
    -----------------> 296470326586956195308149.31829358710092492401599884033203125 ^2 ::== 87894654546576465485970972912973389726604066816
 temp fract 0 temp int 87894654546576465485970972912973389726604066816
before loop xstp is 0entering tens with lap of value 10
using t_rst as 2964703265869561953081493.182935871183872222900390625
using for fract 8789465454657646548597097291297339711532220547072
getting the part of 8789465454657646548597097291297339711532220547072 :: ad 49 and mad 66
    -----------------> 2964703265869561953081493.182935871183872222900390625 ^2 ::== 8789465454657646548597097291297339711532220547072
t_ten increased 
using t_rst as 29647032658695619530814931.82935871183872222900390625
using for fract 878946545465764654859709729129733993671220191559680
getting the part of 878946545465764654859709729129733993671220191559680 :: ad 51 and mad 66
    -----------------> 29647032658695619530814931.82935871183872222900390625 ^2 ::== 878946545465764654859709729129733993671220191559680
t_ten increased 
using t_rst as 296470326586956195308149318.29358708858489990234375
using for fract 87894654546576465485970972912973380920377945446416384
getting the part of 87894654546576465485970972912973380920377945446416384 :: ad 53 and mad 66
    -----------------> 296470326586956195308149318.29358708858489990234375 ^2 ::== 87894654546576465485970972912973380920377945446416384
t_ten increased 
using t_rst as 2964703265869561953081493182.935871124267578125
using for fract 8789465454657646548597097291297340268753595242368729088
getting the part of 8789465454657646548597097291297340268753595242368729088 :: ad 55 and mad 66
    -----------------> 2964703265869561953081493182.935871124267578125 ^2 ::== 8789465454657646548597097291297340268753595242368729088
t_ten increased 
using t_rst as 29647032658695619530814931829.35871124267578125
using for fract 878946545465764654859709729129733960762228764061839917056
getting the part of 878946545465764654859709729129733960762228764061839917056 :: ad 57 and mad 66
    -----------------> 29647032658695619530814931829.35871124267578125 ^2 ::== 878946545465764654859709729129733960762228764061839917056
t_ten increased 
using t_rst as 296470326586956195308149318293.58709716796875
using for fract 87894654546576465485970972912973387613742139103779768762368
getting the part of 87894654546576465485970972912973387613742139103779768762368 :: ad 59 and mad 66
    -----------------> 296470326586956195308149318293.58709716796875 ^2 ::== 87894654546576465485970972912973387613742139103779768762368
t_ten increased 
using t_rst as 2964703265869561953081493182935.87109375
using for fract 8789465454657646548597097291297339457715486008404381506994176
getting the part of 8789465454657646548597097291297339457715486008404381506994176 :: ad 61 and mad 66
    -----------------> 2964703265869561953081493182935.87109375 ^2 ::== 8789465454657646548597097291297339457715486008404381506994176
t_ten increased 
using t_rst as 29647032658695619530814931829358.7109375
using for fract 878946545465764654859709729129733921012747815132832652716933120
getting the part of 878946545465764654859709729129733921012747815132832652716933120 :: ad 63 and mad 66
    -----------------> 29647032658695619530814931829358.7109375 ^2 ::== 878946545465764654859709729129733921012747815132832652716933120
t_ten increased 
using t_rst as 296470326586956195308149318293587.09375
using for fract 87894654546576465485970972912973383227720579915677454794770874368
getting the part of 87894654546576465485970972912973383227720579915677454794770874368 :: ad 65 and mad 66
i push_back a near value of 296470326586956195308149318293587
stopping with ad 65 and mad of 66
    -----------------> 296470326586956195308149318293587.09375 ^2 ::== 87894654546576465485970972912973383227720579915677454794770874368
t_ten increased 
breaking with xbrk of value 1

increasing the digits 20
-------------------------------------------------------
-------------------------------------------------------
times 20 87894654546576465486 81838598274279763022
main 9375214906.6875509936991770560199720501231041990160275378940468726796098053455352783203125 second 9046468829.0116692924604484826669315655970127535399905038815404623164795339107513427734375
main 87894654546576465486 second 81838598274279763022.0000000000000142108547152020037174224853515625
times of 1.145573739577843404909680138212375624416894766910950131723028535085166833156618388751981029132897411e-10
new times of 1.145573739577843404909680138212375624416894766910950131723028535085166833156618388751981029132897411e-10
using 818385982742797630227797825479392 * 1.145573739577843404909680138212375624416894766910950131723028535085166833156618388751981029132897411e-10
93752149066875509937885.0689696999615989625453948974609375  with length of 57 and dot length 23 will move 34
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867703804880946297186674930916261888  main number intpart lenght 66 
 fract 0 int 878946545465764654864654864564867703804880946297186674930916261888
    -----------------> 93752149066875509937885.0689696999615989625453948974609375 ^2 ::== 8789465454657646548767497291297339443536461824
 temp fract 0 temp int 8789465454657646548767497291297339443536461824
before loop xstp is 0entering tens with lap of value 10
using t_rst as 937521490668755099378850.689696999615989625453948974609375
using for fract 878946545465764654876749729129733904771227582464
getting the part of 878946545465764654876749729129733904771227582464 :: ad 48 and mad 66
    -----------------> 937521490668755099378850.689696999615989625453948974609375 ^2 ::== 878946545465764654876749729129733904771227582464
t_ten increased 
using t_rst as 9375214906687550993788506.896969996392726898193359375
using for fract 87894654546576465487674972912973393291872525352960
getting the part of 87894654546576465487674972912973393291872525352960 :: ad 50 and mad 66
    -----------------> 9375214906687550993788506.896969996392726898193359375 ^2 ::== 87894654546576465487674972912973393291872525352960
t_ten increased 
using t_rst as 93752149066875509937885068.96969996392726898193359375
using for fract 8789465454657646548767497291297339977705598876647424
getting the part of 8789465454657646548767497291297339977705598876647424 :: ad 52 and mad 66
    -----------------> 93752149066875509937885068.96969996392726898193359375 ^2 ::== 8789465454657646548767497291297339977705598876647424
t_ten increased 
using t_rst as 937521490668755099378850689.69699966907501220703125
using for fract 878946545465764654876749729129734053110792108793397248
getting the part of 878946545465764654876749729129734053110792108793397248 :: ad 54 and mad 66
    -----------------> 937521490668755099378850689.69699966907501220703125 ^2 ::== 878946545465764654876749729129734053110792108793397248
t_ten increased 
using t_rst as 9375214906687550993788506896.96999645233154296875
using for fract 87894654546576465487674972912973398227529486574871904256
getting the part of 87894654546576465487674972912973398227529486574871904256 :: ad 56 and mad 66
    -----------------> 9375214906687550993788506896.96999645233154296875 ^2 ::== 87894654546576465487674972912973398227529486574871904256
t_ten increased 
using t_rst as 93752149066875509937885068969.6999664306640625
using for fract 8789465454657646548767497291297340313879062875930292649984
getting the part of 8789465454657646548767497291297340313879062875930292649984 :: ad 58 and mad 66
    -----------------> 93752149066875509937885068969.6999664306640625 ^2 ::== 8789465454657646548767497291297340313879062875930292649984
t_ten increased 
using t_rst as 937521490668755099378850689696.9996337890625
using for fract 878946545465764654876749729129733944345247275339728686153728
getting the part of 878946545465764654876749729129733944345247275339728686153728 :: ad 60 and mad 66
    -----------------> 937521490668755099378850689696.9996337890625 ^2 ::== 878946545465764654876749729129733944345247275339728686153728
t_ten increased 
using t_rst as 9375214906687550993788506896969.99609375
using for fract 87894654546576465487674972912973388863794550749761631569313792
getting the part of 87894654546576465487674972912973388863794550749761631569313792 :: ad 62 and mad 66
    -----------------> 9375214906687550993788506896969.99609375 ^2 ::== 87894654546576465487674972912973388863794550749761631569313792
t_ten increased 
using t_rst as 93752149066875509937885068969699.96875
using for fract 8789465454657646548767497291297340589784949131659421418126311424
getting the part of 8789465454657646548767497291297340589784949131659421418126311424 :: ad 64 and mad 66
    -----------------> 93752149066875509937885068969699.96875 ^2 ::== 8789465454657646548767497291297340589784949131659421418126311424
t_ten increased 
using t_rst as 937521490668755099378850689696999.625
using for fract 878946545465764654876749729129733982919458899472178052010438819840
getting the part of 878946545465764654876749729129733982919458899472178052010438819840 :: ad 66 and mad 66
i push_back a near value of 937521490668755099378850689696999
stopping with ad 66 and mad of 66
    -----------------> 937521490668755099378850689696999.625 ^2 ::== 878946545465764654876749729129733982919458899472178052010438819840
t_ten increased 
breaking with xbrk of value 1

increasing the digits 21
-------------------------------------------------------
-------------------------------------------------------
times 21 878946545465764654864 818385982742797630227
main 29647032658.695619530887287651940633328092952075184796090212557828635908663272857666015625 second 28607446281.39320006135582601868365827954969232878312812573540213634259998798370361328125
main 878946545465764654864 second 818385982742797630226.9999999999998863131622783839702606201171875
times of 3.622622244742562971327064813299796314564677065099754578201039808460476969564423572602356187519027919e-11
new times of 3.622622244742562971327064813299796314564677065099754578201039808460476969564423572602356187519027919e-11
using 818385982742797630227797825479392 * 3.622622244742562971327064813299796314564677065099754578201039808460476969564423572602356187519027919e-11
29647032658695619530916.18985523131777881644666194915771484375  with length of 61 and dot length 23 will move 38
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867703804880946297186674930916261888  main number intpart lenght 66 
 fract 0 int 878946545465764654864654864564867703804880946297186674930916261888
    -----------------> 29647032658695619530916.18985523131777881644666194915771484375 ^2 ::== 878946545465764654865713729129734368802111488
 temp fract 0 temp int 878946545465764654865713729129734368802111488
before loop xstp is 0entering tens with lap of value 10
using t_rst as 296470326586956195309161.89855231318506412208080291748046875
using for fract 87894654546576465486571372912973440178746032128
getting the part of 87894654546576465486571372912973440178746032128 :: ad 47 and mad 66
    -----------------> 296470326586956195309161.89855231318506412208080291748046875 ^2 ::== 87894654546576465486571372912973440178746032128
t_ten increased 
using t_rst as 2964703265869561953091618.985523131676018238067626953125
using for fract 8789465454657646548657137291297343630846510235648
getting the part of 8789465454657646548657137291297343630846510235648 :: ad 49 and mad 66
    -----------------> 2964703265869561953091618.985523131676018238067626953125 ^2 ::== 8789465454657646548657137291297343630846510235648
t_ten increased 
using t_rst as 29647032658695619530916189.8552313186228275299072265625
using for fract 878946545465764654865713729129734426135045806751744
getting the part of 878946545465764654865713729129734426135045806751744 :: ad 51 and mad 66
    -----------------> 29647032658695619530916189.8552313186228275299072265625 ^2 ::== 878946545465764654865713729129734426135045806751744
t_ten increased 
using t_rst as 296470326586956195309161898.5523131787776947021484375
using for fract 87894654546576465486571372912973439154740066854633472
getting the part of 87894654546576465486571372912973439154740066854633472 :: ad 53 and mad 66
    -----------------> 296470326586956195309161898.5523131787776947021484375 ^2 ::== 87894654546576465486571372912973439154740066854633472
t_ten increased 
using t_rst as 2964703265869561953091618985.523131847381591796875
using for fract 8789465454657646548657137291297344764024234076102721536
getting the part of 8789465454657646548657137291297344764024234076102721536 :: ad 55 and mad 66
    -----------------> 2964703265869561953091618985.523131847381591796875 ^2 ::== 8789465454657646548657137291297344764024234076102721536
t_ten increased 
using t_rst as 29647032658695619530916189855.231319427490234375
using for fract 878946545465764654865713729129734561405020099263886000128
getting the part of 878946545465764654865713729129734561405020099263886000128 :: ad 57 and mad 66
    -----------------> 29647032658695619530916189855.231319427490234375 ^2 ::== 878946545465764654865713729129734561405020099263886000128
t_ten increased 
using t_rst as 296470326586956195309161898552.31317138671875
using for fract 87894654546576465486571372912973438611077625514265566773248
getting the part of 87894654546576465486571372912973438611077625514265566773248 :: ad 59 and mad 66
    -----------------> 296470326586956195309161898552.31317138671875 ^2 ::== 87894654546576465486571372912973438611077625514265566773248
t_ten increased 
using t_rst as 2964703265869561953091618985523.1318359375
using for fract 8789465454657646548657137291297344634820287104789228489277440
getting the part of 8789465454657646548657137291297344634820287104789228489277440 :: ad 61 and mad 66
    -----------------> 2964703265869561953091618985523.1318359375 ^2 ::== 8789465454657646548657137291297344634820287104789228489277440
t_ten increased 
using t_rst as 29647032658695619530916189855231.31640625
using for fract 878946545465764654865713729129734295122183367667205462646849536
getting the part of 878946545465764654865713729129734295122183367667205462646849536 :: ad 63 and mad 66
    -----------------> 29647032658695619530916189855231.31640625 ^2 ::== 878946545465764654865713729129734295122183367667205462646849536
t_ten increased 
using t_rst as 296470326586956195309161898552313.1875
using for fract 87894654546576465486571372912973444724025539505473364225123418112
getting the part of 87894654546576465486571372912973444724025539505473364225123418112 :: ad 65 and mad 66
i push_back a near value of 296470326586956195309161898552313
stopping with ad 65 and mad of 66
    -----------------> 296470326586956195309161898552313.1875 ^2 ::== 87894654546576465486571372912973444724025539505473364225123418112
t_ten increased 
breaking with xbrk of value 1

increasing the digits 22
-------------------------------------------------------
-------------------------------------------------------
times 22 8789465454657646548646 8183859827427976302277
main 93752149066.8755099372370982697927360114079227935979243824249351746402680873870849609375 second 90464688290.11669292503006524625282515328882071425908861783682368695735931396484375
main 8789465454657646548645.9999999999990905052982270717620849609375 second 8183859827427976302277
times of 1.145573739577843404901899407807538846801103856782603810305219885652818440152274589965122020241653639e-11
new times of 1.145573739577843404901899407807538846801103856782603810305219885652818440152274589965122020241653639e-11
using 818385982742797630227797825479392 * 1.145573739577843404901899407807538846801103856782603810305219885652818440152274589965122020241653639e-11
9375214906687550993724.8304899818040212267078459262847900390625  with length of 62 and dot length 22 will move 40
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867703804880946297186674930916261888  main number intpart lenght 66 
 fract 0 int 878946545465764654864654864564867703804880946297186674930916261888
    -----------------> 9375214906687550993724.8304899818040212267078459262847900390625 ^2 ::== 87894654546576465486481012912973389032849408
 temp fract 0 temp int 87894654546576465486481012912973389032849408
before loop xstp is 0entering tens with lap of value 10
using t_rst as 93752149066875509937248.304899818045669235289096832275390625
using for fract 8789465454657646548648101291297340037156306944
getting the part of 8789465454657646548648101291297340037156306944 :: ad 46 and mad 66
    -----------------> 93752149066875509937248.304899818045669235289096832275390625 ^2 ::== 8789465454657646548648101291297340037156306944
t_ten increased 
using t_rst as 937521490668755099372483.048998180427588522434234619140625
using for fract 878946545465764654864810129129733893764467916800
getting the part of 878946545465764654864810129129733893764467916800 :: ad 48 and mad 66
    -----------------> 937521490668755099372483.048998180427588522434234619140625 ^2 ::== 878946545465764654864810129129733893764467916800
t_ten increased 
using t_rst as 9375214906687550993724830.4899818040430545806884765625
using for fract 87894654546576465486481012912973385998747071152128
getting the part of 87894654546576465486481012912973385998747071152128 :: ad 50 and mad 66
    -----------------> 9375214906687550993724830.4899818040430545806884765625 ^2 ::== 87894654546576465486481012912973385998747071152128
t_ten increased 
using t_rst as 93752149066875509937248304.8998180329799652099609375
using for fract 8789465454657646548648101291297337014607638280798208
getting the part of 8789465454657646548648101291297337014607638280798208 :: ad 52 and mad 66
    -----------------> 93752149066875509937248304.8998180329799652099609375 ^2 ::== 8789465454657646548648101291297337014607638280798208
t_ten increased 
using t_rst as 937521490668755099372483048.998180389404296875
using for fract 878946545465764654864810129129733839811344380901457920
getting the part of 878946545465764654864810129129733839811344380901457920 :: ad 54 and mad 66
    -----------------> 937521490668755099372483048.998180389404296875 ^2 ::== 878946545465764654864810129129733839811344380901457920
t_ten increased 
using t_rst as 9375214906687550993724830489.98180389404296875
using for fract 87894654546576465486481012912973389293796731318496657408
getting the part of 87894654546576465486481012912973389293796731318496657408 :: ad 56 and mad 66
    -----------------> 9375214906687550993724830489.98180389404296875 ^2 ::== 87894654546576465486481012912973389293796731318496657408
t_ten increased 
using t_rst as 93752149066875509937248304899.8180389404296875
using for fract 8789465454657646548648101291297338249358899598620754968576
getting the part of 8789465454657646548648101291297338249358899598620754968576 :: ad 58 and mad 66
    -----------------> 93752149066875509937248304899.8180389404296875 ^2 ::== 8789465454657646548648101291297338249358899598620754968576
t_ten increased 
using t_rst as 937521490668755099372483048998.180419921875
using for fract 878946545465764654864810129129733926485658807490926172176384
getting the part of 878946545465764654864810129129733926485658807490926172176384 :: ad 60 and mad 66
    -----------------> 937521490668755099372483048998.180419921875 ^2 ::== 878946545465764654864810129129733926485658807490926172176384
t_ten increased 
using t_rst as 9375214906687550993724830489981.8037109375
using for fract 87894654546576465486481012912973378412255428967219455877709824
getting the part of 87894654546576465486481012912973378412255428967219455877709824 :: ad 62 and mad 66
    -----------------> 9375214906687550993724830489981.8037109375 ^2 ::== 87894654546576465486481012912973378412255428967219455877709824
t_ten increased 
using t_rst as 93752149066875509937248304899818.046875
using for fract 8789465454657646548648101291297340495368987124577254971493318656
getting the part of 8789465454657646548648101291297340495368987124577254971493318656 :: ad 64 and mad 66
    -----------------> 93752149066875509937248304899818.046875 ^2 ::== 8789465454657646548648101291297340495368987124577254971493318656
t_ten increased 
using t_rst as 937521490668755099372483048998180.375
using for fract 878946545465764654864810129129733770653766662247257167874626682880
getting the part of 878946545465764654864810129129733770653766662247257167874626682880 :: ad 66 and mad 66
i push_back a near value of 937521490668755099372483048998180
stopping with ad 66 and mad of 66
    -----------------> 937521490668755099372483048998180.375 ^2 ::== 878946545465764654864810129129733770653766662247257167874626682880
t_ten increased 
breaking with xbrk of value 1

increasing the digits 23
-------------------------------------------------------
-------------------------------------------------------
times 23 87894654546576465486465 81838598274279763022779
main 296470326586.95619530898249963202655802671395095237993899672801489941775798797607421875 second 286074462813.932000613696336125567614645293958164362635443467297591269016265869140625
main 87894654546576465486465 second 81838598274279763022779.000000000014551915228366851806640625
times of 3.622622244742562971324907346671118301529619903699596457942187924200181624000160950513056285887105931e-12
new times of 3.622622244742562971324907346671118301529619903699596457942187924200181624000160950513056285887105931e-12
using 818385982742797630227797825479392 * 3.622622244742562971324907346671118301529619903699596457942187924200181624000160950513056285887105931e-12
2964703265869561953089.85334507598645359394140541553497314453125  with length of 63 and dot length 22 will move 41
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867703804880946297186674930916261888  main number intpart lenght 66 
 fract 0 int 878946545465764654864654864564867703804880946297186674930916261888
    -----------------> 2964703265869561953089.85334507598645359394140541553497314453125 ^2 ::== 8789465454657646548646668091297337511510016
 temp fract 0 temp int 8789465454657646548646668091297337511510016
before loop xstp is 0entering tens with lap of value 10
using t_rst as 29647032658695619530898.53345075986362644471228122711181640625
using for fract 878946545465764654864666809129733669546622976
getting the part of 878946545465764654864666809129733669546622976 :: ad 45 and mad 66
    -----------------> 29647032658695619530898.53345075986362644471228122711181640625 ^2 ::== 878946545465764654864666809129733669546622976
t_ten increased 
using t_rst as 296470326586956195308985.334507598658092319965362548828125
using for fract 87894654546576465486466680912973382347825086464
getting the part of 87894654546576465486466680912973382347825086464 :: ad 47 and mad 66
    -----------------> 296470326586956195308985.334507598658092319965362548828125 ^2 ::== 87894654546576465486466680912973382347825086464
t_ten increased 
using t_rst as 2964703265869561953089853.345075986348092555999755859375
using for fract 8789465454657646548646668091297337495910694780928
getting the part of 8789465454657646548646668091297337495910694780928 :: ad 49 and mad 66
    -----------------> 2964703265869561953089853.345075986348092555999755859375 ^2 ::== 8789465454657646548646668091297337495910694780928
t_ten increased 
using t_rst as 29647032658695619530898533.450759865343570709228515625
using for fract 878946545465764654864666809129733785619866497056768
getting the part of 878946545465764654864666809129733785619866497056768 :: ad 51 and mad 66
    -----------------> 29647032658695619530898533.450759865343570709228515625 ^2 ::== 878946545465764654864666809129733785619866497056768
t_ten increased 
using t_rst as 296470326586956195308985334.5075986385345458984375
using for fract 87894654546576465486466680912973376832604392795406336
getting the part of 87894654546576465486466680912973376832604392795406336 :: ad 53 and mad 66
    -----------------> 296470326586956195308985334.5075986385345458984375 ^2 ::== 87894654546576465486466680912973376832604392795406336
t_ten increased 
using t_rst as 2964703265869561953089853345.075986385345458984375
using for fract 8789465454657646548646668091297337351219045952768704512
getting the part of 8789465454657646548646668091297337351219045952768704512 :: ad 55 and mad 66
    -----------------> 2964703265869561953089853345.075986385345458984375 ^2 ::== 8789465454657646548646668091297337351219045952768704512
t_ten increased 
using t_rst as 29647032658695619530898533450.75986480712890625
using for fract 878946545465764654864666809129733824846867769800129511424
getting the part of 878946545465764654864666809129733824846867769800129511424 :: ad 57 and mad 66
    -----------------> 29647032658695619530898533450.75986480712890625 ^2 ::== 878946545465764654864666809129733824846867769800129511424
t_ten increased 
using t_rst as 296470326586956195308985334507.5986328125
using for fract 87894654546576465486466680912973372813280220062979553492992
getting the part of 87894654546576465486466680912973372813280220062979553492992 :: ad 59 and mad 66
    -----------------> 296470326586956195308985334507.5986328125 ^2 ::== 87894654546576465486466680912973372813280220062979553492992
t_ten increased 
using t_rst as 2964703265869561953089853345075.986328125
using for fract 8789465454657646548646668091297336430244244997599016356151296
getting the part of 8789465454657646548646668091297336430244244997599016356151296 :: ad 61 and mad 66
    -----------------> 2964703265869561953089853345075.986328125 ^2 ::== 8789465454657646548646668091297336430244244997599016356151296
t_ten increased 
using t_rst as 29647032658695619530898533450759.86328125
using for fract 878946545465764654864666809129733638072664342618380536018632704
getting the part of 878946545465764654864666809129733638072664342618380536018632704 :: ad 63 and mad 66
    -----------------> 29647032658695619530898533450759.86328125 ^2 ::== 878946545465764654864666809129733638072664342618380536018632704
t_ten increased 
using t_rst as 296470326586956195308985334507598.65625
using for fract 87894654546576465486466680912973381554374837457049674555708145664
getting the part of 87894654546576465486466680912973381554374837457049674555708145664 :: ad 65 and mad 66
i push_back a near value of 296470326586956195308985334507598
stopping with ad 65 and mad of 66
    -----------------> 296470326586956195308985334507598.65625 ^2 ::== 87894654546576465486466680912973381554374837457049674555708145664
t_ten increased 
breaking with xbrk of value 1

increasing the digits 24
-------------------------------------------------------
-------------------------------------------------------
times 24 878946545465764654864654 818385982742797630227797
main 937521490668.7550993723997820377491354694563137350815651416269247420132160186767578125 second 904646882901.166929250354264541358938208986083251428311768904677592217922210693359375
main 878946545465764654864653.999999999883584678173065185546875 second 818385982742797630227797
times of 1.145573739577843404901798817970159983756238379069333088409267684065484606611298374992481720793232941e-12
new times of 1.145573739577843404901798817970159983756238379069333088409267684065484606611298374992481720793232941e-12
using 818385982742797630227797825479392 * 1.145573739577843404901798817970159983756238379069333088409267684065484606611298374992481720793232941e-12
937521490668755099372.4007276852631775909685529768466949462890625  with length of 64 and dot length 21 will move 43
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867703804880946297186674930916261888  main number intpart lenght 66 
 fract 0 int 878946545465764654864654864564867703804880946297186674930916261888
    -----------------> 937521490668755099372.4007276852631775909685529768466949462890625 ^2 ::== 878946545465764654864655773129733945950208
 temp fract 0 temp int 878946545465764654864655773129733945950208
before loop xstp is 0entering tens with lap of value 10
using t_rst as 9375214906687550993724.007276852631548536010086536407470703125
using for fract 87894654546576465486465577312973387615698944
getting the part of 87894654546576465486465577312973387615698944 :: ad 44 and mad 66
    -----------------> 9375214906687550993724.007276852631548536010086536407470703125 ^2 ::== 87894654546576465486465577312973387615698944
t_ten increased 
using t_rst as 93752149066875509937240.072768526311847381293773651123046875
using for fract 8789465454657646548646557731297338521051725824
getting the part of 8789465454657646548646557731297338521051725824 :: ad 46 and mad 66
    -----------------> 93752149066875509937240.072768526311847381293773651123046875 ^2 ::== 8789465454657646548646557731297338521051725824
t_ten increased 
using t_rst as 937521490668755099372400.72768526314757764339447021484375
using for fract 878946545465764654864655773129733874095405137920
getting the part of 878946545465764654864655773129733874095405137920 :: ad 48 and mad 66
    -----------------> 937521490668755099372400.72768526314757764339447021484375 ^2 ::== 878946545465764654864655773129733874095405137920
t_ten increased 
using t_rst as 9375214906687550993724007.27685263194143772125244140625
using for fract 87894654546576465486465577312973398668539582218240
getting the part of 87894654546576465486465577312973398668539582218240 :: ad 50 and mad 66
    -----------------> 9375214906687550993724007.27685263194143772125244140625 ^2 ::== 87894654546576465486465577312973398668539582218240
t_ten increased 
using t_rst as 93752149066875509937240072.7685263156890869140625
using for fract 8789465454657646548646557731297338605846062558085120
getting the part of 8789465454657646548646557731297338605846062558085120 :: ad 52 and mad 66
    -----------------> 93752149066875509937240072.7685263156890869140625 ^2 ::== 8789465454657646548646557731297338605846062558085120
t_ten increased 
using t_rst as 937521490668755099372400727.685263156890869140625
using for fract 878946545465764654864655773129733851361234218953736192
getting the part of 878946545465764654864655773129733851361234218953736192 :: ad 54 and mad 66
    -----------------> 937521490668755099372400727.685263156890869140625 ^2 ::== 878946545465764654864655773129733851361234218953736192
t_ten increased 
using t_rst as 9375214906687550993724007276.85263156890869140625
using for fract 87894654546576465486465577312973387497306663330196226048
getting the part of 87894654546576465486465577312973387497306663330196226048 :: ad 56 and mad 66
    -----------------> 9375214906687550993724007276.85263156890869140625 ^2 ::== 87894654546576465486465577312973387497306663330196226048
t_ten increased 
using t_rst as 93752149066875509937240072768.5263214111328125
using for fract 8789465454657646548646557731297339883098622221734473891840
getting the part of 8789465454657646548646557731297339883098622221734473891840 :: ad 58 and mad 66
    -----------------> 93752149066875509937240072768.5263214111328125 ^2 ::== 8789465454657646548646557731297339883098622221734473891840
t_ten increased 
using t_rst as 937521490668755099372400727685.26318359375
using for fract 878946545465764654864655773129734007652675336007514184482816
getting the part of 878946545465764654864655773129734007652675336007514184482816 :: ad 60 and mad 66
    -----------------> 937521490668755099372400727685.26318359375 ^2 ::== 878946545465764654864655773129734007652675336007514184482816
t_ten increased 
using t_rst as 9375214906687550993724007276852.6318359375
using for fract 87894654546576465486465577312973393956597317531159906503098368
getting the part of 87894654546576465486465577312973393956597317531159906503098368 :: ad 62 and mad 66
    -----------------> 9375214906687550993724007276852.6318359375 ^2 ::== 87894654546576465486465577312973393956597317531159906503098368
t_ten increased 
using t_rst as 93752149066875509937240072768526.3125
using for fract 8789465454657646548646557731297337890324643982093576372974780416
getting the part of 8789465454657646548646557731297337890324643982093576372974780416 :: ad 64 and mad 66
    -----------------> 93752149066875509937240072768526.3125 ^2 ::== 8789465454657646548646557731297337890324643982093576372974780416
t_ten increased 
using t_rst as 937521490668755099372400727685263.125
using for fract 878946545465764654864655773129733880303307614641874545060108828672
getting the part of 878946545465764654864655773129733880303307614641874545060108828672 :: ad 66 and mad 66
i push_back a near value of 937521490668755099372400727685263
stopping with ad 66 and mad of 66
    -----------------> 937521490668755099372400727685263.125 ^2 ::== 878946545465764654864655773129733880303307614641874545060108828672
t_ten increased 
breaking with xbrk of value 1

increasing the digits 25
-------------------------------------------------------
-------------------------------------------------------
times 25 8789465454657646548646548 8183859827427976302277978
main 2964703265869.56195308983309156550526558657372711014232891102437861263751983642578125 second 2860744628139.320006136976994069879689304609915456723001625505276024341583251953125
main 8789465454657646548646548 second 8183859827427976302277978
times of 3.62262224474256297132488271134170915896729268431017451198305176532394599106110540355586409897161392e-13
new times of 3.62262224474256297132488271134170915896729268431017451198305176532394599106110540355586409897161392e-13
using 818385982742797630227797825479392 * 3.62262224474256297132488271134170915896729268431017451198305176532394599106110540355586409897161392e-13
296470326586956195308.98331838677177074714563786983489990234375  with length of 62 and dot length 21 will move 41
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867703804880946297186674930916261888  main number intpart lenght 66 
 fract 0 int 878946545465764654864654864564867703804880946297186674930916261888
    -----------------> 296470326586956195308.98331838677177074714563786983489990234375 ^2 ::== 87894654546576465486465485472973417611264
 temp fract 0 temp int 87894654546576465486465485472973417611264
before loop xstp is 0entering tens with lap of value 10
using t_rst as 2964703265869561953089.8331838677177074714563786983489990234375
using for fract 8789465454657646548646548547297341626908672
getting the part of 8789465454657646548646548547297341626908672 :: ad 43 and mad 66
    -----------------> 2964703265869561953089.8331838677177074714563786983489990234375 ^2 ::== 8789465454657646548646548547297341626908672
t_ten increased 
using t_rst as 29647032658695619530898.3318386771788937039673328399658203125
using for fract 878946545465764654864654854729734218525442048
getting the part of 878946545465764654864654854729734218525442048 :: ad 45 and mad 66
    -----------------> 29647032658695619530898.3318386771788937039673328399658203125 ^2 ::== 878946545465764654864654854729734218525442048
t_ten increased 
using t_rst as 296470326586956195308983.3183867717743851244449615478515625
using for fract 87894654546576465486465485472973416904741879808
getting the part of 87894654546576465486465485472973416904741879808 :: ad 47 and mad 66
    -----------------> 296470326586956195308983.3183867717743851244449615478515625 ^2 ::== 87894654546576465486465485472973416904741879808
t_ten increased 
using t_rst as 2964703265869561953089833.1838677176274359226226806640625
using for fract 8789465454657646548646548547297340459021164871680
getting the part of 8789465454657646548646548547297340459021164871680 :: ad 49 and mad 66
    -----------------> 2964703265869561953089833.1838677176274359226226806640625 ^2 ::== 8789465454657646548646548547297340459021164871680
t_ten increased 
using t_rst as 29647032658695619530898331.838677175343036651611328125
using for fract 878946545465764654864654854729734054909315741908992
getting the part of 878946545465764654864654854729734054909315741908992 :: ad 51 and mad 66
    -----------------> 29647032658695619530898331.838677175343036651611328125 ^2 ::== 878946545465764654864654854729734054909315741908992
t_ten increased 
using t_rst as 296470326586956195308983318.3867717683315277099609375
using for fract 87894654546576465486465485472973410102617592618287104
getting the part of 87894654546576465486465485472973410102617592618287104 :: ad 53 and mad 66
    -----------------> 296470326586956195308983318.3867717683315277099609375 ^2 ::== 87894654546576465486465485472973410102617592618287104
t_ten increased 
using t_rst as 2964703265869561953089833183.867717742919921875
using for fract 8789465454657646548646548547297341563664081473115258880
getting the part of 8789465454657646548646548547297341563664081473115258880 :: ad 55 and mad 66
    -----------------> 2964703265869561953089833183.867717742919921875 ^2 ::== 8789465454657646548646548547297341563664081473115258880
t_ten increased 
using t_rst as 29647032658695619530898331838.67717742919921875
using for fract 878946545465764654864654854729734222479538907486558879744
getting the part of 878946545465764654864654854729734222479538907486558879744 :: ad 57 and mad 66
    -----------------> 29647032658695619530898331838.67717742919921875 ^2 ::== 878946545465764654864654854729734222479538907486558879744
t_ten increased 
using t_rst as 296470326586956195308983318386.771759033203125
using for fract 87894654546576465486465485472973409554232784795049553559552
getting the part of 87894654546576465486465485472973409554232784795049553559552 :: ad 59 and mad 66
    -----------------> 296470326586956195308983318386.771759033203125 ^2 ::== 87894654546576465486465485472973409554232784795049553559552
t_ten increased 
using t_rst as 2964703265869561953089833183867.7177734375
using for fract 8789465454657646548646548547297341419650793211522558443126784
getting the part of 8789465454657646548646548547297341419650793211522558443126784 :: ad 61 and mad 66
    -----------------> 2964703265869561953089833183867.7177734375 ^2 ::== 8789465454657646548646548547297341419650793211522558443126784
t_ten increased 
using t_rst as 29647032658695619530898331838677.17578125
using for fract 878946545465764654864654854729734112254518378303129246733697024
getting the part of 878946545465764654864654854729734112254518378303129246733697024 :: ad 63 and mad 66
    -----------------> 29647032658695619530898331838677.17578125 ^2 ::== 878946545465764654864654854729734112254518378303129246733697024
t_ten increased 
using t_rst as 296470326586956195308983318386771.78125
using for fract 87894654546576465486465485472973423901957840112606939640401756160
getting the part of 87894654546576465486465485472973423901957840112606939640401756160 :: ad 65 and mad 66
i push_back a near value of 296470326586956195308983318386771
stopping with ad 65 and mad of 66
    -----------------> 296470326586956195308983318386771.78125 ^2 ::== 87894654546576465486465485472973423901957840112606939640401756160
t_ten increased 
breaking with xbrk of value 1

increasing the digits 26
-------------------------------------------------------
-------------------------------------------------------
times 26 87894654546576465486465486 81838598274279763022779782
main 9375214906687.550993724002406939018413093399340052513935006572864949703216552734375 second 9046468829011.6692925035471775687060248631599090884947145241312682628631591796875
main 87894654546576465486465485.99999998509883880615234375 second 81838598274279763022779781.99999998509883880615234375
times of 1.145573739577843404901798230577018162985294392315531187116579348692995944347699598957029407854204032e-13
new times of 1.145573739577843404901798230577018162985294392315531187116579348692995944347699598957029407854204032e-13
using 818385982742797630227797825479392 * 1.145573739577843404901798230577018162985294392315531187116579348692995944347699598957029407854204032e-13
93752149066875509937.24002469709495244387653656303882598876953125  with length of 64 and dot length 20 will move 44
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867703804880946297186674930916261888  main number intpart lenght 66 
 fract 0 int 878946545465764654864654864564867703804880946297186674930916261888
    -----------------> 93752149066875509937.24002469709495244387653656303882598876953125 ^2 ::== 8789465454657646548646548717697340801024
 temp fract 0 temp int 8789465454657646548646548717697340801024
before loop xstp is 0entering tens with lap of value 10
using t_rst as 937521490668755099372.4002469709495244387653656303882598876953125
using for fract 878946545465764654864654871769734059130880
getting the part of 878946545465764654864654871769734059130880 :: ad 42 and mad 66
    -----------------> 937521490668755099372.4002469709495244387653656303882598876953125 ^2 ::== 878946545465764654864654871769734059130880
t_ten increased 
using t_rst as 9375214906687550993724.0024697094950170139782130718231201171875
using for fract 87894654546576465486465487176973406449958912
getting the part of 87894654546576465486465487176973406449958912 :: ad 44 and mad 66
    -----------------> 9375214906687550993724.0024697094950170139782130718231201171875 ^2 ::== 87894654546576465486465487176973406449958912
t_ten increased 
using t_rst as 93752149066875509937240.02469709495198912918567657470703125
using for fract 8789465454657646548646548717697340610636152832
getting the part of 8789465454657646548646548717697340610636152832 :: ad 46 and mad 66
    -----------------> 93752149066875509937240.02469709495198912918567657470703125 ^2 ::== 8789465454657646548646548717697340610636152832
t_ten increased 
using t_rst as 937521490668755099372400.246970949578098952770233154296875
using for fract 878946545465764654864654871769734162218685038592
getting the part of 878946545465764654864654871769734162218685038592 :: ad 48 and mad 66
    -----------------> 937521490668755099372400.246970949578098952770233154296875 ^2 ::== 878946545465764654864654871769734162218685038592
t_ten increased 
using t_rst as 9375214906687550993724002.46970949508249759674072265625
using for fract 87894654546576465486465487176973405525819388854272
getting the part of 87894654546576465486465487176973405525819388854272 :: ad 50 and mad 66
    -----------------> 9375214906687550993724002.46970949508249759674072265625 ^2 ::== 87894654546576465486465487176973405525819388854272
t_ten increased 
using t_rst as 93752149066875509937240024.6970949470996856689453125
using for fract 8789465454657646548646548717697340372437953790607360
getting the part of 8789465454657646548646548717697340372437953790607360 :: ad 52 and mad 66
    -----------------> 93752149066875509937240024.6970949470996856689453125 ^2 ::== 8789465454657646548646548717697340372437953790607360
t_ten increased 
using t_rst as 937521490668755099372400246.97094953060150146484375
using for fract 878946545465764654864654871769734101807399637044166656
getting the part of 878946545465764654864654871769734101807399637044166656 :: ad 54 and mad 66
    -----------------> 937521490668755099372400246.97094953060150146484375 ^2 ::== 878946545465764654864654871769734101807399637044166656
t_ten increased 
using t_rst as 9375214906687550993724002469.70949554443359375
using for fract 87894654546576465486465487176973413132219015497944924160
getting the part of 87894654546576465486465487176973413132219015497944924160 :: ad 56 and mad 66
    -----------------> 9375214906687550993724002469.70949554443359375 ^2 ::== 87894654546576465486465487176973413132219015497944924160
t_ten increased 
using t_rst as 93752149066875509937240024697.0949554443359375
using for fract 8789465454657646548646548717697341464337629001623139254272
getting the part of 8789465454657646548646548717697341464337629001623139254272 :: ad 58 and mad 66
    -----------------> 93752149066875509937240024697.0949554443359375 ^2 ::== 8789465454657646548646548717697341464337629001623139254272
t_ten increased 
using t_rst as 937521490668755099372400246970.9495849609375
using for fract 878946545465764654864654871769734165776576013996380720726016
getting the part of 878946545465764654864654871769734165776576013996380720726016 :: ad 60 and mad 66
    -----------------> 937521490668755099372400246970.9495849609375 ^2 ::== 878946545465764654864654871769734165776576013996380720726016
t_ten increased 
using t_rst as 9375214906687550993724002469709.4951171875
using for fract 87894654546576465486465487176973411625897444258116972476104704
getting the part of 87894654546576465486465487176973411625897444258116972476104704 :: ad 62 and mad 66
    -----------------> 9375214906687550993724002469709.4951171875 ^2 ::== 87894654546576465486465487176973411625897444258116972476104704
t_ten increased 
using t_rst as 93752149066875509937240024697094.953125
using for fract 8789465454657646548646548717697340806063013111622178076662693888
getting the part of 8789465454657646548646548717697340806063013111622178076662693888 :: ad 64 and mad 66
    -----------------> 93752149066875509937240024697094.953125 ^2 ::== 8789465454657646548646548717697340806063013111622178076662693888
t_ten increased 
using t_rst as 937521490668755099372400246970949.5
using for fract 878946545465764654864654871769734034970879702945959353784953995264
getting the part of 878946545465764654864654871769734034970879702945959353784953995264 :: ad 66 and mad 66
i push_back a near value of 937521490668755099372400246970949
stopping with ad 66 and mad of 66
    -----------------> 937521490668755099372400246970949.5 ^2 ::== 878946545465764654864654871769734034970879702945959353784953995264
t_ten increased 
breaking with xbrk of value 1

increasing the digits 27
-------------------------------------------------------
-------------------------------------------------------
times 27 878946545465764654864654864 818385982742797630227797825
main 29647032658695.61953089833199502108629385700722114194149980903603136539459228515625 second 28607446281393.2000613697703776479696192829027534543229194241575896739959716796875
main 878946545465764654864654864.00000011920928955078125 second 818385982742797630227797824.99999988079071044921875
times of 3.6226222447425629713248827325676927416160339054998066421118863116772034148215788816258607972913267e-14
new times of 3.6226222447425629713248827325676927416160339054998066421118863116772034148215788816258607972913267e-14
using 818385982742797630227797825479392 * 3.6226222447425629713248827325676927416160339054998066421118863116772034148215788816258607972913267e-14
29647032658695619530.898332012387651701601498643867671489715576171875  with length of 68 and dot length 20 will move 48
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867703804880946297186674930916261888  main number intpart lenght 66 
 fract 0 int 878946545465764654864654864564867703804880946297186674930916261888
    -----------------> 29647032658695619530.898332012387651701601498643867671489715576171875 ^2 ::== 878946545465764654864654865029734334464
 temp fract 0 temp int 878946545465764654864654865029734334464
before loop xstp is 0entering tens with lap of value 10
using t_rst as 296470326586956195308.9833201238765241214423440396785736083984375
using for fract 87894654546576465486465486502973432397824
getting the part of 87894654546576465486465486502973432397824 :: ad 41 and mad 66
    -----------------> 296470326586956195308.9833201238765241214423440396785736083984375 ^2 ::== 87894654546576465486465486502973432397824
t_ten increased 
using t_rst as 2964703265869561953089.83320123876501384074799716472625732421875
using for fract 8789465454657646548646548650297342501584896
getting the part of 8789465454657646548646548650297342501584896 :: ad 43 and mad 66
    -----------------> 2964703265869561953089.83320123876501384074799716472625732421875 ^2 ::== 8789465454657646548646548650297342501584896
t_ten increased 
using t_rst as 29647032658695619530898.33201238765104790218174457550048828125
using for fract 878946545465764654864654865029734297403129856
getting the part of 878946545465764654864654865029734297403129856 :: ad 45 and mad 66
    -----------------> 29647032658695619530898.33201238765104790218174457550048828125 ^2 ::== 878946545465764654864654865029734297403129856
t_ten increased 
using t_rst as 296470326586956195308983.3201238765032030642032623291015625
using for fract 87894654546576465486465486502973426991533916160
getting the part of 87894654546576465486465486502973426991533916160 :: ad 47 and mad 66
    -----------------> 296470326586956195308983.3201238765032030642032623291015625 ^2 ::== 87894654546576465486465486502973426991533916160
t_ten increased 
using t_rst as 2964703265869561953089833.201238765381276607513427734375
using for fract 8789465454657646548646548650297344704662600679424
getting the part of 8789465454657646548646548650297344704662600679424 :: ad 49 and mad 66
    -----------------> 2964703265869561953089833.201238765381276607513427734375 ^2 ::== 8789465454657646548646548650297344704662600679424
t_ten increased 
using t_rst as 29647032658695619530898332.0123876519501209259033203125
using for fract 878946545465764654864654865029734312840273109975040
getting the part of 878946545465764654864654865029734312840273109975040 :: ad 51 and mad 66
    -----------------> 29647032658695619530898332.0123876519501209259033203125 ^2 ::== 878946545465764654864654865029734312840273109975040
t_ten increased 
using t_rst as 296470326586956195308983320.123876512050628662109375
using for fract 87894654546576465486465486502973430707566558694080512
getting the part of 87894654546576465486465486502973430707566558694080512 :: ad 53 and mad 66
    -----------------> 296470326586956195308983320.123876512050628662109375 ^2 ::== 87894654546576465486465486502973430707566558694080512
t_ten increased 
using t_rst as 2964703265869561953089833201.238765239715576171875
using for fract 8789465454657646548646548650297344435815717323914870784
getting the part of 8789465454657646548646548650297344435815717323914870784 :: ad 55 and mad 66
    -----------------> 2964703265869561953089833201.238765239715576171875 ^2 ::== 8789465454657646548646548650297344435815717323914870784
t_ten increased 
using t_rst as 29647032658695619530898332012.387653350830078125
using for fract 878946545465764654864654865029734453026304698130777505792
getting the part of 878946545465764654864654865029734453026304698130777505792 :: ad 57 and mad 66
    -----------------> 29647032658695619530898332012.387653350830078125 ^2 ::== 878946545465764654864654865029734453026304698130777505792
t_ten increased 
using t_rst as 296470326586956195308983320123.87652587890625
using for fract 87894654546576465486465486502973439862464281547246464401408
getting the part of 87894654546576465486465486502973439862464281547246464401408 :: ad 59 and mad 66
    -----------------> 296470326586956195308983320123.87652587890625 ^2 ::== 87894654546576465486465486502973439862464281547246464401408
t_ten increased 
using t_rst as 2964703265869561953089833201238.76513671875
using for fract 8789465454657646548646548650297343405962034739702642581176320
getting the part of 8789465454657646548646548650297343405962034739702642581176320 :: ad 61 and mad 66
    -----------------> 2964703265869561953089833201238.76513671875 ^2 ::== 8789465454657646548646548650297343405962034739702642581176320
t_ten increased 
using t_rst as 29647032658695619530898332012387.65234375
using for fract 878946545465764654864654865029734335644443316828743158521135104
getting the part of 878946545465764654864654865029734335644443316828743158521135104 :: ad 63 and mad 66
    -----------------> 29647032658695619530898332012387.65234375 ^2 ::== 878946545465764654864654865029734335644443316828743158521135104
t_ten increased 
using t_rst as 296470326586956195308983320123876.53125
using for fract 87894654546576465486465486502973448776251534421627133812551974912
getting the part of 87894654546576465486465486502973448776251534421627133812551974912 :: ad 65 and mad 66
i push_back a near value of 296470326586956195308983320123876
stopping with ad 65 and mad of 66
    -----------------> 296470326586956195308983320123876.53125 ^2 ::== 87894654546576465486465486502973448776251534421627133812551974912
t_ten increased 
breaking with xbrk of value 1

increasing the digits 28
-------------------------------------------------------
-------------------------------------------------------
times 28 8789465454657646548646548645 8183859827427976302277978254
main 93752149066875.509937240024309384694533968385155020541787962429225444793701171875 second 90464688290116.69292503547207414605810758823078998602795763872563838958740234375
main 8789465454657646548646548645.00000095367431640625 second 8183859827427976302277978253.99999904632568359375
times of 1.145573739577843404901798225950652056171880022820151075516829777332610395562966455756356820444157842e-14
new times of 1.145573739577843404901798225950652056171880022820151075516829777332610395562966455756356820444157842e-14
using 818385982742797630227797825479392 * 1.145573739577843404901798225950652056171880022820151075516829777332610395562966455756356820444157842e-14
9375214906687550993.72400243184796408968395553529262542724609375  with length of 63 and dot length 19 will move 44
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867703804880946297186674930916261888  main number intpart lenght 66 
 fract 0 int 878946545465764654864654864564867703804880946297186674930916261888
    -----------------> 9375214906687550993.72400243184796408968395553529262542724609375 ^2 ::== 87894654546576465486465486467053420544
 temp fract 0 temp int 87894654546576465486465486467053420544
before loop xstp is 0entering tens with lap of value 10
using t_rst as 93752149066875509937.2400243184796408968395553529262542724609375
using for fract 8789465454657646548646548646705342971904
getting the part of 8789465454657646548646548646705342971904 :: ad 40 and mad 66
    -----------------> 93752149066875509937.2400243184796408968395553529262542724609375 ^2 ::== 8789465454657646548646548646705342971904
t_ten increased 
using t_rst as 937521490668755099372.400243184796408968395553529262542724609375
using for fract 878946545465764654864654864670534297190400
getting the part of 878946545465764654864654864670534297190400 :: ad 42 and mad 66
    -----------------> 937521490668755099372.400243184796408968395553529262542724609375 ^2 ::== 878946545465764654864654864670534297190400
t_ten increased 
using t_rst as 9375214906687550993724.002431847964544431306421756744384765625
using for fract 87894654546576465486465486467053434550878208
getting the part of 87894654546576465486465486467053434550878208 :: ad 44 and mad 66
    -----------------> 9375214906687550993724.002431847964544431306421756744384765625 ^2 ::== 87894654546576465486465486467053434550878208
t_ten increased 
using t_rst as 93752149066875509937240.0243184796418063342571258544921875
using for fract 8789465454657646548646548646705342664813838336
getting the part of 8789465454657646548646548646705342664813838336 :: ad 46 and mad 66
    -----------------> 93752149066875509937240.0243184796418063342571258544921875 ^2 ::== 8789465454657646548646548646705342664813838336
t_ten increased 
using t_rst as 937521490668755099372400.243184796418063342571258544921875
using for fract 878946545465764654864654864670534288471616389120
getting the part of 878946545465764654864654864670534288471616389120 :: ad 48 and mad 66
    -----------------> 937521490668755099372400.243184796418063342571258544921875 ^2 ::== 878946545465764654864654864670534288471616389120
t_ten increased 
using t_rst as 9375214906687550993724002.431847964413464069366455078125
using for fract 87894654546576465486465486467053432224861359439872
getting the part of 87894654546576465486465486467053432224861359439872 :: ad 50 and mad 66
    -----------------> 9375214906687550993724002.431847964413464069366455078125 ^2 ::== 87894654546576465486465486467053432224861359439872
t_ten increased 
using t_rst as 93752149066875509937240024.31847964227199554443359375
using for fract 8789465454657646548646548646705343258514932962951168
getting the part of 8789465454657646548646548646705343258514932962951168 :: ad 52 and mad 66
    -----------------> 93752149066875509937240024.31847964227199554443359375 ^2 ::== 8789465454657646548646548646705343258514932962951168
t_ten increased 
using t_rst as 937521490668755099372400243.18479645252227783203125
using for fract 878946545465764654864654864670534307404749222585565184
getting the part of 878946545465764654864654864670534307404749222585565184 :: ad 54 and mad 66
    -----------------> 937521490668755099372400243.18479645252227783203125 ^2 ::== 878946545465764654864654864670534307404749222585565184
t_ten increased 
using t_rst as 9375214906687550993724002431.84796428680419921875
using for fract 87894654546576465486465486467053429559883301541145214976
getting the part of 87894654546576465486465486467053429559883301541145214976 :: ad 56 and mad 66
    -----------------> 9375214906687550993724002431.84796428680419921875 ^2 ::== 87894654546576465486465486467053429559883301541145214976
t_ten increased 
using t_rst as 93752149066875509937240024318.479644775390625
using for fract 8789465454657646548646548646705343938240558591000725946368
getting the part of 8789465454657646548646548646705343938240558591000725946368 :: ad 58 and mad 66
    -----------------> 93752149066875509937240024318.479644775390625 ^2 ::== 8789465454657646548646548646705343938240558591000725946368
t_ten increased 
using t_rst as 937521490668755099372400243184.79638671875
using for fract 878946545465764654864654864670534277767177176095671822843904
getting the part of 878946545465764654864654864670534277767177176095671822843904 :: ad 60 and mad 66
    -----------------> 937521490668755099372400243184.79638671875 ^2 ::== 878946545465764654864654864670534277767177176095671822843904
t_ten increased 
using t_rst as 9375214906687550993724002431847.9638671875
using for fract 87894654546576465486465486467053422824957560468046082687893504
getting the part of 87894654546576465486465486467053422824957560468046082687893504 :: ad 62 and mad 66
    -----------------> 9375214906687550993724002431847.9638671875 ^2 ::== 87894654546576465486465486467053422824957560468046082687893504
t_ten increased 
using t_rst as 93752149066875509937240024318479.640625
using for fract 8789465454657646548646548646705342559794324846729789846193176576
getting the part of 8789465454657646548646548646705342559794324846729789846193176576 :: ad 64 and mad 66
    -----------------> 93752149066875509937240024318479.640625 ^2 ::== 8789465454657646548646548646705342559794324846729789846193176576
t_ten increased 
using t_rst as 937521490668755099372400243184796.375
using for fract 878946545465764654864654864670534190061601272805050106790750978048
getting the part of 878946545465764654864654864670534190061601272805050106790750978048 :: ad 66 and mad 66
i push_back a near value of 937521490668755099372400243184796
stopping with ad 66 and mad of 66
    -----------------> 937521490668755099372400243184796.375 ^2 ::== 878946545465764654864654864670534190061601272805050106790750978048
t_ten increased 
breaking with xbrk of value 1

increasing the digits 29
-------------------------------------------------------
-------------------------------------------------------
times 29 87894654546576465486465486456 81838598274279763022779782547
main 296470326586956.1953089833200446553550418127276344648635131306946277618408203125 second 286074462813932.0006136977038586261304874136524034611284150741994380950927734375
main 87894654546576465486465486455.9999847412109375 second 81838598274279763022779782546.9999847412109375
times of 3.62262224474256297132488273164125053627388718937866264804944494740871973686133066379939554642791426e-15
new times of 3.62262224474256297132488273164125053627388718937866264804944494740871973686133066379939554642791426e-15
using 818385982742797630227797825479392 * 3.62262224474256297132488273164125053627388718937866264804944494740871973686133066379939554642791426e-15
2964703265869561953.089833200480577968249917830689810216426849365234375  with length of 70 and dot length 19 will move 51
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867703804880946297186674930916261888  main number intpart lenght 66 
 fract 0 int 878946545465764654864654864564867703804880946297186674930916261888
    -----------------> 2964703265869561953.089833200480577968249917830689810216426849365234375 ^2 ::== 8789465454657646548646548645801743360
 temp fract 0 temp int 8789465454657646548646548645801743360
before loop xstp is 0entering tens with lap of value 10
using t_rst as 29647032658695619530.898332004805780570677598007023334503173828125
using for fract 878946545465764654864654864580174413824
getting the part of 878946545465764654864654864580174413824 :: ad 39 and mad 66
    -----------------> 29647032658695619530.898332004805780570677598007023334503173828125 ^2 ::== 878946545465764654864654864580174413824
t_ten increased 
using t_rst as 296470326586956195308.98332004805780570677598007023334503173828125
using for fract 87894654546576465486465486458017439285248
getting the part of 87894654546576465486465486458017439285248 :: ad 41 and mad 66
    -----------------> 296470326586956195308.98332004805780570677598007023334503173828125 ^2 ::== 87894654546576465486465486458017439285248
t_ten increased 
using t_rst as 2964703265869561953089.8332004805779433809220790863037109375
using for fract 8789465454657646548646548645801743324545024
getting the part of 8789465454657646548646548645801743324545024 :: ad 43 and mad 66
    -----------------> 2964703265869561953089.8332004805779433809220790863037109375 ^2 ::== 8789465454657646548646548645801743324545024
t_ten increased 
using t_rst as 29647032658695619530898.332004805779433809220790863037109375
using for fract 878946545465764654864654864580174366814240768
getting the part of 878946545465764654864654864580174366814240768 :: ad 45 and mad 66
    -----------------> 29647032658695619530898.332004805779433809220790863037109375 ^2 ::== 878946545465764654864654864580174366814240768
t_ten increased 
using t_rst as 296470326586956195308983.32004805779433809220790863037109375
using for fract 87894654546576465486465486458017431183865937920
getting the part of 87894654546576465486465486458017431183865937920 :: ad 47 and mad 66
    -----------------> 296470326586956195308983.32004805779433809220790863037109375 ^2 ::== 87894654546576465486465486458017431183865937920
t_ten increased 
using t_rst as 2964703265869561953089833.2004805780015885829925537109375
using for fract 8789465454657646548646548645801743470230314680320
getting the part of 8789465454657646548646548645801743470230314680320 :: ad 49 and mad 66
    -----------------> 2964703265869561953089833.2004805780015885829925537109375 ^2 ::== 8789465454657646548646548645801743470230314680320
t_ten increased 
using t_rst as 29647032658695619530898332.004805780947208404541015625
using for fract 878946545465764654864654864580174477627420661776384
getting the part of 878946545465764654864654864580174477627420661776384 :: ad 51 and mad 66
    -----------------> 29647032658695619530898332.004805780947208404541015625 ^2 ::== 878946545465764654864654864580174477627420661776384
t_ten increased 
using t_rst as 296470326586956195308983320.0480577945709228515625
using for fract 87894654546576465486465486458017433351223258592051200
getting the part of 87894654546576465486465486458017433351223258592051200 :: ad 53 and mad 66
    -----------------> 296470326586956195308983320.0480577945709228515625 ^2 ::== 87894654546576465486465486458017433351223258592051200
t_ten increased 
using t_rst as 2964703265869561953089833200.480577945709228515625
using for fract 8789465454657646548646548645801743630270231038557945856
getting the part of 8789465454657646548646548645801743630270231038557945856 :: ad 55 and mad 66
    -----------------> 2964703265869561953089833200.480577945709228515625 ^2 ::== 8789465454657646548646548645801743630270231038557945856
t_ten increased 
using t_rst as 29647032658695619530898332004.80577850341796875
using for fract 878946545465764654864654864580174230800761583505728602112
getting the part of 878946545465764654864654864580174230800761583505728602112 :: ad 57 and mad 66
    -----------------> 29647032658695619530898332004.80577850341796875 ^2 ::== 878946545465764654864654864580174230800761583505728602112
t_ten increased 
using t_rst as 296470326586956195308983320048.05780029296875
using for fract 87894654546576465486465486458017434564871444689550019919872
getting the part of 87894654546576465486465486458017434564871444689550019919872 :: ad 59 and mad 66
    -----------------> 296470326586956195308983320048.05780029296875 ^2 ::== 87894654546576465486465486458017434564871444689550019919872
t_ten increased 
using t_rst as 2964703265869561953089833200480.578125
using for fract 8789465454657646548646548645801744346256547705322074575732736
getting the part of 8789465454657646548646548645801744346256547705322074575732736 :: ad 61 and mad 66
    -----------------> 2964703265869561953089833200480.578125 ^2 ::== 8789465454657646548646548645801744346256547705322074575732736
t_ten increased 
using t_rst as 29647032658695619530898332004805.78125
using for fract 878946545465764654864654864580174409866853984824601959590789120
getting the part of 878946545465764654864654864580174409866853984824601959590789120 :: ad 63 and mad 66
    -----------------> 29647032658695619530898332004805.78125 ^2 ::== 878946545465764654864654864580174409866853984824601959590789120
t_ten increased 
using t_rst as 296470326586956195308983320048057.78125
using for fract 87894654546576465486465486458017427042528795971936779495343652864
getting the part of 87894654546576465486465486458017427042528795971936779495343652864 :: ad 65 and mad 66
i push_back a near value of 296470326586956195308983320048057
stopping with ad 65 and mad of 66
    -----------------> 296470326586956195308983320048057.78125 ^2 ::== 87894654546576465486465486458017427042528795971936779495343652864
t_ten increased 
breaking with xbrk of value 1

increasing the digits 30
-------------------------------------------------------
-------------------------------------------------------
times 30 878946545465764654864654864564 818385982742797630227797825479
main 937521490668755.09937240024312797939155805782007746529416181147098541259765625 second 904646882901166.929250354720785124058857196160943203722126781940460205078125
main 878946545465764654864654864563.9998779296875 second 818385982742797630227797825479
times of 1.145573739577843404901798225881775157625369237574865412600120240973061126012929824558396862138983641e-15
new times of 1.145573739577843404901798225881775157625369237574865412600120240973061126012929824558396862138983641e-15
using 818385982742797630227797825479392 * 1.145573739577843404901798225881775157625369237574865412600120240973061126012929824558396862138983641e-15
937521490668755099.3724002431284285652424159707152284681797027587890625  with length of 70 and dot length 18 will move 52
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867703804880946297186674930916261888  main number intpart lenght 66 
 fract 0 int 878946545465764654864654864564867703804880946297186674930916261888
    -----------------> 937521490668755099.3724002431284285652424159707152284681797027587890625 ^2 ::== 878946545465764654864654864564842112
 temp fract 0 temp int 878946545465764654864654864564842112
before loop xstp is 0entering tens with lap of value 10
using t_rst as 9375214906687550993.7240024312842852083349498570896685123443603515625
using for fract 87894654546576465486465486456484200448
getting the part of 87894654546576465486465486456484200448 :: ad 38 and mad 66
    -----------------> 9375214906687550993.7240024312842852083349498570896685123443603515625 ^2 ::== 87894654546576465486465486456484200448
t_ten increased 
using t_rst as 93752149066875509937.2400243128428627414905349723994731903076171875
using for fract 8789465454657646548646548645648422404096
getting the part of 8789465454657646548646548645648422404096 :: ad 40 and mad 66
    -----------------> 93752149066875509937.2400243128428627414905349723994731903076171875 ^2 ::== 8789465454657646548646548645648422404096
t_ten increased 
using t_rst as 937521490668755099372.4002431284285421497770585119724273681640625
using for fract 878946545465764654864654864564842131357696
getting the part of 878946545465764654864654864564842131357696 :: ad 42 and mad 66
    -----------------> 937521490668755099372.4002431284285421497770585119724273681640625 ^2 ::== 878946545465764654864654864564842131357696
t_ten increased 
using t_rst as 9375214906687550993724.0024312842861036187969148159027099609375
using for fract 87894654546576465486465486456484224410058752
getting the part of 87894654546576465486465486456484224410058752 :: ad 44 and mad 66
    -----------------> 9375214906687550993724.0024312842861036187969148159027099609375 ^2 ::== 87894654546576465486465486456484224410058752
t_ten increased 
using t_rst as 93752149066875509937240.024312842855579219758510589599609375
using for fract 8789465454657646548646548645648421719451369472
getting the part of 8789465454657646548646548645648421719451369472 :: ad 46 and mad 66
    -----------------> 93752149066875509937240.024312842855579219758510589599609375 ^2 ::== 8789465454657646548646548645648421719451369472
t_ten increased 
using t_rst as 937521490668755099372400.243128428584896028041839599609375
using for fract 878946545465764654864654864564842123566625325056
getting the part of 878946545465764654864654864564842123566625325056 :: ad 48 and mad 66
    -----------------> 937521490668755099372400.243128428584896028041839599609375 ^2 ::== 878946545465764654864654864564842123566625325056
t_ten increased 
using t_rst as 9375214906687550993724002.431284286081790924072265625
using for fract 87894654546576465486465486456484222489761694089216
getting the part of 87894654546576465486465486456484222489761694089216 :: ad 50 and mad 66
    -----------------> 9375214906687550993724002.431284286081790924072265625 ^2 ::== 87894654546576465486465486456484222489761694089216
t_ten increased 
using t_rst as 93752149066875509937240024.31284286081790924072265625
using for fract 8789465454657646548646548645648422068832184314101760
getting the part of 8789465454657646548646548645648422068832184314101760 :: ad 52 and mad 66
    -----------------> 93752149066875509937240024.31284286081790924072265625 ^2 ::== 8789465454657646548646548645648422068832184314101760
t_ten increased 
using t_rst as 937521490668755099372400243.12842857837677001953125
using for fract 878946545465764654864654864564842137707928154999357440
getting the part of 878946545465764654864654864564842137707928154999357440 :: ad 54 and mad 66
    -----------------> 937521490668755099372400243.12842857837677001953125 ^2 ::== 878946545465764654864654864564842137707928154999357440
t_ten increased 
using t_rst as 9375214906687550993724002431.28428554534912109375
using for fract 87894654546576465486465486456484216131976056934758350848
getting the part of 87894654546576465486465486456484216131976056934758350848 :: ad 56 and mad 66
    -----------------> 9375214906687550993724002431.28428554534912109375 ^2 ::== 87894654546576465486465486456484216131976056934758350848
t_ten increased 
using t_rst as 93752149066875509937240024312.8428497314453125
using for fract 8789465454657646548646548645648419988703535586317881573376
getting the part of 8789465454657646548646548645648419988703535586317881573376 :: ad 58 and mad 66
    -----------------> 93752149066875509937240024312.8428497314453125 ^2 ::== 8789465454657646548646548645648419988703535586317881573376
t_ten increased 
using t_rst as 937521490668755099372400243128.4285888671875
using for fract 878946545465764654864654864564842206805594532348006206799872
getting the part of 878946545465764654864654864564842206805594532348006206799872 :: ad 60 and mad 66
    -----------------> 937521490668755099372400243128.4285888671875 ^2 ::== 878946545465764654864654864564842206805594532348006206799872
t_ten increased 
using t_rst as 9375214906687550993724002431284.2861328125
using for fract 87894654546576465486465486456484227489229669304392132625170432
getting the part of 87894654546576465486465486456484227489229669304392132625170432 :: ad 62 and mad 66
    -----------------> 9375214906687550993724002431284.2861328125 ^2 ::== 87894654546576465486465486456484227489229669304392132625170432
t_ten increased 
using t_rst as 93752149066875509937240024312842.859375
using for fract 8789465454657646548646548645648422392396235616249694091569266688
getting the part of 8789465454657646548646548645648422392396235616249694091569266688 :: ad 64 and mad 66
    -----------------> 93752149066875509937240024312842.859375 ^2 ::== 8789465454657646548646548645648422392396235616249694091569266688
t_ten increased 
using t_rst as 937521490668755099372400243128428.625
using for fract 878946545465764654864654864564842229098418759799134197183301025792
getting the part of 878946545465764654864654864564842229098418759799134197183301025792 :: ad 66 and mad 66
i push_back a near value of 937521490668755099372400243128428
stopping with ad 66 and mad of 66
    -----------------> 937521490668755099372400243128428.625 ^2 ::== 878946545465764654864654864564842229098418759799134197183301025792
t_ten increased 
breaking with xbrk of value 1

increasing the digits 31
-------------------------------------------------------
-------------------------------------------------------
times 31 8789465454657646548646548645648 8183859827427976302277978254793
main 2964703265869561.9530898332004546489627794247923020520829595625400543212890625 second 2860744628139320.006136977038602516205945125449261468020267784595489501953125
main 8789465454657646548646548645648 second 8183859827427976302277978254793.0009765625
times of 3.622622244742562971324882731609974570628389461004741840536757371665895340703892772509090799541651142e-16
new times of 3.622622244742562971324882731609974570628389461004741840536757371665895340703892772509090799541651142e-16
using 818385982742797630227797825479392 * 3.622622244742562971324882731609974570628389461004741840536757371665895340703892772509090799541651142e-16
296470326586956195.30898332004549822205063946967129595577716827392578125  with length of 71 and dot length 18 will move 53
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867703804880946297186674930916261888  main number intpart lenght 66 
 fract 0 int 878946545465764654864654864564867703804880946297186674930916261888
    -----------------> 296470326586956195.30898332004549822205063946967129595577716827392578125 ^2 ::== 87894654546576465486465486456499760
 temp fract 0 temp int 87894654546576465486465486456499760
before loop xstp is 0entering tens with lap of value 10
using t_rst as 2964703265869561953.08983320045498199846178977168165147304534912109375
using for fract 8789465454657646548646548645649974272
getting the part of 8789465454657646548646548645649974272 :: ad 37 and mad 66
    -----------------> 2964703265869561953.08983320045498199846178977168165147304534912109375 ^2 ::== 8789465454657646548646548645649974272
t_ten increased 
using t_rst as 29647032658695619530.89833200454982176097473711706697940826416015625
using for fract 878946545465764654864654864564997586944
getting the part of 878946545465764654864654864564997586944 :: ad 39 and mad 66
    -----------------> 29647032658695619530.89833200454982176097473711706697940826416015625 ^2 ::== 878946545465764654864654864564997586944
t_ten increased 
using t_rst as 296470326586956195308.98332004549820339889265596866607666015625
using for fract 87894654546576465486465486456499755548672
getting the part of 87894654546576465486465486456499755548672 :: ad 41 and mad 66
    -----------------> 296470326586956195308.98332004549820339889265596866607666015625 ^2 ::== 87894654546576465486465486456499755548672
t_ten increased 
using t_rst as 2964703265869561953089.8332004549820339889265596866607666015625
using for fract 8789465454657646548646548645649974212689920
getting the part of 8789465454657646548646548645649974212689920 :: ad 43 and mad 66
    -----------------> 2964703265869561953089.8332004549820339889265596866607666015625 ^2 ::== 8789465454657646548646548645649974212689920
t_ten increased 
using t_rst as 29647032658695619530898.33200454982215887866914272308349609375
using for fract 878946545465764654864654864564997532938141696
getting the part of 878946545465764654864654864564997532938141696 :: ad 45 and mad 66
    -----------------> 29647032658695619530898.33200454982215887866914272308349609375 ^2 ::== 878946545465764654864654864564997532938141696
t_ten increased 
using t_rst as 296470326586956195308983.32004549822886474430561065673828125
using for fract 87894654546576465486465486456499762089907191808
getting the part of 87894654546576465486465486456499762089907191808 :: ad 47 and mad 66
    -----------------> 296470326586956195308983.32004549822886474430561065673828125 ^2 ::== 87894654546576465486465486456499762089907191808
t_ten increased 
using t_rst as 2964703265869561953089833.20045498199760913848876953125
using for fract 8789465454657646548646548645649974414587742650368
getting the part of 8789465454657646548646548645649974414587742650368 :: ad 49 and mad 66
    -----------------> 2964703265869561953089833.20045498199760913848876953125 ^2 ::== 8789465454657646548646548645649974414587742650368
t_ten increased 
using t_rst as 29647032658695619530898332.004549823701381683349609375
using for fract 878946545465764654864654864564997707171152279896064
getting the part of 878946545465764654864654864564997707171152279896064 :: ad 51 and mad 66
    -----------------> 29647032658695619530898332.004549823701381683349609375 ^2 ::== 878946545465764654864654864564997707171152279896064
t_ten increased 
using t_rst as 296470326586956195308983320.0454982221126556396484375
using for fract 87894654546576465486465486456499755152674915797172224
getting the part of 87894654546576465486465486456499755152674915797172224 :: ad 53 and mad 66
    -----------------> 296470326586956195308983320.0454982221126556396484375 ^2 ::== 87894654546576465486465486456499755152674915797172224
t_ten increased 
using t_rst as 2964703265869561953089833200.454982280731201171875
using for fract 8789465454657646548646548645649976216243766380680183808
getting the part of 8789465454657646548646548645649976216243766380680183808 :: ad 55 and mad 66
    -----------------> 2964703265869561953089833200.454982280731201171875 ^2 ::== 8789465454657646548646548645649976216243766380680183808
t_ten increased 
using t_rst as 29647032658695619530898332004.549823760986328125
using for fract 878946545465764654864654864564997678292774432503760945152
getting the part of 878946545465764654864654864564997678292774432503760945152 :: ad 57 and mad 66
    -----------------> 29647032658695619530898332004.549823760986328125 ^2 ::== 878946545465764654864654864564997678292774432503760945152
t_ten increased 
using t_rst as 296470326586956195308983320045.49822998046875
using for fract 87894654546576465486465486456499758762333796140657284218880
getting the part of 87894654546576465486465486456499758762333796140657284218880 :: ad 59 and mad 66
    -----------------> 296470326586956195308983320045.49822998046875 ^2 ::== 87894654546576465486465486456499758762333796140657284218880
t_ten increased 
using t_rst as 2964703265869561953089833200454.982421875
using for fract 8789465454657646548646548645649976611260277939760266643243008
getting the part of 8789465454657646548646548645649976611260277939760266643243008 :: ad 61 and mad 66
    -----------------> 2964703265869561953089833200454.982421875 ^2 ::== 8789465454657646548646548645649976611260277939760266643243008
t_ten increased 
using t_rst as 29647032658695619530898332004549.8203125
using for fract 878946545465764654864654864564997463055621508315182680464424960
getting the part of 878946545465764654864654864564997463055621508315182680464424960 :: ad 63 and mad 66
    -----------------> 29647032658695619530898332004549.8203125 ^2 ::== 878946545465764654864654864564997463055621508315182680464424960
t_ten increased 
using t_rst as 296470326586956195308983320045498.21875
using for fract 87894654546576465486465486456499755179116352429124078523364933632
getting the part of 87894654546576465486465486456499755179116352429124078523364933632 :: ad 65 and mad 66
i push_back a near value of 296470326586956195308983320045498
stopping with ad 65 and mad of 66
    -----------------> 296470326586956195308983320045498.21875 ^2 ::== 87894654546576465486465486456499755179116352429124078523364933632
t_ten increased 
breaking with xbrk of value 1

increasing the digits 32
-------------------------------------------------------
-------------------------------------------------------
times 32 87894654546576465486465486456486 81838598274279763022779782547939
main 9375214906687550.99372400243128438009077019188453050446696579456329345703125 second 9046468829011669.292503547207853396849852600780650391243398189544677734375
main 87894654546576465486465486456485.984375 second 81838598274279763022779782547939.015625
times of 1.145573739577843404901798225881789355351509247318137711129833749644801392338756942577080435950941997e-16
new times of 1.145573739577843404901798225881789355351509247318137711129833749644801392338756942577080435950941997e-16
using 818385982742797630227797825479392 * 1.145573739577843404901798225881789355351509247318137711129833749644801392338756942577080435950941997e-16
93752149066875509.93724002431284401948285989192299894057214260101318359375  with length of 73 and dot length 17 will move 56
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867703804880946297186674930916261888  main number intpart lenght 66 
 fract 0 int 878946545465764654864654864564867703804880946297186674930916261888
    -----------------> 93752149066875509.93724002431284401948285989192299894057214260101318359375 ^2 ::== 8789465454657646548646548645648639
 temp fract 0 temp int 8789465454657646548646548645648639
before loop xstp is 0entering tens with lap of value 10
using t_rst as 937521490668755099.37240024312844022258417453485890291631221771240234375
using for fract 878946545465764654864654864564864000
getting the part of 878946545465764654864654864564864000 :: ad 36 and mad 66
    -----------------> 937521490668755099.37240024312844022258417453485890291631221771240234375 ^2 ::== 878946545465764654864654864564864000
t_ten increased 
using t_rst as 9375214906687550993.7240024312844024478863502736203372478485107421875
using for fract 87894654546576465486465486456486412288
getting the part of 87894654546576465486465486456486412288 :: ad 38 and mad 66
    -----------------> 9375214906687550993.7240024312844024478863502736203372478485107421875 ^2 ::== 87894654546576465486465486456486412288
t_ten increased 
using t_rst as 93752149066875509937.24002431284401382072246633470058441162109375
using for fract 8789465454657646548646548645648638410752
getting the part of 8789465454657646548646548645648638410752 :: ad 40 and mad 66
    -----------------> 93752149066875509937.24002431284401382072246633470058441162109375 ^2 ::== 8789465454657646548646548645648638410752
t_ten increased 
using t_rst as 937521490668755099372.4002431284401382072246633470058441162109375
using for fract 878946545465764654864654864564863874629632
getting the part of 878946545465764654864654864564863874629632 :: ad 42 and mad 66
    -----------------> 937521490668755099372.4002431284401382072246633470058441162109375 ^2 ::== 878946545465764654864654864564863874629632
t_ten increased 
using t_rst as 9375214906687550993724.002431284401609445922076702117919921875
using for fract 87894654546576465486465486456486389073575936
getting the part of 87894654546576465486465486456486389073575936 :: ad 44 and mad 66
    -----------------> 9375214906687550993724.002431284401609445922076702117919921875 ^2 ::== 87894654546576465486465486456486389073575936
t_ten increased 
using t_rst as 93752149066875509937240.024312844019732438027858734130859375
using for fract 8789465454657646548646548645648639422753669120
getting the part of 8789465454657646548646548645648639422753669120 :: ad 46 and mad 66
    -----------------> 93752149066875509937240.024312844019732438027858734130859375 ^2 ::== 8789465454657646548646548645648639422753669120
t_ten increased 
using t_rst as 937521490668755099372400.243128440226428210735321044921875
using for fract 878946545465764654864654864564864078614808756224
getting the part of 878946545465764654864654864564864078614808756224 :: ad 48 and mad 66
    -----------------> 937521490668755099372400.243128440226428210735321044921875 ^2 ::== 878946545465764654864654864564864078614808756224
t_ten increased 
using t_rst as 9375214906687550993724002.4312844015657901763916015625
using for fract 87894654546576465486465486456486384217582831927296
getting the part of 87894654546576465486465486456486384217582831927296 :: ad 50 and mad 66
    -----------------> 9375214906687550993724002.4312844015657901763916015625 ^2 ::== 87894654546576465486465486456486384217582831927296
t_ten increased 
using t_rst as 93752149066875509937240024.31284402310848236083984375
using for fract 8789465454657646548646548645648639970996555008180224
getting the part of 8789465454657646548646548645648639970996555008180224 :: ad 52 and mad 66
    -----------------> 93752149066875509937240024.31284402310848236083984375 ^2 ::== 8789465454657646548646548645648639970996555008180224
t_ten increased 
using t_rst as 937521490668755099372400243.1284401416778564453125
using for fract 878946545465764654864654864564863831078958837432057856
getting the part of 878946545465764654864654864564863831078958837432057856 :: ad 54 and mad 66
    -----------------> 937521490668755099372400243.1284401416778564453125 ^2 ::== 878946545465764654864654864564863831078958837432057856
t_ten increased 
using t_rst as 9375214906687550993724002431.28440189361572265625
using for fract 87894654546576465486465486456486397865291142710847078400
getting the part of 87894654546576465486465486456486397865291142710847078400 :: ad 56 and mad 66
    -----------------> 9375214906687550993724002431.28440189361572265625 ^2 ::== 87894654546576465486465486456486397865291142710847078400
t_ten increased 
using t_rst as 93752149066875509937240024312.844024658203125
using for fract 8789465454657646548646548645648640013202705448827678097408
getting the part of 8789465454657646548646548645648640013202705448827678097408 :: ad 58 and mad 66
    -----------------> 93752149066875509937240024312.844024658203125 ^2 ::== 8789465454657646548646548645648640013202705448827678097408
t_ten increased 
using t_rst as 937521490668755099372400243128.440185546875
using for fract 878946545465764654864654864564863870756282026502816941473792
getting the part of 878946545465764654864654864564863870756282026502816941473792 :: ad 60 and mad 66
    -----------------> 937521490668755099372400243128.440185546875 ^2 ::== 878946545465764654864654864564863870756282026502816941473792
t_ten increased 
using t_rst as 9375214906687550993724002431284.40234375
using for fract 87894654546576465486465486456486406263698811573675955083804672
getting the part of 87894654546576465486465486456486406263698811573675955083804672 :: ad 62 and mad 66
    -----------------> 9375214906687550993724002431284.40234375 ^2 ::== 87894654546576465486465486456486406263698811573675955083804672
t_ten increased 
using t_rst as 93752149066875509937240024312844.015625
using for fract 8789465454657646548646548645648639160648874643477350027817385984
getting the part of 8789465454657646548646548645648639160648874643477350027817385984 :: ad 64 and mad 66
    -----------------> 93752149066875509937240024312844.015625 ^2 ::== 8789465454657646548646548645648639160648874643477350027817385984
t_ten increased 
using t_rst as 937521490668755099372400243128440.25
using for fract 878946545465764654864654864564864134100790703603192060214689923072
getting the part of 878946545465764654864654864564864134100790703603192060214689923072 :: ad 66 and mad 66
i push_back a near value of 937521490668755099372400243128440
stopping with ad 66 and mad of 66
    -----------------> 937521490668755099372400243128440.25 ^2 ::== 878946545465764654864654864564864134100790703603192060214689923072
t_ten increased 
breaking with xbrk of value 1

increasing the digits 33
-------------------------------------------------------
-------------------------------------------------------
times 33 878946545465764654864654864564867 818385982742797630227797825479392
main 29647032658695619.530898332004547619800138846812842530198395252227783203125 second 28607446281393200.0613697703860267666786665330391770112328231334686279296875
main 878946545465764654864654864564867 second 818385982742797630227797825479391.875
times of 3.622622244742562971324882731609706331962084608249695176296914048944537447545005429821763339494937925e-17
new times of 3.622622244742562971324882731609706331962084608249695176296914048944537447545005429821763339494937925e-17
using 818385982742797630227797825479392 * 3.622622244742562971324882731609706331962084608249695176296914048944537447545005429821763339494937925e-17
29647032658695619.5308983320045476232695857987664567190222442150115966796875  with length of 75 and dot length 17 will move 58
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867703804880946297186674930916261888  main number intpart lenght 66 
 fract 0 int 878946545465764654864654864564867703804880946297186674930916261888
    -----------------> 29647032658695619.5308983320045476232695857987664567190222442150115966796875 ^2 ::== 878946545465764654864654864564867.25
 temp fract 0.25 temp int 878946545465764654864654864564867
before loop xstp is 0entering tens with lap of value 10
using t_rst as 296470326586956195.30898332004547623963475189157179556787014007568359375
using for fract 87894654546576465486465486456486720
getting the part of 87894654546576465486465486456486720 :: ad 35 and mad 66
    -----------------> 296470326586956195.30898332004547623963475189157179556787014007568359375 ^2 ::== 87894654546576465486465486456486720
t_ten increased 
using t_rst as 2964703265869561953.089833200454762174302913990686647593975067138671875
using for fract 8789465454657646548646548645648670720
getting the part of 8789465454657646548646548645648670720 :: ad 37 and mad 66
    -----------------> 2964703265869561953.089833200454762174302913990686647593975067138671875 ^2 ::== 8789465454657646548646548645648670720
t_ten increased 
using t_rst as 29647032658695619530.898332004547622631207559606991708278656005859375
using for fract 878946545465764654864654864564867170304
getting the part of 878946545465764654864654864564867170304 :: ad 39 and mad 66
    -----------------> 29647032658695619530.898332004547622631207559606991708278656005859375 ^2 ::== 878946545465764654864654864564867170304
t_ten increased 
using t_rst as 296470326586956195308.98332004547620499579352326691150665283203125
using for fract 87894654546576465486465486456486702874624
getting the part of 87894654546576465486465486456486702874624 :: ad 41 and mad 66
    -----------------> 296470326586956195308.98332004547620499579352326691150665283203125 ^2 ::== 87894654546576465486465486456486702874624
t_ten increased 
using t_rst as 2964703265869561953089.83320045476239101844839751720428466796875
using for fract 8789465454657646548646548645648672837599232
getting the part of 8789465454657646548646548645648672837599232 :: ad 43 and mad 66
    -----------------> 2964703265869561953089.83320045476239101844839751720428466796875 ^2 ::== 8789465454657646548646548645648672837599232
t_ten increased 
using t_rst as 29647032658695619530898.33200454762481967918574810028076171875
using for fract 878946545465764654864654864564867240810250240
getting the part of 878946545465764654864654864564867240810250240 :: ad 45 and mad 66
    -----------------> 29647032658695619530898.33200454762481967918574810028076171875 ^2 ::== 878946545465764654864654864564867240810250240
t_ten increased 
using t_rst as 296470326586956195308983.32004547622636891901493072509765625
using for fract 87894654546576465486465486456486717483955257344
getting the part of 87894654546576465486465486456486717483955257344 :: ad 47 and mad 66
    -----------------> 296470326586956195308983.32004547622636891901493072509765625 ^2 ::== 87894654546576465486465486456486717483955257344
t_ten increased 
using t_rst as 2964703265869561953089833.20045476220548152923583984375
using for fract 8789465454657646548646548645648671748395525734400
getting the part of 8789465454657646548646548645648671748395525734400 :: ad 49 and mad 66
    -----------------> 2964703265869561953089833.20045476220548152923583984375 ^2 ::== 8789465454657646548646548645648671748395525734400
t_ten increased 
using t_rst as 29647032658695619530898332.0045476220548152923583984375
using for fract 878946545465764654864654864564867138810755554476032
getting the part of 878946545465764654864654864564867138810755554476032 :: ad 51 and mad 66
    -----------------> 29647032658695619530898332.0045476220548152923583984375 ^2 ::== 878946545465764654864654864564867138810755554476032
t_ten increased 
using t_rst as 296470326586956195308983320.0454762279987335205078125
using for fract 87894654546576465486465486456486713304614803144179712
getting the part of 87894654546576465486465486456486713304614803144179712 :: ad 53 and mad 66
    -----------------> 296470326586956195308983320.0454762279987335205078125 ^2 ::== 87894654546576465486465486456486713304614803144179712
t_ten increased 
using t_rst as 2964703265869561953089833200.45476245880126953125
using for fract 8789465454657646548646548645648672843094494358601203712
getting the part of 8789465454657646548646548645648672843094494358601203712 :: ad 55 and mad 66
    -----------------> 2964703265869561953089833200.45476245880126953125 ^2 ::== 8789465454657646548646548645648672843094494358601203712
t_ten increased 
using t_rst as 29647032658695619530898332004.5476226806640625
using for fract 878946545465764654864654864564867114304256052552892678144
getting the part of 878946545465764654864654864564867114304256052552892678144 :: ad 57 and mad 66
    -----------------> 29647032658695619530898332004.5476226806640625 ^2 ::== 878946545465764654864654864564867114304256052552892678144
t_ten increased 
using t_rst as 296470326586956195308983320045.476226806640625
using for fract 87894654546576465486465486456486712034888515062603855167488
getting the part of 87894654546576465486465486456486712034888515062603855167488 :: ad 59 and mad 66
    -----------------> 296470326586956195308983320045.476226806640625 ^2 ::== 87894654546576465486465486456486712034888515062603855167488
t_ten increased 
using t_rst as 2964703265869561953089833200454.76220703125
using for fract 8789465454657646548646548645648671822458871148950522966310912
getting the part of 8789465454657646548646548645648671822458871148950522966310912 :: ad 61 and mad 66
    -----------------> 2964703265869561953089833200454.76220703125 ^2 ::== 8789465454657646548646548645648671822458871148950522966310912
t_ten increased 
using t_rst as 29647032658695619530898332004547.625
using for fract 878946545465764654864654864564867370412773086272854081297973248
getting the part of 878946545465764654864654864564867370412773086272854081297973248 :: ad 63 and mad 66
    -----------------> 29647032658695619530898332004547.625 ^2 ::== 878946545465764654864654864564867370412773086272854081297973248
t_ten increased 
using t_rst as 296470326586956195308983320045476.21875
using for fract 87894654546576465486465486456486713589741204405041480440788025344
getting the part of 87894654546576465486465486456486713589741204405041480440788025344 :: ad 65 and mad 66
i push_back a near value of 296470326586956195308983320045476
stopping with ad 65 and mad of 66
    -----------------> 296470326586956195308983320045476.21875 ^2 ::== 87894654546576465486465486456486713589741204405041480440788025344
t_ten increased 
breaking with xbrk of value 1

increasing the digits 34


u enter as approximation 818385982742797630227797825479392 with main number to find the power 878946545465764654864654864564867703804880946297186674930916261888 with psifia 66
as of the entered 
will count the digit from 669755616749894660634246733676865964586577440463355476883890241536
with string of it 669755616749894660634246733676865964586577440463355476883890241536
818385982742797630227797825479392 ^2 ::== 669755616749894660634246733676865964586577440463355476883890241536               me idia psifia 0               me diafora 209190928715869994230408130888001739218303505833831198047026020352

will count the digit from 87882878436045861759086302713441369368546410409155260129505968128
with string of it 87882878436045861759086302713441369368546410409155260129505968128
296450465400285485466952856420595 ^2 ::== 87882878436045861759086302713441369368546410409155260129505968128            me idia psifia 3            me diafora 791063667029718793105568561851426293871515328584690566906907721728

will count the digit from 87894654546576465048930972912972905877587425162880617787521236992
with string of it 87894654546576465048930972912972905877587425162880617787521236992
296470326586956194571077239223619 ^2 ::== 87894654546576465048930972912972905877587425162880617787521236992            me idia psifia 17            me diafora 791051890919188189815723891651894808068498322960141269117020667904

will count the digit from 87894654546576465485970972912973332521696570786501394926642659328
with string of it 87894654546576465485970972912973332521696570786501394926642659328
296470326586956195308149318293587 ^2 ::== 87894654546576465485970972912973332521696570786501394926642659328            me idia psifia 19            me diafora 791051890919188189378683891651894351000774771859014856057022316544

will count the digit from 87894654546576465486465485472972957406536956124187188853622177792
with string of it 87894654546576465486465485472972957406536956124187188853622177792
296470326586956195308983318386771 ^2 ::== 87894654546576465486465485472972957406536956124187188853622177792            me idia psifia 25            me diafora 791051890919188189378189379091894705833524782869658638182791512064

will count the digit from 87894654546576465486465486456486581754078780669183724783654666240
with string of it 87894654546576465486465486456486581754078780669183724783654666240
296470326586956195308983320045476 ^2 ::== 87894654546576465486465486456486581754078780669183724783654666240            me idia psifia 32            me diafora 791051890919188189378189378108381111909597363802167738173635952640

will count the digit from 87894654546576465486465486456499623343453928693266322866231574528
with string of it 87894654546576465486465486456499623343453928693266322866231574528
296470326586956195308983320045498 ^2 ::== 87894654546576465486465486456499623343453928693266322866231574528            me idia psifia 30            me diafora 791051890919188189378189378108368050037812612126414716143807758336

will count the digit from 87894654546576465486465486458016960547107911983517028708564074496
with string of it 87894654546576465486465486458016960547107911983517028708564074496
296470326586956195308983320048057 ^2 ::== 87894654546576465486465486458016960547107911983517028708564074496            me idia psifia 28            me diafora 791051890919188189378189378106850763540182637965340070169603473408

will count the digit from 87894654546576465486465486502973124257697875994900350656531398656
with string of it 87894654546576465486465486502973124257697875994900350656531398656
296470326586956195308983320123876 ^2 ::== 87894654546576465486465486502973124257697875994900350656531398656            me idia psifia 26            me diafora 791051890919188189378189378061894559264773466650615900327133577216

will count the digit from 87894654546576465486466680912972996188592368075311619557933711360
with string of it 87894654546576465486466680912972996188592368075311619557933711360
296470326586956195308985334507598 ^2 ::== 87894654546576465486466680912972996188592368075311619557933711360            me idia psifia 22            me diafora 791051890919188189378188183651894738039902983699380691293859479552

will count the digit from 87894654546576465486571372912973333170772719421286032515241345024
with string of it 87894654546576465486571372912973333170772719421286032515241345024
296470326586956195309161898552313 ^2 ::== 87894654546576465486571372912973333170772719421286032515241345024            me idia psifia 20            me diafora 791051890919188189378083491651894401057722632353406278336551845888

will count the digit from 87894654546576535372930972913028839978654346405073881382854328320
with string of it 87894654546576535372930972913028839978654346405073881382854328320
296470326586956313173166037769313 ^2 ::== 87894654546576535372930972913028839978654346405073881382854328320            me idia psifia 14            me diafora 791051890919188119491723891651838863826226599892112793548061933568

will count the digit from 87894654546590970972930975122990696261410992918055619554581676032
with string of it 87894654546590970972930975122990696261410992918055619554581676032
296470326586980658948620512434074 ^2 ::== 87894654546590970972930975122990696261410992918055619554581676032            me idia psifia 12            me diafora 791051890919173683891723889441877037967084358856636691297211514880

will count the digit from 87894654546600930972930113049078360235583406984439388541372334080
with string of it 87894654546600930972930113049078360235583406984439388541372334080
296470326586997456582491326661078 ^2 ::== 87894654546600930972930113049078360235583406984439388541372334080            me idia psifia 11            me diafora 791051890919163723891724751515789384134116746616088134284046499840

will count the digit from 87894654659552931105606183105912870643961109619413087140756586496
with string of it 87894654659552931105606183105912870643961109619413087140756586496
296470326777492069309345086474161 ^2 ::== 87894654659552931105606183105912870643961109619413087140756586496            me idia psifia 8            me diafora 791051890806211723759048681458954853443329440329444011737410961408

will count the digit from 87894667773154707039353728736345908304635542114103169354718773248
with string of it 87894667773154707039353728736345908304635542114103169354718773248
296470348893704220026494008505670 ^2 ::== 87894667773154707039353728736345908304635542114103169354718773248            me idia psifia 6            me diafora 791051877692609947825301135828521825923859809660589141497074417664

will count the digit from 87895285097674796793830496048396785495264217832019138981562155008
with string of it 87895285097674796793830496048396785495264217832019138981562155008
296471390015419189004363531770881 ^2 ::== 87895285097674796793830496048396785495264217832019138981562155008            me idia psifia 4            me diafora 791051260368089858070824368516470898027207124813497112002102820864

will count the digit from 878946545465764654489309729129733838266226460862781832437444902912
with string of it 878946545465764654489309729129733838266226460862781832437444902912
937521490668755099172220759686739 ^2 ::== 878946545465764654489309729129733838266226460862781832437444902912            me idia psifia 18            me diafora 375345135435133865538654485434404842493471358976

will count the digit from 878946545465764654864654864564841093283480955305590456137229008896
with string of it 878946545465764654864654864564841093283480955305590456137229008896
937521490668755099372400243128428 ^2 ::== 878946545465764654864654864564841093283480955305590456137229008896            me idia psifia 31            me diafora 26610521399990991596218793687252992

will count the digit from 878946545465764654864654864564863647322960215963101885480659058688
with string of it 878946545465764654864654864564863647322960215963101885480659058688
937521490668755099372400243128440 ^2 ::== 878946545465764654864654864564863647322960215963101885480659058688            me idia psifia 32            me diafora 4056481920730334084789450257203200

will count the digit from 878946545465764654864654864670533541024493955951596540478709825536
with string of it 878946545465764654864654864670533541024493955951596540478709825536
937521490668755099372400243184796 ^2 ::== 878946545465764654864654864670533541024493955951596540478709825536            me idia psifia 27            me diafora 105665837219613009654409865547793563648

will count the digit from 878946545465764654864654871769733061415218727665779004316892266496
with string of it 878946545465764654864654871769733061415218727665779004316892266496
937521490668755099372400246970949 ^2 ::== 878946545465764654864654871769733061415218727665779004316892266496            me idia psifia 25            me diafora 7204865357610337781368592329385976004608

will count the digit from 878946545465764654864655773129733555784753956215147761904088252416
with string of it 878946545465764654864655773129733555784753956215147761904088252416
937521490668755099372400727685263 ^2 ::== 878946545465764654864655773129733555784753956215147761904088252416            me idia psifia 23            me diafora 908564865851979873009917961086973171990528

will count the digit from 878946545465764654864810129129733121616659345393803601562585530368
with string of it 878946545465764654864810129129733121616659345393803601562585530368
937521490668755099372483048998180 ^2 ::== 878946545465764654864810129129733121616659345393803601562585530368            me idia psifia 21            me diafora 155264564865417811778399096616926631669268480

will count the digit from 878946545465764654876749729129732684845244265765270919386356514816
with string of it 878946545465764654876749729129732684845244265765270919386356514816
937521490668755099378850689696999 ^2 ::== 878946545465764654876749729129732684845244265765270919386356514816            me idia psifia 19            me diafora 12094864564864981040363319468084244455440252928

will count the digit from 878946545465764664929309729129732316453650535055248837565176872960
with string of it 878946545465764664929309729129732316453650535055248837565176872960
937521490668755104740093125232681 ^2 ::== 878946545465764664929309729129732316453650535055248837565176872960            me idia psifia 16            me diafora 10064654864564864612648769588758062162634260611072

will count the digit from 878946545465776389729309729272148465893128870061099692386454339584
with string of it 878946545465776389729309729272148465893128870061099692386454339584
937521490668761357823417986692938 ^2 ::== 878946545465776389729309729272148465893128870061099692386454339584            me idia psifia 13            me diafora 11734864654864707280762088247923763913017455538077696

will count the digit from 878946545466713309729310743391700904786297322960631919294891950080
with string of it 878946545466713309729310743391700904786297322960631919294891950080
937521490669261037035748592652279 ^2 ::== 878946545466713309729310743391700904786297322960631919294891950080            me idia psifia 11            me diafora 948654864655878826833200981416376663445244363975688192

will count the digit from 878946545491929309729642569807774175577336974530849103087803564032
with string of it 878946545491929309729642569807774175577336974530849103087803564032
937521490682709262090381860614086 ^2 ::== 878946545491929309729642569807774175577336974530849103087803564032            me idia psifia 10            me diafora 26164654864987705242906471772456028233662428156887302144

will count the digit from 878946545891529302710538751477611659251984878385330465798900154368
with string of it 878946545891529302710538751477611659251984878385330465798900154368
937521490895824373000792464082796 ^2 ::== 878946545891529302710538751477611659251984878385330465798900154368            me idia psifia 9            me diafora 425764647845883886912743955447103932088143790867983892480

will count the digit from 878948110934021595919548077562900532961712442105157502353232887808
with string of it 878948110934021595919548077562900532961712442105157502353232887808
937522325565648381013001469922474 ^2 ::== 878948110934021595919548077562900532961712442105157502353232887808            me idia psifia 5            me diafora 1565468256941054893212998032829156831495807970827422316625920

will count the digit from 879084710260075634267092618308707094388651248438169108695385899008
with string of it 879084710260075634267092618308707094388651248438169108695385899008
937595173974394790488990396379005 ^2 ::== 879084710260075634267092618308707094388651248438169108695385899008            me idia psifia 2            me diafora 138164794310979402437753743839390583770302140982433764469637120

will count the digit from 888107585082164844919668736928628701947840946787777990805432565760
with string of it 888107585082164844919668736928628701947840946787777990805432565760
942394601577367295202869982994921 ^2 ::== 888107585082164844919668736928628701947840946787777990805432565760            me idia psifia 1            me diafora 9161039616400190055013872363760998142960000490591315874516303872

will count the digit from 8371945209373683257928084170960824395072941176578580069470617731072
with string of it 8371945209373683257928084170960824395072941176578580069470617731072
2893431390127245311649137255268413 ^2 ::== 8371945209373683257928084170960824395072941176578580069470617731072            me idia psifia 1            me diafora 7492998663907918603063429306395957340305167547134846960851742621696


-------------------------Approximation Result Set-----------------------------------------------------

possible approximation > ::== 937521490668755099372400243128440 ^2 878946545465764654864654864564863647322960215963101885480659058688             me idia psifia 32             me diafora 4056481920730334084789450257203200


will count the digit from 878946545465764654864654864564865432175005337310099192838772228096
with string of it 878946545465764654864654864564865432175005337310099192838772228096
possible approximation of addition ::== 937521490668755099372400243128441 with ^2  878946545465764654864654864564865432175005337310099192838772228096             me idia psifia 32             me diafora 2271629875608987087482092144033792

will count the digit from 878946545465764654864654864564867379286327287870459891774895685632
with string of it 878946545465764654864654864564867379286327287870459891774895685632
possible approximation of addition ::== 937521490668755099372400243128442 with ^2  878946545465764654864654864564867379286327287870459891774895685632             me idia psifia 33             me diafora 324518553658426726783156020576256

will count the digit from 878946545465764654864654864564869164138372409217457199133008855040
with string of it 878946545465764654864654864564869164138372409217457199133008855040
possible approximation of addition ::== 937521490668755099372400243128443 with ^2  878946545465764654864654864564869164138372409217457199133008855040             me idia psifia 32             me diafora 1460333491462920270524202092593152
will pass value of 937521490668755099372400243128443



------------------------Bee-----------------------------

-------------------Calculation Bee--------------------------------
first number second number is the qube one dimension and third the precision 
will count the digit from 878946545465764654864654864564867703804880946297186674930916261888
with string of it 878946545465764654864654864564867703804880946297186674930916261888
Main Number 878946545465764654864654864564867703804880946297186674930916261888 has number of digits 66
Using Power of 818385982742797630227797825479392

first 878946545465764654864654864564867703804880946297186674930916261888 
     doted 0
     makes 878946545465764654864654864564867703804880946297186674930916261888

second 818385982742797630227797825479392 
     doted 0 
     makes 818385982742797630227797825479392

result 1074000000000000000000000000000000 
     doted 0.875 
     makes 1074000000000000000000000000000000.875


for the integer string 1074000000000000000000000000000000.000000
the numbers are 34
the retrievable integer digit is 0

entering with number of 0.875
recheck values of 818385982742797630227797825479392 and result of 669755616749894660634246733676865964586577440463355476883890241536 with intpart 669755616749894660634246733676865964586577440463355476883890241536

     ----> using 0.875 rst is 0.4375
     ----> using 0.4375 with intpart 0 and fract 0.4375
trying to retrieve digits 
will count the digit from 669755616749894660634246733676866775882961586530172434773941682176
with string of it 669755616749894660634246733676866775882961586530172434773941682176
digits retrieved 0
                     with combination da_rst 818385982742797630227797825479392.5 sq of rst 669755616749894660634246733676866775882961586530172434773941682176
                     with intpart 669755616749894660634246733676866775882961586530172434773941682176 and other part 0
                     the int string is 0.437500

     ----> using 0.4375 rst is 0.21875
     ----> using 0.21875 with intpart 0 and fract 0.21875
trying to retrieve digits 
will count the digit from 669755616749894660634246733676866370234769513496763955828915961856
with string of it 669755616749894660634246733676866370234769513496763955828915961856
digits retrieved 0
                     with combination da_rst 818385982742797630227797825479392.25 sq of rst 669755616749894660634246733676866370234769513496763955828915961856
                     with intpart 669755616749894660634246733676866370234769513496763955828915961856 and other part 0
                     the int string is 0.218750

     ----> using 0.21875 rst is 0.109375
     ----> using 0.109375 with intpart 0 and fract 0.109375
trying to retrieve digits 
will count the digit from 669755616749894660634246733676866126845854269676718868461900529664
with string of it 669755616749894660634246733676866126845854269676718868461900529664
digits retrieved 0
                     with combination da_rst 818385982742797630227797825479392.125 sq of rst 669755616749894660634246733676866126845854269676718868461900529664
                     with intpart 669755616749894660634246733676866126845854269676718868461900529664 and other part 0
                     the int string is 0.109375

     ----> using 0.109375 rst is 0.0546875
     ----> using 0.0546875 with intpart 0 and fract 0.0546875
trying to retrieve digits 
will count the digit from 669755616749894660634246733676865964586577440463355476883890241536
with string of it 669755616749894660634246733676865964586577440463355476883890241536
digits retrieved 0
                     with combination da_rst 818385982742797630227797825479392 sq of rst 669755616749894660634246733676865964586577440463355476883890241536
                     with intpart 669755616749894660634246733676865964586577440463355476883890241536 and other part 0
                     the int string is 0.054688

--------------------------------------
Psifia,Power,Result of Power,Diafora from Main,Diairesi from Main
--------------------------------------
0 818385982742797630227797825479392.500000 669755616749894660634246733676866775882961586530172434773941682176.000000 209190928715869994230408130888000927921919359767014240156974579712.000000 1.312339 
--------------------------------------

-------------------Calculation Bee--------------------------------
first number second number is the qube one dimension and third the precision 
will count the digit from 878946545465764654864654864564867703804880946297186674930916261888
with string of it 878946545465764654864654864564867703804880946297186674930916261888
Main Number 878946545465764654864654864564867703804880946297186674930916261888 has number of digits 66
Using Power of 937521490668755099372400243128440

first 878946545465764654864654864564867703804880946297186674930916261888 
     doted 0
     makes 878946545465764654864654864564867703804880946297186674930916261888

second 937521490668755099372400243128440 
     doted 0 
     makes 937521490668755099372400243128440

result 937521490668755099372400243128444 
     doted 0.375 
     makes 937521490668755099372400243128444.375


for the integer string 937521490668755099372400243128444.000000
the numbers are 33
the retrievable integer digit is 4

entering with number of 4.375
recheck values of 937521490668755099372400243128440 and result of 878946545465764654864654864564863647322960215963101885480659058688 with intpart 878946545465764654864654864564863647322960215963101885480659058688

     ----> using 4.375 rst is 2.1875
     ----> using 2.1875 with intpart 2 and fract 0.1875
trying to retrieve digits 
will count the digit from 878946545465764654864654864564864134100790703603192060214689923072
with string of it 878946545465764654864654864564864134100790703603192060214689923072
digits retrieved 32
                     with combination da_rst 937521490668755099372400243128440.25 sq of rst 878946545465764654864654864564864134100790703603192060214689923072
                     with intpart 878946545465764654864654864564864134100790703603192060214689923072 and other part 0
                     the int string is 2.187500

     ----> using 2.1875 rst is 1.09375
     ----> using 1.09375 with intpart 1 and fract 0.09375
trying to retrieve digits 
will count the digit from 878946545465764654864654864564863809582237045176465277058669346816
with string of it 878946545465764654864654864564863809582237045176465277058669346816
digits retrieved 32
                     with combination da_rst 937521490668755099372400243128440.125 sq of rst 878946545465764654864654864564863809582237045176465277058669346816
                     with intpart 878946545465764654864654864564863809582237045176465277058669346816 and other part 0
                     the int string is 1.093750

from new int t  of 4 ---> 3 with 3.375
     ----> using 3.375 rst is 1.6875
     ----> using 1.6875 with intpart 1 and fract 0.6875
trying to retrieve digits 
will count the digit from 878946545465764654864654864564864945397174849670009018104741363712
with string of it 878946545465764654864654864564864945397174849670009018104741363712
digits retrieved 32
                     with combination da_rst 937521490668755099372400243128440.75 sq of rst 878946545465764654864654864564864945397174849670009018104741363712
                     with intpart 878946545465764654864654864564864945397174849670009018104741363712 and other part 0
                     the int string is 1.687500

     ----> using 1.6875 rst is 0.84375
     ----> using 0.84375 with intpart 0 and fract 0.84375
trying to retrieve digits 
will count the digit from 878946545465764654864654864564865269915728508096735801260761939968
with string of it 878946545465764654864654864564865269915728508096735801260761939968
digits retrieved 32
                     with combination da_rst 937521490668755099372400243128440.875 sq of rst 878946545465764654864654864564865269915728508096735801260761939968
                     with intpart 878946545465764654864654864564865269915728508096735801260761939968 and other part 0
                     the int string is 0.843750

     ----> using 0.84375 rst is 0.421875
     ----> using 0.421875 with intpart 0 and fract 0.421875
trying to retrieve digits 
will count the digit from 878946545465764654864654864564864296360067532816555451792700211200
with string of it 878946545465764654864654864564864296360067532816555451792700211200
digits retrieved 32
                     with combination da_rst 937521490668755099372400243128440.375 sq of rst 878946545465764654864654864564864296360067532816555451792700211200
                     with intpart 878946545465764654864654864564864296360067532816555451792700211200 and other part 0
                     the int string is 0.421875

     ----> using 0.421875 rst is 0.2109375
     ----> using 0.2109375 with intpart 0 and fract 0.2109375
trying to retrieve digits 
will count the digit from 878946545465764654864654864564864134100790703603192060214689923072
with string of it 878946545465764654864654864564864134100790703603192060214689923072
digits retrieved 32
                     with combination da_rst 937521490668755099372400243128440.25 sq of rst 878946545465764654864654864564864134100790703603192060214689923072
                     with intpart 878946545465764654864654864564864134100790703603192060214689923072 and other part 0
                     the int string is 0.210938

     ----> using 0.2109375 rst is 0.10546875
     ----> using 0.10546875 with intpart 0 and fract 0.10546875
trying to retrieve digits 
will count the digit from 878946545465764654864654864564863809582237045176465277058669346816
with string of it 878946545465764654864654864564863809582237045176465277058669346816
digits retrieved 32
                     with combination da_rst 937521490668755099372400243128440.125 sq of rst 878946545465764654864654864564863809582237045176465277058669346816
                     with intpart 878946545465764654864654864564863809582237045176465277058669346816 and other part 0
                     the int string is 0.105469

     ----> using 0.10546875 rst is 0.052734375
     ----> using 0.052734375 with intpart 0 and fract 0.052734375
trying to retrieve digits 
will count the digit from 878946545465764654864654864564863647322960215963101885480659058688
with string of it 878946545465764654864654864564863647322960215963101885480659058688
digits retrieved 32
                     with combination da_rst 937521490668755099372400243128440 sq of rst 878946545465764654864654864564863647322960215963101885480659058688
                     with intpart 878946545465764654864654864564863647322960215963101885480659058688 and other part 0
                     the int string is 0.052734

from new int t  of 3 ---> 2 with 2.375
     ----> using 2.375 rst is 1.1875
     ----> using 1.1875 with intpart 1 and fract 0.1875
trying to retrieve digits 
will count the digit from 878946545465764654864654864564864134100790703603192060214689923072
with string of it 878946545465764654864654864564864134100790703603192060214689923072
digits retrieved 32
                     with combination da_rst 937521490668755099372400243128440.25 sq of rst 878946545465764654864654864564864134100790703603192060214689923072
                     with intpart 878946545465764654864654864564864134100790703603192060214689923072 and other part 0
                     the int string is 1.187500

     ----> using 1.1875 rst is 0.59375
     ----> using 0.59375 with intpart 0 and fract 0.59375
trying to retrieve digits 
will count the digit from 878946545465764654864654864564864783137898020456645626526731075584
with string of it 878946545465764654864654864564864783137898020456645626526731075584
digits retrieved 32
                     with combination da_rst 937521490668755099372400243128440.625 sq of rst 878946545465764654864654864564864783137898020456645626526731075584
                     with intpart 878946545465764654864654864564864783137898020456645626526731075584 and other part 0
                     the int string is 0.593750

     ----> using 0.59375 rst is 0.296875
     ----> using 0.296875 with intpart 0 and fract 0.296875
trying to retrieve digits 
will count the digit from 878946545465764654864654864564864134100790703603192060214689923072
with string of it 878946545465764654864654864564864134100790703603192060214689923072
digits retrieved 32
                     with combination da_rst 937521490668755099372400243128440.25 sq of rst 878946545465764654864654864564864134100790703603192060214689923072
                     with intpart 878946545465764654864654864564864134100790703603192060214689923072 and other part 0
                     the int string is 0.296875

     ----> using 0.296875 rst is 0.1484375
     ----> using 0.1484375 with intpart 0 and fract 0.1484375
trying to retrieve digits 
will count the digit from 878946545465764654864654864564863809582237045176465277058669346816
with string of it 878946545465764654864654864564863809582237045176465277058669346816
digits retrieved 32
                     with combination da_rst 937521490668755099372400243128440.125 sq of rst 878946545465764654864654864564863809582237045176465277058669346816
                     with intpart 878946545465764654864654864564863809582237045176465277058669346816 and other part 0
                     the int string is 0.148438

     ----> using 0.1484375 rst is 0.07421875
     ----> using 0.07421875 with intpart 0 and fract 0.07421875
trying to retrieve digits 
will count the digit from 878946545465764654864654864564863809582237045176465277058669346816
with string of it 878946545465764654864654864564863809582237045176465277058669346816
digits retrieved 32
                     with combination da_rst 937521490668755099372400243128440.125 sq of rst 878946545465764654864654864564863809582237045176465277058669346816
                     with intpart 878946545465764654864654864564863809582237045176465277058669346816 and other part 0
                     the int string is 0.074219

from new int t  of 2 ---> 1 with 1.375
     ----> using 1.375 rst is 0.6875
     ----> using 0.6875 with intpart 0 and fract 0.6875
trying to retrieve digits 
will count the digit from 878946545465764654864654864564864945397174849670009018104741363712
with string of it 878946545465764654864654864564864945397174849670009018104741363712
digits retrieved 32
                     with combination da_rst 937521490668755099372400243128440.75 sq of rst 878946545465764654864654864564864945397174849670009018104741363712
                     with intpart 878946545465764654864654864564864945397174849670009018104741363712 and other part 0
                     the int string is 0.687500

     ----> using 0.6875 rst is 0.34375
     ----> using 0.34375 with intpart 0 and fract 0.34375
trying to retrieve digits 
will count the digit from 878946545465764654864654864564864296360067532816555451792700211200
with string of it 878946545465764654864654864564864296360067532816555451792700211200
digits retrieved 32
                     with combination da_rst 937521490668755099372400243128440.375 sq of rst 878946545465764654864654864564864296360067532816555451792700211200
                     with intpart 878946545465764654864654864564864296360067532816555451792700211200 and other part 0
                     the int string is 0.343750

     ----> using 0.34375 rst is 0.171875
     ----> using 0.171875 with intpart 0 and fract 0.171875
trying to retrieve digits 
will count the digit from 878946545465764654864654864564863809582237045176465277058669346816
with string of it 878946545465764654864654864564863809582237045176465277058669346816
digits retrieved 32
                     with combination da_rst 937521490668755099372400243128440.125 sq of rst 878946545465764654864654864564863809582237045176465277058669346816
                     with intpart 878946545465764654864654864564863809582237045176465277058669346816 and other part 0
                     the int string is 0.171875

     ----> using 0.171875 rst is 0.0859375
     ----> using 0.0859375 with intpart 0 and fract 0.0859375
trying to retrieve digits 
will count the digit from 878946545465764654864654864564863809582237045176465277058669346816
with string of it 878946545465764654864654864564863809582237045176465277058669346816
digits retrieved 32
                     with combination da_rst 937521490668755099372400243128440.125 sq of rst 878946545465764654864654864564863809582237045176465277058669346816
                     with intpart 878946545465764654864654864564863809582237045176465277058669346816 and other part 0
                     the int string is 0.085938

from new int t  of 1 ---> 0 with 0.375
     ----> using 0.375 rst is 0.1875
     ----> using 0.1875 with intpart 0 and fract 0.1875
trying to retrieve digits 
will count the digit from 878946545465764654864654864564864134100790703603192060214689923072
with string of it 878946545465764654864654864564864134100790703603192060214689923072
digits retrieved 32
                     with combination da_rst 937521490668755099372400243128440.25 sq of rst 878946545465764654864654864564864134100790703603192060214689923072
                     with intpart 878946545465764654864654864564864134100790703603192060214689923072 and other part 0
                     the int string is 0.187500

     ----> using 0.1875 rst is 0.09375
     ----> using 0.09375 with intpart 0 and fract 0.09375
trying to retrieve digits 
will count the digit from 878946545465764654864654864564863809582237045176465277058669346816
with string of it 878946545465764654864654864564863809582237045176465277058669346816
digits retrieved 32
                     with combination da_rst 937521490668755099372400243128440.125 sq of rst 878946545465764654864654864564863809582237045176465277058669346816
                     with intpart 878946545465764654864654864564863809582237045176465277058669346816 and other part 0
                     the int string is 0.093750

--------------------------------------
Psifia,Power,Result of Power,Diafora from Main,Diairesi from Main
--------------------------------------
32 937521490668755099372400243128440.250000 878946545465764654864654864564864134100790703603192060214689923072.000000 3569704090242693994614716226338816.000000 1.000000 
--------------------------------------

-------------------Calculation Bee--------------------------------
first number second number is the qube one dimension and third the precision 
will count the digit from 878946545465764654864654864564867703804880946297186674930916261888
with string of it 878946545465764654864654864564867703804880946297186674930916261888
Main Number 878946545465764654864654864564867703804880946297186674930916261888 has number of digits 66
Using Power of 937521490668755099372400243128441

first 878946545465764654864654864564867703804880946297186674930916261888 
     doted 0
     makes 878946545465764654864654864564867703804880946297186674930916261888

second 937521490668755099372400243128441 
     doted 0 
     makes 937521490668755099372400243128441

result 937521490668755099372400243128443 
     doted 0.375 
     makes 937521490668755099372400243128443.375


for the integer string 937521490668755099372400243128443.000000
the numbers are 33
the retrievable integer digit is 3

entering with number of 3.375
recheck values of 937521490668755099372400243128441 and result of 878946545465764654864654864564865432175005337310099192838772228096 with intpart 878946545465764654864654864564865432175005337310099192838772228096

     ----> using 3.375 rst is 1.6875
     ----> using 1.6875 with intpart 1 and fract 0.6875
trying to retrieve digits 
will count the digit from 878946545465764654864654864564866892508496800230369717040864821248
with string of it 878946545465764654864654864564866892508496800230369717040864821248
digits retrieved 32
                     with combination da_rst 937521490668755099372400243128441.75 sq of rst 878946545465764654864654864564866892508496800230369717040864821248
                     with intpart 878946545465764654864654864564866892508496800230369717040864821248 and other part 0
                     the int string is 1.687500

     ----> using 1.6875 rst is 0.84375
     ----> using 0.84375 with intpart 0 and fract 0.84375
trying to retrieve digits 
will count the digit from 878946545465764654864654864564867054767773629443733108618875109376
with string of it 878946545465764654864654864564867054767773629443733108618875109376
digits retrieved 33
                     with combination da_rst 937521490668755099372400243128441.875 sq of rst 878946545465764654864654864564867054767773629443733108618875109376
                     with intpart 878946545465764654864654864564867054767773629443733108618875109376 and other part 0
                     the int string is 0.843750

     ----> using 0.84375 rst is 0.421875
     ----> using 0.421875 with intpart 0 and fract 0.421875
trying to retrieve digits 
will count the digit from 878946545465764654864654864564866243471389483376916150728823668736
with string of it 878946545465764654864654864564866243471389483376916150728823668736
digits retrieved 32
                     with combination da_rst 937521490668755099372400243128441.375 sq of rst 878946545465764654864654864564866243471389483376916150728823668736
                     with intpart 878946545465764654864654864564866243471389483376916150728823668736 and other part 0
                     the int string is 0.421875

     ----> using 0.421875 rst is 0.2109375
     ----> using 0.2109375 with intpart 0 and fract 0.2109375
trying to retrieve digits 
will count the digit from 878946545465764654864654864564865918952835824950189367572803092480
with string of it 878946545465764654864654864564865918952835824950189367572803092480
digits retrieved 32
                     with combination da_rst 937521490668755099372400243128441.25 sq of rst 878946545465764654864654864564865918952835824950189367572803092480
                     with intpart 878946545465764654864654864564865918952835824950189367572803092480 and other part 0
                     the int string is 0.210938

     ----> using 0.2109375 rst is 0.10546875
     ----> using 0.10546875 with intpart 0 and fract 0.10546875
trying to retrieve digits 
will count the digit from 878946545465764654864654864564865756693558995736825975994792804352
with string of it 878946545465764654864654864564865756693558995736825975994792804352
digits retrieved 32
                     with combination da_rst 937521490668755099372400243128441.125 sq of rst 878946545465764654864654864564865756693558995736825975994792804352
                     with intpart 878946545465764654864654864564865756693558995736825975994792804352 and other part 0
                     the int string is 0.105469

     ----> using 0.10546875 rst is 0.052734375
     ----> using 0.052734375 with intpart 0 and fract 0.052734375
trying to retrieve digits 
will count the digit from 878946545465764654864654864564865432175005337310099192838772228096
with string of it 878946545465764654864654864564865432175005337310099192838772228096
digits retrieved 32
                     with combination da_rst 937521490668755099372400243128441 sq of rst 878946545465764654864654864564865432175005337310099192838772228096
                     with intpart 878946545465764654864654864564865432175005337310099192838772228096 and other part 0
                     the int string is 0.052734

from new int t  of 3 ---> 2 with 2.375
     ----> using 2.375 rst is 1.1875
     ----> using 1.1875 with intpart 1 and fract 0.1875
trying to retrieve digits 
will count the digit from 878946545465764654864654864564865918952835824950189367572803092480
with string of it 878946545465764654864654864564865918952835824950189367572803092480
digits retrieved 32
                     with combination da_rst 937521490668755099372400243128441.25 sq of rst 878946545465764654864654864564865918952835824950189367572803092480
                     with intpart 878946545465764654864654864564865918952835824950189367572803092480 and other part 0
                     the int string is 1.187500

     ----> using 1.1875 rst is 0.59375
     ----> using 0.59375 with intpart 0 and fract 0.59375
trying to retrieve digits 
will count the digit from 878946545465764654864654864564866567989943141803642933884844244992
with string of it 878946545465764654864654864564866567989943141803642933884844244992
digits retrieved 32
                     with combination da_rst 937521490668755099372400243128441.625 sq of rst 878946545465764654864654864564866567989943141803642933884844244992
                     with intpart 878946545465764654864654864564866567989943141803642933884844244992 and other part 0
                     the int string is 0.593750

     ----> using 0.59375 rst is 0.296875
     ----> using 0.296875 with intpart 0 and fract 0.296875
trying to retrieve digits 
will count the digit from 878946545465764654864654864564865918952835824950189367572803092480
with string of it 878946545465764654864654864564865918952835824950189367572803092480
digits retrieved 32
                     with combination da_rst 937521490668755099372400243128441.25 sq of rst 878946545465764654864654864564865918952835824950189367572803092480
                     with intpart 878946545465764654864654864564865918952835824950189367572803092480 and other part 0
                     the int string is 0.296875

     ----> using 0.296875 rst is 0.1484375
     ----> using 0.1484375 with intpart 0 and fract 0.1484375
trying to retrieve digits 
will count the digit from 878946545465764654864654864564865756693558995736825975994792804352
with string of it 878946545465764654864654864564865756693558995736825975994792804352
digits retrieved 32
                     with combination da_rst 937521490668755099372400243128441.125 sq of rst 878946545465764654864654864564865756693558995736825975994792804352
                     with intpart 878946545465764654864654864564865756693558995736825975994792804352 and other part 0
                     the int string is 0.148438

     ----> using 0.1484375 rst is 0.07421875
     ----> using 0.07421875 with intpart 0 and fract 0.07421875
trying to retrieve digits 
will count the digit from 878946545465764654864654864564865756693558995736825975994792804352
with string of it 878946545465764654864654864564865756693558995736825975994792804352
digits retrieved 32
                     with combination da_rst 937521490668755099372400243128441.125 sq of rst 878946545465764654864654864564865756693558995736825975994792804352
                     with intpart 878946545465764654864654864564865756693558995736825975994792804352 and other part 0
                     the int string is 0.074219

from new int t  of 2 ---> 1 with 1.375
     ----> using 1.375 rst is 0.6875
     ----> using 0.6875 with intpart 0 and fract 0.6875
trying to retrieve digits 
will count the digit from 878946545465764654864654864564866892508496800230369717040864821248
with string of it 878946545465764654864654864564866892508496800230369717040864821248
digits retrieved 32
                     with combination da_rst 937521490668755099372400243128441.75 sq of rst 878946545465764654864654864564866892508496800230369717040864821248
                     with intpart 878946545465764654864654864564866892508496800230369717040864821248 and other part 0
                     the int string is 0.687500

     ----> using 0.6875 rst is 0.34375
     ----> using 0.34375 with intpart 0 and fract 0.34375
trying to retrieve digits 
will count the digit from 878946545465764654864654864564866243471389483376916150728823668736
with string of it 878946545465764654864654864564866243471389483376916150728823668736
digits retrieved 32
                     with combination da_rst 937521490668755099372400243128441.375 sq of rst 878946545465764654864654864564866243471389483376916150728823668736
                     with intpart 878946545465764654864654864564866243471389483376916150728823668736 and other part 0
                     the int string is 0.343750

     ----> using 0.34375 rst is 0.171875
     ----> using 0.171875 with intpart 0 and fract 0.171875
trying to retrieve digits 
will count the digit from 878946545465764654864654864564865756693558995736825975994792804352
with string of it 878946545465764654864654864564865756693558995736825975994792804352
digits retrieved 32
                     with combination da_rst 937521490668755099372400243128441.125 sq of rst 878946545465764654864654864564865756693558995736825975994792804352
                     with intpart 878946545465764654864654864564865756693558995736825975994792804352 and other part 0
                     the int string is 0.171875

     ----> using 0.171875 rst is 0.0859375
     ----> using 0.0859375 with intpart 0 and fract 0.0859375
trying to retrieve digits 
will count the digit from 878946545465764654864654864564865756693558995736825975994792804352
with string of it 878946545465764654864654864564865756693558995736825975994792804352
digits retrieved 32
                     with combination da_rst 937521490668755099372400243128441.125 sq of rst 878946545465764654864654864564865756693558995736825975994792804352
                     with intpart 878946545465764654864654864564865756693558995736825975994792804352 and other part 0
                     the int string is 0.085938

from new int t  of 1 ---> 0 with 0.375
     ----> using 0.375 rst is 0.1875
     ----> using 0.1875 with intpart 0 and fract 0.1875
trying to retrieve digits 
will count the digit from 878946545465764654864654864564865918952835824950189367572803092480
with string of it 878946545465764654864654864564865918952835824950189367572803092480
digits retrieved 32
                     with combination da_rst 937521490668755099372400243128441.25 sq of rst 878946545465764654864654864564865918952835824950189367572803092480
                     with intpart 878946545465764654864654864564865918952835824950189367572803092480 and other part 0
                     the int string is 0.187500

     ----> using 0.1875 rst is 0.09375
     ----> using 0.09375 with intpart 0 and fract 0.09375
trying to retrieve digits 
will count the digit from 878946545465764654864654864564865756693558995736825975994792804352
with string of it 878946545465764654864654864564865756693558995736825975994792804352
digits retrieved 32
                     with combination da_rst 937521490668755099372400243128441.125 sq of rst 878946545465764654864654864564865756693558995736825975994792804352
                     with intpart 878946545465764654864654864564865756693558995736825975994792804352 and other part 0
                     the int string is 0.093750

--------------------------------------
Psifia,Power,Result of Power,Diafora from Main,Diairesi from Main
--------------------------------------
32 937521490668755099372400243128441.750000 878946545465764654864654864564866892508496800230369717040864821248.000000 811296384146066816957890051440640.000000 1.000000 
--------------------------------------

-------------------Calculation Bee--------------------------------
first number second number is the qube one dimension and third the precision 
will count the digit from 878946545465764654864654864564867703804880946297186674930916261888
with string of it 878946545465764654864654864564867703804880946297186674930916261888
Main Number 878946545465764654864654864564867703804880946297186674930916261888 has number of digits 66
Using Power of 937521490668755099372400243128442

first 878946545465764654864654864564867703804880946297186674930916261888 
     doted 0
     makes 878946545465764654864654864564867703804880946297186674930916261888

second 937521490668755099372400243128442 
     doted 0 
     makes 937521490668755099372400243128442

result 937521490668755099372400243128442 
     doted 0.375 
     makes 937521490668755099372400243128442.375


for the integer string 937521490668755099372400243128442.000000
the numbers are 33
the retrievable integer digit is 2

entering with number of 2.375
recheck values of 937521490668755099372400243128442 and result of 878946545465764654864654864564867379286327287870459891774895685632 with intpart 878946545465764654864654864564867379286327287870459891774895685632

     ----> using 2.375 rst is 1.1875
     ----> using 1.1875 with intpart 1 and fract 0.1875
trying to retrieve digits 
will count the digit from 878946545465764654864654864564867866064157775510550066508926550016
with string of it 878946545465764654864654864564867866064157775510550066508926550016
digits retrieved 33
                     with combination da_rst 937521490668755099372400243128442.25 sq of rst 878946545465764654864654864564867866064157775510550066508926550016
                     with intpart 878946545465764654864654864564867866064157775510550066508926550016 and other part 0
                     the int string is 1.187500

     ----> using 1.1875 rst is 0.59375
     ----> using 0.59375 with intpart 0 and fract 0.59375
trying to retrieve digits 
will count the digit from 878946545465764654864654864564868515101265092364003632820967702528
with string of it 878946545465764654864654864564868515101265092364003632820967702528
digits retrieved 32
                     with combination da_rst 937521490668755099372400243128442.625 sq of rst 878946545465764654864654864564868515101265092364003632820967702528
                     with intpart 878946545465764654864654864564868515101265092364003632820967702528 and other part 0
                     the int string is 0.593750

     ----> using 0.59375 rst is 0.296875
     ----> using 0.296875 with intpart 0 and fract 0.296875
trying to retrieve digits 
will count the digit from 878946545465764654864654864564867866064157775510550066508926550016
with string of it 878946545465764654864654864564867866064157775510550066508926550016
digits retrieved 33
                     with combination da_rst 937521490668755099372400243128442.25 sq of rst 878946545465764654864654864564867866064157775510550066508926550016
                     with intpart 878946545465764654864654864564867866064157775510550066508926550016 and other part 0
                     the int string is 0.296875

     ----> using 0.296875 rst is 0.1484375
     ----> using 0.1484375 with intpart 0 and fract 0.1484375
trying to retrieve digits 
will count the digit from 878946545465764654864654864564867541545604117083823283352905973760
with string of it 878946545465764654864654864564867541545604117083823283352905973760
digits retrieved 33
                     with combination da_rst 937521490668755099372400243128442.125 sq of rst 878946545465764654864654864564867541545604117083823283352905973760
                     with intpart 878946545465764654864654864564867541545604117083823283352905973760 and other part 0
                     the int string is 0.148438

     ----> using 0.1484375 rst is 0.07421875
     ----> using 0.07421875 with intpart 0 and fract 0.07421875
trying to retrieve digits 
will count the digit from 878946545465764654864654864564867541545604117083823283352905973760
with string of it 878946545465764654864654864564867541545604117083823283352905973760
digits retrieved 33
                     with combination da_rst 937521490668755099372400243128442.125 sq of rst 878946545465764654864654864564867541545604117083823283352905973760
                     with intpart 878946545465764654864654864564867541545604117083823283352905973760 and other part 0
                     the int string is 0.074219

from new int t  of 2 ---> 1 with 1.375
     ----> using 1.375 rst is 0.6875
     ----> using 0.6875 with intpart 0 and fract 0.6875
trying to retrieve digits 
will count the digit from 878946545465764654864654864564868677360541921577367024398977990656
with string of it 878946545465764654864654864564868677360541921577367024398977990656
digits retrieved 32
                     with combination da_rst 937521490668755099372400243128442.75 sq of rst 878946545465764654864654864564868677360541921577367024398977990656
                     with intpart 878946545465764654864654864564868677360541921577367024398977990656 and other part 0
                     the int string is 0.687500

     ----> using 0.6875 rst is 0.34375
     ----> using 0.34375 with intpart 0 and fract 0.34375
trying to retrieve digits 
will count the digit from 878946545465764654864654864564868028323434604723913458086936838144
with string of it 878946545465764654864654864564868028323434604723913458086936838144
digits retrieved 32
                     with combination da_rst 937521490668755099372400243128442.375 sq of rst 878946545465764654864654864564868028323434604723913458086936838144
                     with intpart 878946545465764654864654864564868028323434604723913458086936838144 and other part 0
                     the int string is 0.343750

     ----> using 0.34375 rst is 0.171875
     ----> using 0.171875 with intpart 0 and fract 0.171875
trying to retrieve digits 
will count the digit from 878946545465764654864654864564867541545604117083823283352905973760
with string of it 878946545465764654864654864564867541545604117083823283352905973760
digits retrieved 33
                     with combination da_rst 937521490668755099372400243128442.125 sq of rst 878946545465764654864654864564867541545604117083823283352905973760
                     with intpart 878946545465764654864654864564867541545604117083823283352905973760 and other part 0
                     the int string is 0.171875

     ----> using 0.171875 rst is 0.0859375
     ----> using 0.0859375 with intpart 0 and fract 0.0859375
trying to retrieve digits 
will count the digit from 878946545465764654864654864564867541545604117083823283352905973760
with string of it 878946545465764654864654864564867541545604117083823283352905973760
digits retrieved 33
                     with combination da_rst 937521490668755099372400243128442.125 sq of rst 878946545465764654864654864564867541545604117083823283352905973760
                     with intpart 878946545465764654864654864564867541545604117083823283352905973760 and other part 0
                     the int string is 0.085938

from new int t  of 1 ---> 0 with 0.375
     ----> using 0.375 rst is 0.1875
     ----> using 0.1875 with intpart 0 and fract 0.1875
trying to retrieve digits 
will count the digit from 878946545465764654864654864564867866064157775510550066508926550016
with string of it 878946545465764654864654864564867866064157775510550066508926550016
digits retrieved 33
                     with combination da_rst 937521490668755099372400243128442.25 sq of rst 878946545465764654864654864564867866064157775510550066508926550016
                     with intpart 878946545465764654864654864564867866064157775510550066508926550016 and other part 0
                     the int string is 0.187500

     ----> using 0.1875 rst is 0.09375
     ----> using 0.09375 with intpart 0 and fract 0.09375
trying to retrieve digits 
will count the digit from 878946545465764654864654864564867541545604117083823283352905973760
with string of it 878946545465764654864654864564867541545604117083823283352905973760
digits retrieved 33
                     with combination da_rst 937521490668755099372400243128442.125 sq of rst 878946545465764654864654864564867541545604117083823283352905973760
                     with intpart 878946545465764654864654864564867541545604117083823283352905973760 and other part 0
                     the int string is 0.093750

--------------------------------------
Psifia,Power,Result of Power,Diafora from Main,Diairesi from Main
--------------------------------------
33 937521490668755099372400243128442.250000 878946545465764654864654864564867866064157775510550066508926550016.000000 162259276829213363391578010288128.000000 1.000000 
32 937521490668755099372400243128442.625000 878946545465764654864654864564868515101265092364003632820967702528.000000 811296384146066816957890051440640.000000 1.000000 
--------------------------------------

-------------------Calculation Bee--------------------------------
first number second number is the qube one dimension and third the precision 
will count the digit from 878946545465764654864654864564867703804880946297186674930916261888
with string of it 878946545465764654864654864564867703804880946297186674930916261888
Main Number 878946545465764654864654864564867703804880946297186674930916261888 has number of digits 66
Using Power of 937521490668755099372400243128443

first 878946545465764654864654864564867703804880946297186674930916261888 
     doted 0
     makes 878946545465764654864654864564867703804880946297186674930916261888

second 937521490668755099372400243128443 
     doted 0 
     makes 937521490668755099372400243128443

result 937521490668755099372400243128441 
     doted 0.375 
     makes 937521490668755099372400243128441.375


for the integer string 937521490668755099372400243128441.000000
the numbers are 33
the retrievable integer digit is 1

entering with number of 1.375
recheck values of 937521490668755099372400243128443 and result of 878946545465764654864654864564869164138372409217457199133008855040 with intpart 878946545465764654864654864564869164138372409217457199133008855040

recheck power 937521490668755099372400243128443 of result 878946545465764654864654864564869164138372409217457199133008855040
lowering second to value of 937521490668755099372400243128443

     ----> using 1.375 rst is 0.6875
     ----> using 0.6875 with intpart 0 and fract 0.6875
trying to retrieve digits 
will count the digit from 878946545465764654864654864564868677360541921577367024398977990656
with string of it 878946545465764654864654864564868677360541921577367024398977990656
digits retrieved 32
                     with combination da_rst 937521490668755099372400243128442.75 sq of rst 878946545465764654864654864564868677360541921577367024398977990656
                     with intpart 878946545465764654864654864564868677360541921577367024398977990656 and other part 0
                     the int string is 0.687500

     ----> using 0.6875 rst is 0.34375
     ----> using 0.34375 with intpart 0 and fract 0.34375
trying to retrieve digits 
will count the digit from 878946545465764654864654864564868028323434604723913458086936838144
with string of it 878946545465764654864654864564868028323434604723913458086936838144
digits retrieved 32
                     with combination da_rst 937521490668755099372400243128442.375 sq of rst 878946545465764654864654864564868028323434604723913458086936838144
                     with intpart 878946545465764654864654864564868028323434604723913458086936838144 and other part 0
                     the int string is 0.343750

     ----> using 0.34375 rst is 0.171875
     ----> using 0.171875 with intpart 0 and fract 0.171875
trying to retrieve digits 
will count the digit from 878946545465764654864654864564867541545604117083823283352905973760
with string of it 878946545465764654864654864564867541545604117083823283352905973760
digits retrieved 33
                     with combination da_rst 937521490668755099372400243128442.125 sq of rst 878946545465764654864654864564867541545604117083823283352905973760
                     with intpart 878946545465764654864654864564867541545604117083823283352905973760 and other part 0
                     the int string is 0.171875

     ----> using 0.171875 rst is 0.0859375
     ----> using 0.0859375 with intpart 0 and fract 0.0859375
trying to retrieve digits 
will count the digit from 878946545465764654864654864564867541545604117083823283352905973760
with string of it 878946545465764654864654864564867541545604117083823283352905973760
digits retrieved 33
                     with combination da_rst 937521490668755099372400243128442.125 sq of rst 878946545465764654864654864564867541545604117083823283352905973760
                     with intpart 878946545465764654864654864564867541545604117083823283352905973760 and other part 0
                     the int string is 0.085938

from new int t  of 1 ---> 0 with 0.375
     ----> using 0.375 rst is 0.1875
     ----> using 0.1875 with intpart 0 and fract 0.1875
trying to retrieve digits 
will count the digit from 878946545465764654864654864564867866064157775510550066508926550016
with string of it 878946545465764654864654864564867866064157775510550066508926550016
digits retrieved 33
                     with combination da_rst 937521490668755099372400243128442.25 sq of rst 878946545465764654864654864564867866064157775510550066508926550016
                     with intpart 878946545465764654864654864564867866064157775510550066508926550016 and other part 0
                     the int string is 0.187500

     ----> using 0.1875 rst is 0.09375
     ----> using 0.09375 with intpart 0 and fract 0.09375
trying to retrieve digits 
will count the digit from 878946545465764654864654864564867541545604117083823283352905973760
with string of it 878946545465764654864654864564867541545604117083823283352905973760
digits retrieved 33
                     with combination da_rst 937521490668755099372400243128442.125 sq of rst 878946545465764654864654864564867541545604117083823283352905973760
                     with intpart 878946545465764654864654864564867541545604117083823283352905973760 and other part 0
                     the int string is 0.093750

--------------------------------------
Psifia,Power,Result of Power,Diafora from Main,Diairesi from Main
--------------------------------------
32 937521490668755099372400243128442.750000 878946545465764654864654864564868677360541921577367024398977990656.000000 973555660975280180349468061728768.000000 1.000000 
--------------------------------------
