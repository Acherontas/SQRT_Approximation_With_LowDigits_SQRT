voyeristic behaviours and others have fun 
ur number ,ur precision , ur sleep time , ur log ,ur automation 0 no 1 auto , ur bee auto 0 for no log 1 for log 
the approximation while loops times to run if -1 infinite loop will occur until other equations gets equal 
with main number 878946545465764654864654864564867687325423143330204455473774592
will count the digit from 878946545465764654864654864564867687325423143330204455473774592
with string of it 878946545465764654864654864564867687325423143330204455473774592
63
 @ CDIS : with main number 878946545465764654864654864564867687325423143330204455473774592
Main cdi 312
Secondary cdi 6
Exiting Secondary cdi 6
with sqrt of math 29647032658695619530898332004547.6328125

9 25 |34 16| 29647032658695619530898332004547.6328125  and main 878946545465764654864654864564867687325423143330204455473774592
-------------------------------------------------------------------------
section_temp 0
section h inf
878946545465764654864654864564867687325423143330204455473774592 / 34 ::== 25851368984287195731313378369554932271439513459213136901963776
            ----->  | *2 51702737968574391462626756739109864542879026918426273803927552
            ----->  /2 12925684492143597865656689184777466135719756729606568450981888
                 --> 6462842246071798932828344592388733067859878364803284225490944
                 --> 3231421123035899466414172296194366533929939182401642112745472
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 26731731134470639915908248628870695328767840307397883697561600 5170273796857439146262675673910.9892578125
i insert 167073319590441499474426553930493540942899520116136285638230016 12925684492143597865656689184777.47265625
i insert 0 0
i insert 1670733195904414994744265539303125739161966260860304320626688 1292568449214359786565668918477.747314453125
i insert 10442082474402593717151659620654230797179952585999774495277056 3231421123035899466414172296194.3681640625
CDIS Start 
section_temp 0
section h inf
25851368984287195731313378369554932271439513459213136901963776 / 6 ::== 4308561497381199288552229728259155584896592124098901966848000
            ----->  | *2 8617122994762398577104459456518311169793184248197803933696000
            ----->  /2 2154280748690599644276114864129577792448296062049450983424000
                 --> 1077140374345299822138057432064788896224148031024725491712000
                 --> 538570187172649911069028716032394448112074015512362745856000
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 74254808706862888655300690635774902684168535925819593975660544 8617122994762398577104459456518.3095703125
i insert 464092554417893054095629316473593191293654920951583458312847360 21542807486905996442761148641295.7734375
i insert 0 0
i insert 4640925544178930540956293164733777402092176933685400147329024 2154280748690599644276114864129.577392578125
i insert 29005784651118315880976832279591493183276977597039424661618688 5385701871726499110690287160323.943359375
CDIS End 
section_temp 0
section h inf
878946545465764654864654864564867687325423143330204455473774592 / 16 ::== 54934159091610290929040929035304230457838946458137778467110912
            ----->  | *2 109868318183220581858081858070608460915677892916275556934221824
            ----->  /2 27467079545805145464520464517652115228919473229068889233555456
                 --> 13733539772902572732260232258826057614459736614534444616777728
                 --> 6866769886451286366130116129413028807229868307267222308388864
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 120710473404093983370273185214771690407697356524564426516332544 10986831818322058185808185807060.84765625
i insert 754440458775587396064207407592432989171836862905417608361672704 27467079545805145464520464517652.1171875
i insert 0 0
i insert 7544404587755873960642074075923230650481084782785276657270784 2746707954580514546452046451765.2119140625
i insert 47152528673474212254012962974527061823239803931588600522604544 6866769886451286366130116129413.029296875
section_temp 0
section h inf
54934159091610290929040929035304230457838946458137778467110912 / 312 ::== 176071022729520163234105541779821247003706417506682593607680
            ----->  | *2 352142045459040326468211083559642494007412835013365187215360
            ----->  /2 88035511364760081617052770889910623501853208753341296803840
                 --> 44017755682380040808526385444955311750926604376670648401920
                 --> 22008877841190020404263192722477655875463302188335324200960
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 12400402018007682381068497823672866038739693078813051468120064 3521420454590403264682110835596.4248046875
i insert 77502512612548014881678111397973017487421759135470912121339904 8803551136476008161705277088991.0625
i insert 0 0
i insert 775025126125480148816781113979554127421230817425815716757504 880355113647600816170527708899.106201171875
i insert 484390703828425093010488196237309341294847264823123844934926336 22008877841190020404263192722477.65625
removals 
reporing rt 3
section_temp 0
section h inf
25851368984287195731313378369554932271439513459213136901963776 - 176071022729520163234105541779821247003706417506682593607680 ::== 25675297961557675568079272827775110734293610334195452378873856
            ----->  | *2 51350595923115351136158545655550221468587220668390904757747712
            ----->  /2 12837648980778837784039636413887555367146805167097726189436928
                 --> 6418824490389418892019818206943777683573402583548863094718464
                 --> 3209412245194709446009909103471888841786701291774431547359232
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 26368837016590709210932861707276032209659198621231869383933952 5135059592311535113615854565555.0224609375
i insert 164805231353691932568330385670462376251562994843051228722626560 12837648980778837784039636413887.556640625
i insert 0 0
i insert 1648052313536919325683303856702826397372591504809386248765440 1283764898077883778403963641388.755615234375
i insert 10300326959605745785520649104399084166909906333801619101057024 3209412245194709446009909103471.88916015625
section_temp 0
section h inf
4308561497381199288552229728259155584896592124098901966848000 - 176071022729520163234105541779821247003706417506682593607680 ::== 4132490474651679125318124186479334047750688999081217443758080
            ----->  | *2 8264980949303358250636248372958668095501377998162434887516160
            ----->  /2 2066245237325839562659062093239667023875344499540608721879040
                 --> 1033122618662919781329531046619833511937672249770304360939520
                 --> 516561309331459890664765523309916755968836124885152180469760
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 68309910092347440925553146090889314227066360074216290287353856 8264980949303358250636248372958.666015625
i insert 426936938077171505784707163068099575971757353589596743834533888 20662452373258395626590620932396.6640625
i insert 0 0
i insert 4269369380771715057847071630678516017266080204959711504629760 2066245237325839562659062093239.66650390625
i insert 26683558629823219111544197691756223498234834599349796489658368 5165613093314598906647655233099.166015625
section_temp 0
section h inf
54934159091610290929040929035304230457838946458137778467110912 - 176071022729520163234105541779821247003706417506682593607680 ::== 54758088068880770765806823493524408920693043333120093944020992
            ----->  | *2 109516176137761541531613646987048817841386086666240187888041984
            ----->  /2 27379044034440385382903411746762204460346521666560046972010496
                 --> 13689522017220192691451705873381102230173260833280023486005248
                 --> 6844761008610096345725852936690551115086630416640011743002624
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 119937928358372104757932617800355971295441158641322879981977600 10951617613776154153161364698704.884765625
i insert 749612052239825654737078861252334284206541011973695680047742976 27379044034440385382903411746762.2109375
i insert 0 0
i insert 7496120522398256547370788612522248205965072415082679998873600 2737904403444038538290341174676.22119140625
i insert 46850753264989103421067428828264049430371643666196337644273664 6844761008610096345725852936690.552734375
ending sqti reporting the results 
reporting size of xl vector 34 64
entering amfidromi loop of xl vector  with first 
 of 5170273796857439146262675673910.9892578125 ^2 ::== 26731731134470639915908248628880925665252494689989650060148736 as intpart 26731731134470639915908248628870695328767840307397883697561600  diafora 852214814331294014948746615935997036562496717296496468144685056 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 12925684492143597865656689184777.47265625 ^2 ::== 167073319590441499474426553930505761886967345390210089792569344 as intpart 167073319590441499474426553930493540942899520116136285638230016  diafora 711873225875323155390228310634374185996604880346236966607519744 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 1292568449214359786565668918477.747314453125 ^2 ::== 1670733195904414994744265539305057854078280918124353128759296 as intpart 1670733195904414994744265539303125739161966260860304320626688  diafora 877275812269860239869910599025564588820942041347710198933880832 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 3231421123035899466414172296194.3681640625 ^2 ::== 10442082474402593717151659620656610117935459086888130612035584 as intpart 10442082474402593717151659620654230797179952585999774495277056  diafora 868504462991362061147503204944213497380264487161753752649596928 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 8617122994762398577104459456518.3095703125 ^2 ::== 74254808706862888655300690635780240681617934485564958999314432 as intpart 74254808706862888655300690635774902684168535925819593975660544  diafora 804691736758901766209354173929092745027173350272216064726138880 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 21542807486905996442761148641295.7734375 ^2 ::== 464092554417893054095629316473626467121910911973372746771988480 as intpart 464092554417893054095629316473593191293654920951583458312847360  diafora 414853991047871600769025548091274496031768222378620997160927232 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 2154280748690599644276114864129.577392578125 ^2 ::== 4640925544178930540956293164736265042601120905347809937457152 as intpart 4640925544178930540956293164733777402092176933685400147329024  diafora 874305619921585724323698571400133882688650102118153007545712640 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 5385701871726499110690287160323.943359375 ^2 ::== 29005784651118315880976832279601654195119431998335796673249280 as intpart 29005784651118315880976832279591493183276977597039424661618688  diafora 849940760814646338983678032285276218900946951440770528794640384 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 10986831818322058185808185807060.84765625 ^2 ::== 120710473404093983370273185214790328832928837209983307730649088 as intpart 120710473404093983370273185214771690407697356524564426516332544  diafora 758236072061670671494381679350096016724766415371724427343429632 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 27467079545805145464520464517652.1171875 ^2 ::== 754440458775587396064207407592439406653000518316762685421649920 as intpart 754440458775587396064207407592432989171836862905417608361672704  diafora 124506086690177258800447456972434698153586280424786847112101888 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 2746707954580514546452046451765.2119140625 ^2 ::== 7544404587755873960642074075924395552058052325623956733165568 as intpart 7544404587755873960642074075923230650481084782785276657270784  diafora 871402140878008780904012790488944378684719583568461860171677696 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 6866769886451286366130116129413.029296875 ^2 ::== 47152528673474212254012962974527462915812532394797667838853120 as intpart 47152528673474212254012962974527061823239803931588600522604544  diafora 831794016792290442610641901590340670068024753672305751319642112 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 3521420454590403264682110835596.4248046875 ^2 ::== 12400402018007682381068497823675858139814645842937482651369472 as intpart 12400402018007682381068497823672866038739693078813051468120064  diafora 866546143447756972483586366741194756913801407411617109251194880 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 8803551136476008161705277088991.0625 ^2 ::== 77502512612548014881678111397974116778176644553155022543650816 as intpart 77502512612548014881678111397973017487421759135470912121339904  diafora 801444032853216639982976753166894640127440441345606945773453312 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 880355113647600816170527708899.106201171875 ^2 ::== 775025126125480148816781113979741133738415365183592665710592 as intpart 775025126125480148816781113979554127421230817425815716757504  diafora 878171520339639174715838083450888119271176470552250547141869568 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 22008877841190020404263192722477.65625 ^2 ::== 484390703828425093010488196237338259574164971306345488476798976 as intpart 484390703828425093010488196237309341294847264823123844934926336  diafora 394555841637339561854166668327558346030575878507080610538848256 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 5135059592311535113615854565555.0224609375 ^2 ::== 26368837016590709210932861707276264942386584272723550419288064 as intpart 26368837016590709210932861707276032209659198621231869383933952  diafora 852577708449173945653722002857591694729845201841141382861815808 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 12837648980778837784039636413887.556640625 ^2 ::== 164805231353691932568330385670476676934896819555986863405662208 as intpart 164805231353691932568330385670462376251562994843051228722626560  diafora 714141314112072722296324478894405330880900777053237625137135616 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 1283764898077883778403963641388.755615234375 ^2 ::== 1648052313536919325683303856704766558899161517045221901205504 as intpart 1648052313536919325683303856702826397372591504809386248765440  diafora 877298493152227735538971560708164878878181121463409055262310400 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 3209412245194709446009909103471.88916015625 ^2 ::== 10300326959605745785520649104404792308431051222249178962853888 as intpart 10300326959605745785520649104399084166909906333801619101057024  diafora 868646218506158909079134215460468558592671822722712940004245504 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 8264980949303358250636248372958.666015625 ^2 ::== 68309910092347440925553146090900326941655842817141792896450560 as intpart 68309910092347440925553146090889314227066360074216290287353856  diafora 810636635373417213939101718473978353291316154689903766800433152 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 20662452373258395626590620932396.6640625 ^2 ::== 426936938077171505784707163068126988915987289050404110041350144 as intpart 426936938077171505784707163068099575971757353589596743834533888  diafora 452009607388593149079947701496768111353665789740607711639240704 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 2066245237325839562659062093239.66650390625 ^2 ::== 4269369380771715057847071630681270433853490176071362056028160 as intpart 4269369380771715057847071630678516017266080204959711504629760  diafora 874677176084992939806807792934189153976996513129920895381405696 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 5165613093314598906647655233099.166015625 ^2 ::== 26683558629823219111544197691757936807249205565650256877584384 as intpart 26683558629823219111544197691756223498234834599349796489658368  diafora 852262986835941435753110666873111404406066423032601463826153472 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 10951617613776154153161364698704.884765625 ^2 ::== 119937928358372104757932617800375342581175896271864501477834752 as intpart 119937928358372104757932617800355971295441158641322879981977600  diafora 759008617107392550106722246764511676415900727556712778719821824 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 27379044034440385382903411746762.2109375 ^2 ::== 749612052239825654737078861252345851518268094566984337464492032 as intpart 749612052239825654737078861252334284206541011973695680047742976  diafora 129334493225939000127576003312533403118882131356508775426031616 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 2737904403444038538290341174676.22119140625 ^2 ::== 7496120522398256547370788612523458911323493516991531342364672 as intpart 7496120522398256547370788612522248205965072415082679998873600  diafora 871450424943366398317284075952345426740057678061319026483658752 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 6844761008610096345725852936690.552734375 ^2 ::== 46850753264989103421067428828271615719891755910436521091530752 as intpart 46850753264989103421067428828264049430371643666196337644273664  diafora 832095792200775551443587435736603677509132756796176914601476096 from 878946545465764654864654864564867687325423143330204455473774592
the size of xpl vector is 34 64
 of 27467079545805145464520464517652.1171875 ^2 ::== 754440458775587396064207407592439406653000518316762685421649920 as intpart 754440458775587396064207407592432989171836862905417608361672704  diafora 124506086690177258800447456972434698153586280424786847112101888 from 878946545465764654864654864564867687325423143330204455473774592

-------------------------------------------------------------------------

9 |25| 34 |16| 29647032658695619530898332004547.6328125  and main 878946545465764654864654864564867687325423143330204455473774592
-------------------------------------------------------------------------
section_temp 0
section h inf
878946545465764654864654864564867687325423143330204455473774592 / 25 ::== 35157861818630586194586194582594707096876113161886490251231232
            ----->  | *2 70315723637261172389172389165189414193752226323772980502462464
            ----->  /2 17578930909315293097293097291297353548438056580943245125615616
                 --> 8789465454657646548646548645648676774219028290471622562807808
                 --> 4394732727328823274323274322824338387109514145235811281403904
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 49443009906316895588463896663964862487345885057888891372044288 7031572363726117238917238916518.9423828125
i insert 309018811914480597427899354149850685733102562645335442945212416 17578930909315293097293097291297.35546875
i insert 0 0
i insert 3090188119144805974278993541496046030603332576127698954354688 1757893090931529309729309729129.735595703125
i insert 19313675744655037339243709634363471752689217900725794137702400 4394732727328823274323274322824.3388671875
CDIS Start 
section_temp 0
section h inf
35157861818630586194586194582594707096876113161886490251231232 / 6 ::== 5859643636438431032431032430432450976489345646084369225351168
            ----->  | *2 11719287272876862064862064860864901952978691292168738450702336
            ----->  /2 2929821818219215516215516215216225488244672823042184612675584
                 --> 1464910909109607758107758107608112744122336411521092306337792
                 --> 732455454554803879053879053804056372061168205760546153168896
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 137341694184213598856844157399918008147762908249993826055225344 11719287272876862064862064860864.900390625
i insert 858385588651334992855275983749604798700518973499057658698661888 29298218182192155162155162152162.25
i insert 0 0
i insert 8583855886513349928552759837494875509235181765624614128451584 2929821818219215516215516215216.22509765625
i insert 53649099290708437053454748984342971313749866392463700853260288 7324554545548038790538790538040.5625
CDIS End 
section_temp 0
section h inf
878946545465764654864654864564867687325423143330204455473774592 / 16 ::== 54934159091610290929040929035304230457838946458137778467110912
            ----->  | *2 109868318183220581858081858070608460915677892916275556934221824
            ----->  /2 27467079545805145464520464517652115228919473229068889233555456
                 --> 13733539772902572732260232258826057614459736614534444616777728
                 --> 6866769886451286366130116129413028807229868307267222308388864
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 120710473404093983370273185214771690407697356524564426516332544 10986831818322058185808185807060.84765625
i insert 754440458775587396064207407592432989171836862905417608361672704 27467079545805145464520464517652.1171875
i insert 0 0
i insert 7544404587755873960642074075923230650481084782785276657270784 2746707954580514546452046451765.2119140625
i insert 47152528673474212254012962974527061823239803931588600522604544 6866769886451286366130116129413.029296875
section_temp 0
section h inf
54934159091610290929040929035304230457838946458137778467110912 / 312 ::== 176071022729520163234105541779821247003706417506682593607680
            ----->  | *2 352142045459040326468211083559642494007412835013365187215360
            ----->  /2 88035511364760081617052770889910623501853208753341296803840
                 --> 44017755682380040808526385444955311750926604376670648401920
                 --> 22008877841190020404263192722477655875463302188335324200960
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 12400402018007682381068497823672866038739693078813051468120064 3521420454590403264682110835596.4248046875
i insert 77502512612548014881678111397973017487421759135470912121339904 8803551136476008161705277088991.0625
i insert 0 0
i insert 775025126125480148816781113979554127421230817425815716757504 880355113647600816170527708899.106201171875
i insert 484390703828425093010488196237309341294847264823123844934926336 22008877841190020404263192722477.65625
removals 
reporing rt 3
section_temp 0
section h inf
35157861818630586194586194582594707096876113161886490251231232 - 176071022729520163234105541779821247003706417506682593607680 ::== 34981790795901066031352089040814885559730210036868805728141312
            ----->  | *2 69963581591802132062704178081629771119460420073737611456282624
            ----->  /2 17490895397950533015676044520407442779865105018434402864070656
                 --> 8745447698975266507838022260203721389932552509217201432035328
                 --> 4372723849487633253919011130101860694966276254608600716017664
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 48949027491527541553131651984660476101411548987673927961542656 6996358159180213206270417808162.9794921875
i insert 305931421822047134707072824904197939053082433724578248664285184 17490895397950533015676044520407.44921875
i insert 0 0
i insert 3059314218220471347070728249039530547062711569401188035067904 1749089539795053301567604452040.744873046875
i insert 19120713863877945919192051556505812584489518163089724981379072 4372723849487633253919011130101.8623046875
section_temp 0
section h inf
5859643636438431032431032430432450976489345646084369225351168 - 176071022729520163234105541779821247003706417506682593607680 ::== 5683572613708910869196926888652629439343442521066684702261248
            ----->  | *2 11367145227417821738393853777305258878686885042133369404522496
            ----->  /2 2841786306854455434598463444326314719671721260533342351130624
                 --> 1420893153427227717299231722163157359835860630266671175565312
                 --> 710446576713613858649615861081578679917930315133335587782656
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 129211990621207762287815650226731368689359668801316134869532672 11367145227417821738393853777305.25390625
i insert 807574941382548514298847813917099487315320236622379726019756032 28417863068544554345984634443263.1328125
i insert 0 0
i insert 8075749413825485142988478139169289387919879683526674234736640 2841786306854455434598463444326.3134765625
i insert 50473433836409282143677988369808056817589189093971301618417664 7104465767136138586496158610815.783203125
section_temp 0
section h inf
54934159091610290929040929035304230457838946458137778467110912 - 176071022729520163234105541779821247003706417506682593607680 ::== 54758088068880770765806823493524408920693043333120093944020992
            ----->  | *2 109516176137761541531613646987048817841386086666240187888041984
            ----->  /2 27379044034440385382903411746762204460346521666560046972010496
                 --> 13689522017220192691451705873381102230173260833280023486005248
                 --> 6844761008610096345725852936690551115086630416640011743002624
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 119937928358372104757932617800355971295441158641322879981977600 10951617613776154153161364698704.884765625
i insert 749612052239825654737078861252334284206541011973695680047742976 27379044034440385382903411746762.2109375
i insert 0 0
i insert 7496120522398256547370788612522248205965072415082679998873600 2737904403444038538290341174676.22119140625
i insert 46850753264989103421067428828264049430371643666196337644273664 6844761008610096345725852936690.552734375
ending sqti reporting the results 
reporting size of xl vector 34 64
entering amfidromi loop of xl vector  with first 
 of 7031572363726117238917238916518.9423828125 ^2 ::== 49443009906316895588463896663978113397526395768351411597737984 as intpart 49443009906316895588463896663964862487345885057888891372044288  diafora 829503535559447759276190967900902904066239772536653157645680640 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 17578930909315293097293097291297.35546875 ^2 ::== 309018811914480597427899354149863203782779816410675222889365504 as intpart 309018811914480597427899354149850685733102562645335442945212416  diafora 569927733551284057436755510415017001592320580684869012528562176 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 1757893090931529309729309729129.735595703125 ^2 ::== 3090188119144805974278993541498632087345399735521963224858624 as intpart 3090188119144805974278993541496046030603332576127698954354688  diafora 875856357346619848890375871023371562066657296489739162975469568 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 4394732727328823274323274322824.3388671875 ^2 ::== 19313675744655037339243709634366450236423738525667201430585344 as intpart 19313675744655037339243709634363471752689217900725794137702400  diafora 859632869721109617525411154930504188338053061151112613555339264 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 11719287272876862064862064860864.900390625 ^2 ::== 137341694184213598856844157399939122453072959695962505517989888 as intpart 137341694184213598856844157399918008147762908249993826055225344  diafora 741604851281551056007810707164949718791741492212379426190524416 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 29298218182192155162155162152162.25 ^2 ::== 858385588651334992855275983749619376682421598137174870785523712 as intpart 858385588651334992855275983749604798700518973499057658698661888  diafora 20560956814429662009378880815262888624904169831146796775112704 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 2929821818219215516215516215216.22509765625 ^2 ::== 8583855886513349928552759837496195153317059980997656594874368 as intpart 8583855886513349928552759837494875509235181765624614128451584  diafora 870362689579251304936102104727372834099108668701424789529559040 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 7324554545548038790538790538040.5625 ^2 ::== 53649099290708437053454748984351211042651349883573429424095232 as intpart 53649099290708437053454748984342971313749866392463700853260288  diafora 825297446175056217811200115580524775432795162635993949778477056 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 10986831818322058185808185807060.84765625 ^2 ::== 120710473404093983370273185214790328832928837209983307730649088 as intpart 120710473404093983370273185214771690407697356524564426516332544  diafora 758236072061670671494381679350096016724766415371724427343429632 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 27467079545805145464520464517652.1171875 ^2 ::== 754440458775587396064207407592439406653000518316762685421649920 as intpart 754440458775587396064207407592432989171836862905417608361672704  diafora 124506086690177258800447456972434698153586280424786847112101888 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 2746707954580514546452046451765.2119140625 ^2 ::== 7544404587755873960642074075924395552058052325623956733165568 as intpart 7544404587755873960642074075923230650481084782785276657270784  diafora 871402140878008780904012790488944378684719583568461860171677696 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 6866769886451286366130116129413.029296875 ^2 ::== 47152528673474212254012962974527462915812532394797667838853120 as intpart 47152528673474212254012962974527061823239803931588600522604544  diafora 831794016792290442610641901590340670068024753672305751319642112 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 3521420454590403264682110835596.4248046875 ^2 ::== 12400402018007682381068497823675858139814645842937482651369472 as intpart 12400402018007682381068497823672866038739693078813051468120064  diafora 866546143447756972483586366741194756913801407411617109251194880 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 8803551136476008161705277088991.0625 ^2 ::== 77502512612548014881678111397974116778176644553155022543650816 as intpart 77502512612548014881678111397973017487421759135470912121339904  diafora 801444032853216639982976753166894640127440441345606945773453312 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 880355113647600816170527708899.106201171875 ^2 ::== 775025126125480148816781113979741133738415365183592665710592 as intpart 775025126125480148816781113979554127421230817425815716757504  diafora 878171520339639174715838083450888119271176470552250547141869568 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 22008877841190020404263192722477.65625 ^2 ::== 484390703828425093010488196237338259574164971306345488476798976 as intpart 484390703828425093010488196237309341294847264823123844934926336  diafora 394555841637339561854166668327558346030575878507080610538848256 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 6996358159180213206270417808162.9794921875 ^2 ::== 48949027491527541553131651984674182573526516718077611064950784 as intpart 48949027491527541553131651984660476101411548987673927961542656  diafora 829997517974237113311523212580207191416970965776446129126244352 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 17490895397950533015676044520407.44921875 ^2 ::== 305931421822047134707072824904213665843341515195590567138426880 as intpart 305931421822047134707072824904197939053082433724578248664285184  diafora 573015123643717520157582039660669787886421966737795003581464576 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 1749089539795053301567604452040.744873046875 ^2 ::== 3059314218220471347070728249042136410845407294879850691559424 as intpart 3059314218220471347070728249039530547062711569401188035067904  diafora 875887231247544183517584136315828208771842081746774813201924096 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 4372723849487633253919011130101.8623046875 ^2 ::== 19120713863877945919192051556513354115208844699724410446151680 as intpart 19120713863877945919192051556505812584489518163089724981379072  diafora 859825831601886708945462813008361874740933625167114730492395520 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 11367145227417821738393853777305.25390625 ^2 ::== 129211990621207762287815650226737132538182581531876065191919616 as intpart 129211990621207762287815650226731368689359668801316134869532672  diafora 749734554844556892576839214338136358250144731661057117376217088 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 28417863068544554345984634443263.1328125 ^2 ::== 807574941382548514298847813917107013990759091734451112695037952 as intpart 807574941382548514298847813917099487315320236622379726019756032  diafora 71371604083216140565807050647768200010102906707824729454018560 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 2841786306854455434598463444326.3134765625 ^2 ::== 8075749413825485142988478139171070783636411345742254074494976 as intpart 8075749413825485142988478139169289387919879683526674234736640  diafora 870870796051939169721666386425698444979224756491128227405758464 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 7104465767136138586496158610815.783203125 ^2 ::== 50473433836409282143677988369819188374422443233403194543439872 as intpart 50473433836409282143677988369808056817589189093971301618417664  diafora 828473111629355372720976876195059605749033168528627655872872448 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 10951617613776154153161364698704.884765625 ^2 ::== 119937928358372104757932617800375342581175896271864501477834752 as intpart 119937928358372104757932617800355971295441158641322879981977600  diafora 759008617107392550106722246764511676415900727556712778719821824 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 27379044034440385382903411746762.2109375 ^2 ::== 749612052239825654737078861252345851518268094566984337464492032 as intpart 749612052239825654737078861252334284206541011973695680047742976  diafora 129334493225939000127576003312533403118882131356508775426031616 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 2737904403444038538290341174676.22119140625 ^2 ::== 7496120522398256547370788612523458911323493516991531342364672 as intpart 7496120522398256547370788612522248205965072415082679998873600  diafora 871450424943366398317284075952345426740057678061319026483658752 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 6844761008610096345725852936690.552734375 ^2 ::== 46850753264989103421067428828271615719891755910436521091530752 as intpart 46850753264989103421067428828264049430371643666196337644273664  diafora 832095792200775551443587435736603677509132756796176914601476096 from 878946545465764654864654864564867687325423143330204455473774592
the size of xpl vector is 34 64
 of 29298218182192155162155162152162.25 ^2 ::== 858385588651334992855275983749619376682421598137174870785523712 as intpart 858385588651334992855275983749604798700518973499057658698661888  diafora 20560956814429662009378880815262888624904169831146796775112704 from 878946545465764654864654864564867687325423143330204455473774592

-------------------------------------------------------------------------

9 26 |35 17| 29647032658695619530898332004547.6328125  and main 878946545465764654864654864564867687325423143330204455473774592
-------------------------------------------------------------------------
section_temp 0
section h inf
878946545465764654864654864564867687325423143330204455473774592 / 35 ::== 25112758441878990138990138987567647218945772666844478808522752
            ----->  | *2 50225516883757980277980277975135294437891545333688957617045504
            ----->  /2 12556379220939495069495069493783823609472886333422239404261376
                 --> 6278189610469747534747534746891911804736443166711119702130688
                 --> 3139094805234873767373767373445955902368221583355559851065344
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 25226025462406579381869335032636568012490553505574421595684864 5022551688375798027798027797513.5283203125
i insert 157662659140041121136683343953991099076244195309686787395289088 12556379220939495069495069493783.8203125
i insert 0 0
i insert 1576626591400411211366833439539157710438236995626493131358208 1255637922093949506949506949378.382080078125
i insert 9853916196252570071042708997119735806295859905669982842781696 3139094805234873767373767373445.955078125
CDIS Start 
section_temp 0
section h inf
25112758441878990138990138987567647218945772666844478808522752 / 6 ::== 4185459740313165023165023164594607663500955563577367318233088
            ----->  | *2 8370919480626330046330046329189215327001911127154734636466176
            ----->  /2 2092729870156582511582511582297303831750477781788683659116544
                 --> 1046364935078291255791255791148651915875238890894341829558272
                 --> 523182467539145627895627895574325957937619445447170914779136
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 70072292951129387171859263979557180773334536092086828493963264 8370919480626330046330046329189.2138671875
i insert 437951830944558669824120399872253315875285244926751772076146688 20927298701565825115825115822973.03515625
i insert 0 0
i insert 4379518309445586698241203998721277739000212359423137020903424 2092729870156582511582511582297.303466796875
i insert 27371989434034916864007524992013217712842357084781398804398080 5231824675391456278956278955743.2587890625
CDIS End 
section_temp 0
section h inf
878946545465764654864654864564867687325423143330204455473774592 / 17 ::== 51702737968574391462626756739109864542879026918426273803927552
            ----->  | *2 103405475937148782925253513478219729085758053836852547607855104
            ----->  /2 25851368984287195731313378369554932271439513459213136901963776
                 --> 12925684492143597865656689184777466135719756729606568450981888
                 --> 6462842246071798932828344592388733067859878364803284225490944
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 106926924537882559663632994515503459865487584221703449761284096 10340547593714878292525351347821.978515625
i insert 668293278361765997897706215721974163771598080464545142552920064 25851368984287195731313378369554.9453125
i insert 0 0
i insert 6682932783617659978977062157217673832191960076849470924390400 2585136898428719573131337836955.49462890625
i insert 41768329897610374868606638482616923188719810343999097981108224 6462842246071798932828344592388.736328125
section_temp 0
section h inf
51702737968574391462626756739109864542879026918426273803927552 / 312 ::== 165713903745430741867393451086890597931190996016568014471168
            ----->  | *2 331427807490861483734786902173781195862381992033136028942336
            ----->  /2 82856951872715370933696725543445298965595498008284007235584
                 --> 41428475936357685466848362771722649482797749004142003617792
                 --> 20714237968178842733424181385861324741398874502071001808896
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 10984439157819953943091818141382231656427372423106741779038208 3314278074908614837347869021737.8125
i insert 68652744736374712144323863383663803522264859330921629459939328 8285695187271537093369672554344.53125
i insert 0 0
i insert 686527447363747121443238633835975155469812450733416060551168 828569518727153709336967255434.453125
i insert 429079654602341950902024146147940191011989781071497759022907392 20714237968178842733424181385861.328125
removals 
reporing rt 3
section_temp 0
section h inf
25112758441878990138990138987567647218945772666844478808522752 - 165713903745430741867393451086890597931190996016568014471168 ::== 24947044538133559397122745536480756214815506280312508092776448
            ----->  | *2 49894089076267118794245491072961512429631012560625016185552896
            ----->  /2 12473522269066779698561372768240378107407753140156254046388224
                 --> 6236761134533389849280686384120189053703876570078127023194112
                 --> 3118380567266694924640343192060094526851938285039063511597056
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 24894201247504778316039878480614971642946995277167796693237760 4989408907626711879424549107296.1513671875
i insert 155588757796904864475249240503843572768418720482298729332736000 12473522269066779698561372768240.37890625
i insert 0 0
i insert 1555887577969048644752492405038435727684187204822987293327360 1247352226906677969856137276824.037841796875
i insert 9724297362306554029703077531490223298026170030143670583296000 3118380567266694924640343192060.0947265625
section_temp 0
section h inf
4185459740313165023165023164594607663500955563577367318233088 - 165713903745430741867393451086890597931190996016568014471168 ::== 4019745836567734281297629713507717278340708819735534052048896
            ----->  | *2 8039491673135468562595259427015434556681417639471068104097792
            ----->  /2 2009872918283867140648814856753858639170354409867767026024448
                 --> 1004936459141933570324407428376929319585177204933883513012224
                 --> 502468229570966785162203714188464659792588602466941756506112
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 64633426362414535690894086596975312463779708258259020342624256 8039491673135468562595259427015.435546875
i insert 403958914765090848068088041231115794665460778335980489927557120 20098729182838671406488148567538.587890625
i insert 0 0
i insert 4039589147650908480680880412307942026020552222481671954366464 2009872918283867140648814856753.85888671875
i insert 25247432172818178004255502576939713605911878572843239974371328 5024682295709667851622037141884.64697265625
section_temp 0
section h inf
51702737968574391462626756739109864542879026918426273803927552 - 165713903745430741867393451086890597931190996016568014471168 ::== 51537024064828960720759363288022976014628839102654852886429696
            ----->  | *2 103074048129657921441518726576045952029257678205309705772859392
            ----->  /2 25768512032414480360379681644011488007314419551327426443214848
                 --> 12884256016207240180189840822005744003657209775663713221607424
                 --> 6442128008103620090094920411002872001828604887831856610803712
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 106242593978350376532978374245302857990038475554216698315800576 10307404812965792144151872657604.59375
i insert 664016212364689853331114839033194430068016944014585562392428544 25768512032414480360379681644011.484375
i insert 0 0
i insert 6640162123646898533311148390331428624377404722138543644737536 2576851203241448036037968164401.1484375
i insert 41501013272793115833194677439564990995184475893246284884082688 6442128008103620090094920411002.87109375
ending sqti reporting the results 
reporting size of xl vector 34 64
entering amfidromi loop of xl vector  with first 
 of 5022551688375798027798027797513.5283203125 ^2 ::== 25226025462406579381869335032641873823498930645432639242108928 as intpart 25226025462406579381869335032636568012490553505574421595684864  diafora 853720520003358075482785529532231193589334946947446527825543168 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 12556379220939495069495069493783.8203125 ^2 ::== 157662659140041121136683343954011698398497904037461108822376448 as intpart 157662659140041121136683343953991099076244195309686787395289088  diafora 721283886325723533727971520610876608056219576586602066464473088 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 1255637922093949506949506949378.382080078125 ^2 ::== 1576626591400411211366833439540117113968683165339539952631808 as intpart 1576626591400411211366833439539157710438236995626493131358208  diafora 877369918874364243653288031125328560099258373737067231733350400 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 3139094805234873767373767373445.955078125 ^2 ::== 9853916196252570071042708997125731149906119002341319301398528 as intpart 9853916196252570071042708997119735806295859905669982842781696  diafora 869092629269512084793612155567747983705568304844421620008222720 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 8370919480626330046330046329189.2138671875 ^2 ::== 70072292951129387171859263979560765847688306553362936357715968 as intpart 70072292951129387171859263979557180773334536092086828493963264  diafora 808874252514635267692795600585310506552088607238117626979811328 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 20927298701565825115825115822973.03515625 ^2 ::== 437951830944558669824120399872254821210373015949166049411203072 as intpart 437951830944558669824120399872253315875285244926751772076146688  diafora 440994714521205985040534464692614371450137898403452683397627904 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 2092729870156582511582511582297.303466796875 ^2 ::== 4379518309445586698241203998722547865480519159585183522357248 as intpart 4379518309445586698241203998721277739000212359423137020903424  diafora 874567027156319068166413660566146428155523520251485441939734528 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 5231824675391456278956278955743.2587890625 ^2 ::== 27371989434034916864007524992015926325648313496822878088200192 as intpart 27371989434034916864007524992013217712842357084781398804398080  diafora 851574556031729738000647339572854548840743300509760650213326848 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 10340547593714878292525351347821.978515625 ^2 ::== 106926924537882559663632994515523702661009978759958600240594944 as intpart 106926924537882559663632994515503459865487584221703449761284096  diafora 772019620927882095201021870049364247266976187674585404098478080 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 25851368984287195731313378369554.9453125 ^2 ::== 668293278361765997897706215722023047547869381560840359170277376 as intpart 668293278361765997897706215721974163771598080464545142552920064  diafora 210653267103998656966948648842893523553825062865659312920854528 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 2585136898428719573131337836955.49462890625 ^2 ::== 6682932783617659978977062157220231416313123672497412515037184 as intpart 6682932783617659978977062157217673832191960076849470924390400  diafora 872263612682146994885677802407650064248772793953946255413477376 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 6462842246071798932828344592388.736328125 ^2 ::== 41768329897610374868606638482626440471741836347552522448142336 as intpart 41768329897610374868606638482616923188719810343999097981108224  diafora 837178215568154279996048226082250769088463490127726457089163264 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 3314278074908614837347869021737.8125 ^2 ::== 10984439157819953943091818141387616695598263827302552969412608 as intpart 10984439157819953943091818141382231656427372423106741779038208  diafora 867962106307944700921563046423485533659218245886055032339562496 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 8285695187271537093369672554344.53125 ^2 ::== 68652744736374712144323863383672607751824256955436712031420416 as intpart 68652744736374712144323863383663803522264859330921629459939328  diafora 810293800729389942720331001181203873899637969716240626820841472 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 828569518727153709336967255434.453125 ^2 ::== 686527447363747121443238633836726043474891489206409560588288 as intpart 686527447363747121443238633835975155469812450733416060551168  diafora 878260018018400907743211625931031698862097908561633084247638016 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 20714237968178842733424181385861.328125 ^2 ::== 429079654602341950902024146147953818255942234537563848582365184 as intpart 429079654602341950902024146147940191011989781071497759022907392  diafora 449866890863422703962630718416927496313433362258706696450867200 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 4989408907626711879424549107296.1513671875 ^2 ::== 24894201247504778316039878480616484405675002011863723423039488 as intpart 24894201247504778316039878480614971642946995277167796693237760  diafora 854052344218259876548614986084252715682476148053036658780536832 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 12473522269066779698561372768240.37890625 ^2 ::== 155588757796904864475249240503853040533839175070641157834801152 as intpart 155588757796904864475249240503843572768418720482298729332736000  diafora 723357787668859790389405624061024074942923165715736929369063424 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 1247352226906677969856137276824.037841796875 ^2 ::== 1555887577969048644752492405038530275354687625741482713939968 as intpart 1555887577969048644752492405038435727684187204822987293327360  diafora 877390657887795606219902372159829320922381156106676862531403776 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 3118380567266694924640343192060.0947265625 ^2 ::== 9724297362306554029703077531490815033364948441915072364675072 as intpart 9724297362306554029703077531490223298026170030143670583296000  diafora 869222248103458100834951787033377501165598151861469031864205312 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 8039491673135468562595259427015.435546875 ^2 ::== 64633426362414535690894086596982314252641906369093849789235200 as intpart 64633426362414535690894086596975312463779708258259020342624256  diafora 814313119103350119173760777967892345151082492222818837552168960 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 20098729182838671406488148567538.587890625 ^2 ::== 403958914765090848068088041231139444271971286240752162796732416 as intpart 403958914765090848068088041231115794665460778335980489927557120  diafora 474987630700673806796566823333751932274043622126392762318192640 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 2009872918283867140648814856753.85888671875 ^2 ::== 4039589147650908480680880412311394640790119148068365611827200 as intpart 4039589147650908480680880412307942026020552222481671954366464  diafora 874906956318113746383973984152559684640340666124089313462321152 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 5024682295709667851622037141884.64697265625 ^2 ::== 25247432172818178004255502576946215266998205390047010174795776 as intpart 25247432172818178004255502576939713605911878572843239974371328  diafora 853699113292946476860399361987928052947673779021698809043353600 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 10307404812965792144151872657604.59375 ^2 ::== 106242593978350376532978374245315098741146929394374900856127488 as intpart 106242593978350376532978374245302857990038475554216698315800576  diafora 772703951487414278331676490319564868949465924908156553929949184 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 25768512032414480360379681644011.484375 ^2 ::== 664016212364689853331114839033219386939208937280927528736784384 as intpart 664016212364689853331114839033194430068016944014585562392428544  diafora 214930333101074801533540025531673257257406199315618893081346048 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 2576851203241448036037968164401.1484375 ^2 ::== 6640162123646898533311148390332193671321683087148431303507968 as intpart 6640162123646898533311148390331428624377404722138543644737536  diafora 872306383342117756331343716174536201755803931480573266469322752 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 6442128008103620090094920411002.87109375 ^2 ::== 41501013272793115833194677439576211683700558580057970546049024 as intpart 41501013272793115833194677439564990995184475893246284884082688  diafora 837445532192971539031460187125302676523198038870873772203704320 from 878946545465764654864654864564867687325423143330204455473774592
the size of xpl vector is 34 64
 of 25851368984287195731313378369554.9453125 ^2 ::== 668293278361765997897706215722023047547869381560840359170277376 as intpart 668293278361765997897706215721974163771598080464545142552920064  diafora 210653267103998656966948648842893523553825062865659312920854528 from 878946545465764654864654864564867687325423143330204455473774592

-------------------------------------------------------------------------

9 |26| 35 |17| 29647032658695619530898332004547.6328125  and main 878946545465764654864654864564867687325423143330204455473774592
-------------------------------------------------------------------------
section_temp 0
section h inf
878946545465764654864654864564867687325423143330204455473774592 / 26 ::== 33805636364067871340948264021725680662651671446663332871798784
            ----->  | *2 67611272728135742681896528043451361325303342893326665743597568
            ----->  /2 16902818182033935670474132010862840331325835723331666435899392
                 --> 8451409091016967835237066005431420165662917861665833217949696
                 --> 4225704545508483917618533002715710082831458930832916608974848
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 45712841999183520329570910377196846914037181033780016419176448 6761127272813574268189652804345.1376953125
i insert 285705262494897002059818189857463401520896332447274104069816320 16902818182033935670474132010862.84375
i insert 0 0
i insert 2857052624948970020598181898573957728565501721228563649134592 1690281818203393567047413201086.284423828125
i insert 17856578905931062628738636866087236267761900489696125894262784 4225704545508483917618533002715.7109375
CDIS Start 
section_temp 0
section h inf
33805636364067871340948264021725680662651671446663332871798784 / 6 ::== 5634272727344645223491377336954279904118605360213842995445760
            ----->  | *2 11268545454689290446982754673908559808237210720427685990891520
            ----->  /2 2817136363672322611745688668477139952059302680106921497722880
                 --> 1408568181836161305872844334238569976029651340053460748861440
                 --> 704284090918080652936422167119284988014825670026730374430720
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 126980116664398667582141417714428171851384827121204802346811392 11268545454689290446982754673908.55859375
i insert 793625729152491672388383860715232420149983282876122323205750784 28171363636723226117456886684771.3984375
i insert 0 0
i insert 7936257291524916723883838607151760740711551695075300146675712 2817136363672322611745688668477.1396484375
i insert 49601608072030729524273991294691464154958772315252205872480256 7042840909180806529364221671192.849609375
CDIS End 
section_temp 0
section h inf
878946545465764654864654864564867687325423143330204455473774592 / 17 ::== 51702737968574391462626756739109864542879026918426273803927552
            ----->  | *2 103405475937148782925253513478219729085758053836852547607855104
            ----->  /2 25851368984287195731313378369554932271439513459213136901963776
                 --> 12925684492143597865656689184777466135719756729606568450981888
                 --> 6462842246071798932828344592388733067859878364803284225490944
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 106926924537882559663632994515503459865487584221703449761284096 10340547593714878292525351347821.978515625
i insert 668293278361765997897706215721974163771598080464545142552920064 25851368984287195731313378369554.9453125
i insert 0 0
i insert 6682932783617659978977062157217673832191960076849470924390400 2585136898428719573131337836955.49462890625
i insert 41768329897610374868606638482616923188719810343999097981108224 6462842246071798932828344592388.736328125
section_temp 0
section h inf
51702737968574391462626756739109864542879026918426273803927552 / 312 ::== 165713903745430741867393451086890597931190996016568014471168
            ----->  | *2 331427807490861483734786902173781195862381992033136028942336
            ----->  /2 82856951872715370933696725543445298965595498008284007235584
                 --> 41428475936357685466848362771722649482797749004142003617792
                 --> 20714237968178842733424181385861324741398874502071001808896
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 10984439157819953943091818141382231656427372423106741779038208 3314278074908614837347869021737.8125
i insert 68652744736374712144323863383663803522264859330921629459939328 8285695187271537093369672554344.53125
i insert 0 0
i insert 686527447363747121443238633835975155469812450733416060551168 828569518727153709336967255434.453125
i insert 429079654602341950902024146147940191011989781071497759022907392 20714237968178842733424181385861.328125
removals 
reporing rt 3
section_temp 0
section h inf
33805636364067871340948264021725680662651671446663332871798784 - 165713903745430741867393451086890597931190996016568014471168 ::== 33639922460322440599080870570638792134401483630891911954300928
            ----->  | *2 67279844920644881198161741141277584268802967261783823908601856
            ----->  /2 16819961230161220299540435285319396067200741815445955977150464
                 --> 8409980615080610149770217642659698033600370907722977988575232
                 --> 4204990307540305074885108821329849016800185453861488994287616
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 45265775325460248204087073378834014054090417096859685509660672 6727984492064488119816174114127.7587890625
i insert 282911095784126551275544208617763059891406811094560946629115904 16819961230161220299540435285319.396484375
i insert 0 0
i insert 2829110957841265512755442086174602956580587463553485929185280 1681996123016122029954043528531.939697265625
i insert 17681943486507909454721513038603882700772727395529173227274240 4204990307540305074885108821329.84912109375
section_temp 0
section h inf
5634272727344645223491377336954279904118605360213842995445760 - 165713903745430741867393451086890597931190996016568014471168 ::== 5468558823599214481623983885867389518958358616372009729261568
            ----->  | *2 10937117647198428963247967771734779037916717232744019458523136
            ----->  /2 2734279411799607240811991942933694759479179308186004864630784
                 --> 1367139705899803620405995971466847379739589654093002432315392
                 --> 683569852949901810202997985733423689869794827046501216157696
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 119620542428659298440269899559694057129830592582910658589229056 10937117647198428963247967771734.779296875
i insert 747628390179120615251686872248142598769978403158947655455866880 27342794117996072408119919429336.94921875
i insert 0 0
i insert 7476283901791206152516868722478143961067630631404663996416000 2734279411799607240811991942933.69482421875
i insert 46726774386195038453230429515508912423123650197434228465991680 6835698529499018102029979857334.2373046875
section_temp 0
section h inf
51702737968574391462626756739109864542879026918426273803927552 - 165713903745430741867393451086890597931190996016568014471168 ::== 51537024064828960720759363288022976014628839102654852886429696
            ----->  | *2 103074048129657921441518726576045952029257678205309705772859392
            ----->  /2 25768512032414480360379681644011488007314419551327426443214848
                 --> 12884256016207240180189840822005744003657209775663713221607424
                 --> 6442128008103620090094920411002872001828604887831856610803712
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 106242593978350376532978374245302857990038475554216698315800576 10307404812965792144151872657604.59375
i insert 664016212364689853331114839033194430068016944014585562392428544 25768512032414480360379681644011.484375
i insert 0 0
i insert 6640162123646898533311148390331428624377404722138543644737536 2576851203241448036037968164401.1484375
i insert 41501013272793115833194677439564990995184475893246284884082688 6442128008103620090094920411002.87109375
ending sqti reporting the results 
reporting size of xl vector 34 64
entering amfidromi loop of xl vector  with first 
 of 6761127272813574268189652804345.1376953125 ^2 ::== 45712841999183520329570910377198708775856266245713464702009344 as intpart 45712841999183520329570910377196846914037181033780016419176448  diafora 833233703466581134535083954187670785942024233739692343493132288 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 16902818182033935670474132010862.84375 ^2 ::== 285705262494897002059818189857491923659401467608807779891937280 as intpart 285705262494897002059818189857463401520896332447274104069816320  diafora 593241282970867652804836674707404285804526810882930351403958272 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 1690281818203393567047413201086.284423828125 ^2 ::== 2857052624948970020598181898574919298491016640357091543875584 as intpart 2857052624948970020598181898573957728565501721228563649134592  diafora 876089492840815684844056682666293722788187425539384379879456768 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 4225704545508483917618533002715.7109375 ^2 ::== 17856578905931062628738636866093245228712591725550486243246080 as intpart 17856578905931062628738636866087236267761900489696125894262784  diafora 861089966559833592235916227698780448581781164269747779781263360 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 11268545454689290446982754673908.55859375 ^2 ::== 126980116664398667582141417714440769129224595150882175834914816 as intpart 126980116664398667582141417714428171851384827121204802346811392  diafora 751966428801365987282513446850439535281078944775084051512950784 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 28171363636723226117456886684771.3984375 ^2 ::== 793625729152491672388383860715254920948137333947998889687646208 as intpart 793625729152491672388383860715232420149983282876122323205750784  diafora 85320816313272982476271003849635267175439860454082132268023808 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 2817136363672322611745688668477.1396484375 ^2 ::== 7936257291524916723883838607152548070576537196930135989682176 as intpart 7936257291524916723883838607151760740711551695075300146675712  diafora 871010288174239738140771025957715972388493045194199326594695168 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 7042840909180806529364221671192.849609375 ^2 ::== 49601608072030729524273991294703432559258583371749930605477888 as intpart 49601608072030729524273991294691464154958772315252205872480256  diafora 829344937393733925340380873270176282591586256713205444759257088 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 10340547593714878292525351347821.978515625 ^2 ::== 106926924537882559663632994515523702661009978759958600240594944 as intpart 106926924537882559663632994515503459865487584221703449761284096  diafora 772019620927882095201021870049364247266976187674585404098478080 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 25851368984287195731313378369554.9453125 ^2 ::== 668293278361765997897706215722023047547869381560840359170277376 as intpart 668293278361765997897706215721974163771598080464545142552920064  diafora 210653267103998656966948648842893523553825062865659312920854528 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 2585136898428719573131337836955.49462890625 ^2 ::== 6682932783617659978977062157220231416313123672497412515037184 as intpart 6682932783617659978977062157217673832191960076849470924390400  diafora 872263612682146994885677802407650064248772793953946255413477376 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 6462842246071798932828344592388.736328125 ^2 ::== 41768329897610374868606638482626440471741836347552522448142336 as intpart 41768329897610374868606638482616923188719810343999097981108224  diafora 837178215568154279996048226082250769088463490127726457089163264 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 3314278074908614837347869021737.8125 ^2 ::== 10984439157819953943091818141387616695598263827302552969412608 as intpart 10984439157819953943091818141382231656427372423106741779038208  diafora 867962106307944700921563046423485533659218245886055032339562496 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 8285695187271537093369672554344.53125 ^2 ::== 68652744736374712144323863383672607751824256955436712031420416 as intpart 68652744736374712144323863383663803522264859330921629459939328  diafora 810293800729389942720331001181203873899637969716240626820841472 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 828569518727153709336967255434.453125 ^2 ::== 686527447363747121443238633836726043474891489206409560588288 as intpart 686527447363747121443238633835975155469812450733416060551168  diafora 878260018018400907743211625931031698862097908561633084247638016 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 20714237968178842733424181385861.328125 ^2 ::== 429079654602341950902024146147953818255942234537563848582365184 as intpart 429079654602341950902024146147940191011989781071497759022907392  diafora 449866890863422703962630718416927496313433362258706696450867200 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 6727984492064488119816174114127.7587890625 ^2 ::== 45265775325460248204087073378844224583534442913367053486260224 as intpart 45265775325460248204087073378834014054090417096859685509660672  diafora 833680770140304406660567791186033698030133511940950267946598400 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 16819961230161220299540435285319.396484375 ^2 ::== 282911095784126551275544208617776370222709207503276662012772352 as intpart 282911095784126551275544208617763059891406811094560946629115904  diafora 596035449681638103589110655947104667048097589367812305616633856 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 1681996123016122029954043528531.939697265625 ^2 ::== 2829110957841265512755442086177764036470902682085440842891264 as intpart 2829110957841265512755442086174602956580587463553485929185280  diafora 876117434507923389351899422478693128006228940676305659738718208 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 4204990307540305074885108821329.84912109375 ^2 ::== 17681943486507909454721513038611023138919325468954791375798272 as intpart 17681943486507909454721513038603882700772727395529173227274240  diafora 861264601979256745409933351526263817004050808788478031237742592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 10937117647198428963247967771734.779296875 ^2 ::== 119620542428659298440269899559711110991811787981577668924538880 as intpart 119620542428659298440269899559694057129830592582910658589229056  diafora 759326003037105356424384965005173650002633179313378195270533120 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 27342794117996072408119919429336.94921875 ^2 ::== 747628390179120615251686872248194493216425246300071426743336960 as intpart 747628390179120615251686872248142598769978403158947655455866880  diafora 131318155286644039612967992316725088555444740171256800017907712 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 2734279411799607240811991942933.69482421875 ^2 ::== 7476283901791206152516868722481944436988236748848604307783680 as intpart 7476283901791206152516868722478143961067630631404663996416000  diafora 871470261563973448712137995842389474039713312717504397126402048 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 6835698529499018102029979857334.2373046875 ^2 ::== 46726774386195038453230429515512155826026577893754464171458560 as intpart 46726774386195038453230429515508912423123650197434228465991680  diafora 832219771079569616411424435049358730336458078859080330639310848 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 10307404812965792144151872657604.59375 ^2 ::== 106242593978350376532978374245315098741146929394374900856127488 as intpart 106242593978350376532978374245302857990038475554216698315800576  diafora 772703951487414278331676490319564868949465924908156553929949184 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 25768512032414480360379681644011.484375 ^2 ::== 664016212364689853331114839033219386939208937280927528736784384 as intpart 664016212364689853331114839033194430068016944014585562392428544  diafora 214930333101074801533540025531673257257406199315618893081346048 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 2576851203241448036037968164401.1484375 ^2 ::== 6640162123646898533311148390332193671321683087148431303507968 as intpart 6640162123646898533311148390331428624377404722138543644737536  diafora 872306383342117756331343716174536201755803931480573266469322752 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 6442128008103620090094920411002.87109375 ^2 ::== 41501013272793115833194677439576211683700558580057970546049024 as intpart 41501013272793115833194677439564990995184475893246284884082688  diafora 837445532192971539031460187125302676523198038870873772203704320 from 878946545465764654864654864564867687325423143330204455473774592
the size of xpl vector is 34 64
 of 28171363636723226117456886684771.3984375 ^2 ::== 793625729152491672388383860715254920948137333947998889687646208 as intpart 793625729152491672388383860715232420149983282876122323205750784  diafora 85320816313272982476271003849635267175439860454082132268023808 from 878946545465764654864654864564867687325423143330204455473774592

-------------------------------------------------------------------------

10 25 |35 15| 29647032658695619530898332004547.6328125  and main 878946545465764654864654864564867687325423143330204455473774592
-------------------------------------------------------------------------
section_temp 0
section h inf
878946545465764654864654864564867687325423143330204455473774592 / 35 ::== 25112758441878990138990138987567647218945772666844478808522752
            ----->  | *2 50225516883757980277980277975135294437891545333688957617045504
            ----->  /2 12556379220939495069495069493783823609472886333422239404261376
                 --> 6278189610469747534747534746891911804736443166711119702130688
                 --> 3139094805234873767373767373445955902368221583355559851065344
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 25226025462406579381869335032636568012490553505574421595684864 5022551688375798027798027797513.5283203125
i insert 157662659140041121136683343953991099076244195309686787395289088 12556379220939495069495069493783.8203125
i insert 0 0
i insert 1576626591400411211366833439539157710438236995626493131358208 1255637922093949506949506949378.382080078125
i insert 9853916196252570071042708997119735806295859905669982842781696 3139094805234873767373767373445.955078125
CDIS Start 
section_temp 0
section h inf
25112758441878990138990138987567647218945772666844478808522752 / 6 ::== 4185459740313165023165023164594607663500955563577367318233088
            ----->  | *2 8370919480626330046330046329189215327001911127154734636466176
            ----->  /2 2092729870156582511582511582297303831750477781788683659116544
                 --> 1046364935078291255791255791148651915875238890894341829558272
                 --> 523182467539145627895627895574325957937619445447170914779136
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 70072292951129387171859263979557180773334536092086828493963264 8370919480626330046330046329189.2138671875
i insert 437951830944558669824120399872253315875285244926751772076146688 20927298701565825115825115822973.03515625
i insert 0 0
i insert 4379518309445586698241203998721277739000212359423137020903424 2092729870156582511582511582297.303466796875
i insert 27371989434034916864007524992013217712842357084781398804398080 5231824675391456278956278955743.2587890625
CDIS End 
section_temp 0
section h inf
878946545465764654864654864564867687325423143330204455473774592 / 15 ::== 58596436364384310324310324304324508526953417175463417354387456
            ----->  | *2 117192872728768620648620648608649017053906834350926834708774912
            ----->  /2 29298218182192155162155162152162254263476708587731708677193728
                 --> 14649109091096077581077581076081127131738354293865854338596864
                 --> 7324554545548038790538790538040563565869177146932927169298432
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 137341694184213598856844157399918008147762908249993826055225344 11719287272876862064862064860864.900390625
i insert 858385588651334992855275983749604798700518973499057658698661888 29298218182192155162155162152162.25
i insert 0 0
i insert 8583855886513349928552759837494875509235181765624614128451584 2929821818219215516215516215216.22509765625
i insert 53649099290708437053454748984342971313749866392463700853260288 7324554545548038790538790538040.5625
section_temp 0
section h inf
58596436364384310324310324304324508526953417175463417354387456 / 312 ::== 187809090911488174116379244565142650575411436117750236315648
            ----->  | *2 375618181822976348232758489130285301150822872235500472631296
            ----->  /2 93904545455744087058189622282571325287705718058875118157824
                 --> 46952272727872043529094811141285662643852859029437559078912
                 --> 23476136363936021764547405570642831321926429514718779539456
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 14108901851599851953571268634931456209132742459741930514284544 3756181818229763482327584891302.8525390625
i insert 88180636572499074709820428968359156694051440954786680445861888 9390454545574408705818962228257.130859375
i insert 0 0
i insert 881806365724990747098204289682276880808493532122825309028352 939045454557440870581896222825.713134765625
i insert 551128978578119216936377681052221300084637990860334011961573376 23476136363936021764547405570642.828125
removals 
reporing rt 3
section_temp 0
section h inf
25112758441878990138990138987567647218945772666844478808522752 - 187809090911488174116379244565142650575411436117750236315648 ::== 24924949350967501964873759743002505071283502190412465249976320
            ----->  | *2 49849898701935003929747519486005010142567004380824930499952640
            ----->  /2 12462474675483750982436879871501252535641751095206232624988160
                 --> 6231237337741875491218439935750626267820875547603116312494080
                 --> 3115618668870937745609219967875313133910437773801558156247040
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 24850124005931811897677757661148905338770740516453164878135296 4984989870193500392974751948600.5029296875
i insert 155313275037073824360485985382205578719277962575456137308536832 12462474675483750982436879871501.2578125
i insert 0 0
i insert 1553132750370738243604859853821806583673171282278322804883456 1246247467548375098243687987150.125732421875
i insert 9707079689817114022530374086386291341385451652580185483509760 3115618668870937745609219967875.314453125
section_temp 0
section h inf
4185459740313165023165023164594607663500955563577367318233088 - 187809090911488174116379244565142650575411436117750236315648 ::== 3997650649401676849048643920029464896868665444455216310124544
            ----->  | *2 7995301298803353698097287840058929793737330888910432620249088
            ----->  /2 1998825324700838424524321960014732448434332722227608155062272
                 --> 999412662350419212262160980007366224217166361113804077531136
                 --> 499706331175209606131080490003683112108583180556902038765568
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 63924842858646594534946068360037275328830903017078396345647104 7995301298803353698097287840058.931640625
i insert 399530267866541215843412927250312931828210665139456261392171008 19988253247008384245243219600147.328125
i insert 0 0
i insert 3995302678665412158434129272500331053858505192113575135543296 1998825324700838424524321960014.73291015625
i insert 24970641741658825990213307953137061274385254308271227240710144 4997063311752096061310804900036.83203125
section_temp 0
section h inf
58596436364384310324310324304324508526953417175463417354387456 - 187809090911488174116379244565142650575411436117750236315648 ::== 58408627273472822150193945059759368855171225269791953594089472
            ----->  | *2 116817254546945644300387890119518737710342450539583907188178944
            ----->  /2 29204313636736411075096972529879684427585612634895976797044736
                 --> 14602156818368205537548486264939842213792806317447988398522368
                 --> 7301078409184102768774243132469921106896403158723994199261184
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 136462709598858928080136667363962121135768886112284750527856640 11681725454694564430038789011951.876953125
i insert 852891934992868300500854171024850883446296314559158150408175616 29204313636736411075096972529879.69140625
i insert 0 0
i insert 8528919349928683005008541710243251501186524421224928907362304 2920431363673641107509697252987.96923828125
i insert 53305745937054268781303385689042226921925922615275076949377024 7301078409184102768774243132469.9228515625
ending sqti reporting the results 
reporting size of xl vector 34 64
entering amfidromi loop of xl vector  with first 
 of 5022551688375798027798027797513.5283203125 ^2 ::== 25226025462406579381869335032641873823498930645432639242108928 as intpart 25226025462406579381869335032636568012490553505574421595684864  diafora 853720520003358075482785529532231193589334946947446527825543168 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 12556379220939495069495069493783.8203125 ^2 ::== 157662659140041121136683343954011698398497904037461108822376448 as intpart 157662659140041121136683343953991099076244195309686787395289088  diafora 721283886325723533727971520610876608056219576586602066464473088 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 1255637922093949506949506949378.382080078125 ^2 ::== 1576626591400411211366833439540117113968683165339539952631808 as intpart 1576626591400411211366833439539157710438236995626493131358208  diafora 877369918874364243653288031125328560099258373737067231733350400 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 3139094805234873767373767373445.955078125 ^2 ::== 9853916196252570071042708997125731149906119002341319301398528 as intpart 9853916196252570071042708997119735806295859905669982842781696  diafora 869092629269512084793612155567747983705568304844421620008222720 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 8370919480626330046330046329189.2138671875 ^2 ::== 70072292951129387171859263979560765847688306553362936357715968 as intpart 70072292951129387171859263979557180773334536092086828493963264  diafora 808874252514635267692795600585310506552088607238117626979811328 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 20927298701565825115825115822973.03515625 ^2 ::== 437951830944558669824120399872254821210373015949166049411203072 as intpart 437951830944558669824120399872253315875285244926751772076146688  diafora 440994714521205985040534464692614371450137898403452683397627904 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 2092729870156582511582511582297.303466796875 ^2 ::== 4379518309445586698241203998722547865480519159585183522357248 as intpart 4379518309445586698241203998721277739000212359423137020903424  diafora 874567027156319068166413660566146428155523520251485441939734528 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 5231824675391456278956278955743.2587890625 ^2 ::== 27371989434034916864007524992015926325648313496822878088200192 as intpart 27371989434034916864007524992013217712842357084781398804398080  diafora 851574556031729738000647339572854548840743300509760650213326848 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 11719287272876862064862064860864.900390625 ^2 ::== 137341694184213598856844157399939122453072959695962505517989888 as intpart 137341694184213598856844157399918008147762908249993826055225344  diafora 741604851281551056007810707164949718791741492212379426190524416 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 29298218182192155162155162152162.25 ^2 ::== 858385588651334992855275983749619376682421598137174870785523712 as intpart 858385588651334992855275983749604798700518973499057658698661888  diafora 20560956814429662009378880815262888624904169831146796775112704 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 2929821818219215516215516215216.22509765625 ^2 ::== 8583855886513349928552759837496195153317059980997656594874368 as intpart 8583855886513349928552759837494875509235181765624614128451584  diafora 870362689579251304936102104727372834099108668701424789529559040 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 7324554545548038790538790538040.5625 ^2 ::== 53649099290708437053454748984351211042651349883573429424095232 as intpart 53649099290708437053454748984342971313749866392463700853260288  diafora 825297446175056217811200115580524775432795162635993949778477056 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 3756181818229763482327584891302.8525390625 ^2 ::== 14108901851599851953571268634937861310896005017284258583019520 as intpart 14108901851599851953571268634931456209132742459741930514284544  diafora 864837643614164802911083595929936305392692757993279018906943488 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 9390454545574408705818962228257.130859375 ^2 ::== 88180636572499074709820428968361622670609697432294279501316096 as intpart 88180636572499074709820428968359156694051440954786680445861888  diafora 790765908893265580154834435596508520727851388092375575834918912 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 939045454557440870581896222825.713134765625 ^2 ::== 881806365724990747098204289683616331931000313580266161438720 as intpart 881806365724990747098204289682276880808493532122825309028352  diafora 878064739100039664117556660275185466306658922550866534987726848 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 23476136363936021764547405570642.828125 ^2 ::== 551128978578119216936377681052260201112432494650092442041188352 as intpart 551128978578119216936377681052221300084637990860334011961573376  diafora 327817566887645437928277183512646387240785152469870443512201216 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 4984989870193500392974751948600.5029296875 ^2 ::== 24850124005931811897677757661153918995929846306566506331242496 as intpart 24850124005931811897677757661148905338770740516453164878135296  diafora 854096421459832842966977106903718749800211381393864143218409472 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 12462474675483750982436879871501.2578125 ^2 ::== 155313275037073824360485985382211996200441617986801214368514048 as intpart 155313275037073824360485985382205578719277962575456137308536832  diafora 723633270428690830504168879182662108606145180754748318165237760 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 1246247467548375098243687987150.125732421875 ^2 ::== 1553132750370738243604859853822119937245615394160406645702656 as intpart 1553132750370738243604859853821806583673171282278322804883456  diafora 877393412715393916621050004711045918344178665341351982729789440 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 3115618668870937745609219967875.314453125 ^2 ::== 9707079689817114022530374086388249762527601124175075898032128 as intpart 9707079689817114022530374086386291341385451652580185483509760  diafora 869239465775947540842124490478481472736320127371201313735966720 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 7995301298803353698097287840058.931640625 ^2 ::== 63924842858646594534946068360052170223383584712545982608310272 as intpart 63924842858646594534946068360037275328830903017078396345647104  diafora 815021702607118060329708796204830411996592240313126059128127488 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 19988253247008384245243219600147.328125 ^2 ::== 399530267866541215843412927250326044089106775887327992915951616 as intpart 399530267866541215843412927250312931828210665139456261392171008  diafora 479416277599223439021241937314554715883131221058579397309628416 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 1998825324700838424524321960014.73291015625 ^2 ::== 3995302678665412158434129272503260638961474044534123913019392 as intpart 3995302678665412158434129272500331053858505192113575135543296  diafora 874951242787099242706220735292367303659112968509429197125451776 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 4997063311752096061310804900036.83203125 ^2 ::== 24970641741658825990213307953145377755569173492957999557246976 as intpart 24970641741658825990213307953137061274385254308271227240710144  diafora 853975903724105828874441556611730623575157810451172678434816000 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 11681725454694564430038789011951.876953125 ^2 ::== 136462709598858928080136667363982601615778823443552681639018496 as intpart 136462709598858928080136667363962121135768886112284750527856640  diafora 742483835866905726784518197200905566189654257217919704945917952 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 29204313636736411075096972529879.69140625 ^2 ::== 852891934992868300500854171024891289809178589371330857822846976 as intpart 852891934992868300500854171024850883446296314559158150408175616  diafora 26054610472896354363800693540016803879126828771046305065598976 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 2920431363673641107509697252987.96923828125 ^2 ::== 8528919349928683005008541710248912600986176465222042602438656 as intpart 8528919349928683005008541710243251501186524421224928907362304  diafora 870417626115835971859646322854624412303375872486754303483052032 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 7301078409184102768774243132469.9228515625 ^2 ::== 53305745937054268781303385689055705613073661835708178613927936 as intpart 53305745937054268781303385689042226921925922615275076949377024  diafora 825640799528710386083351478875825430692936277865802780945416192 from 878946545465764654864654864564867687325423143330204455473774592
the size of xpl vector is 34 64
 of 29298218182192155162155162152162.25 ^2 ::== 858385588651334992855275983749619376682421598137174870785523712 as intpart 858385588651334992855275983749604798700518973499057658698661888  diafora 20560956814429662009378880815262888624904169831146796775112704 from 878946545465764654864654864564867687325423143330204455473774592

-------------------------------------------------------------------------

10 |25| 35 |15| 29647032658695619530898332004547.6328125  and main 878946545465764654864654864564867687325423143330204455473774592
-------------------------------------------------------------------------
section_temp 0
section h inf
878946545465764654864654864564867687325423143330204455473774592 / 25 ::== 35157861818630586194586194582594707096876113161886490251231232
            ----->  | *2 70315723637261172389172389165189414193752226323772980502462464
            ----->  /2 17578930909315293097293097291297353548438056580943245125615616
                 --> 8789465454657646548646548645648676774219028290471622562807808
                 --> 4394732727328823274323274322824338387109514145235811281403904
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 49443009906316895588463896663964862487345885057888891372044288 7031572363726117238917238916518.9423828125
i insert 309018811914480597427899354149850685733102562645335442945212416 17578930909315293097293097291297.35546875
i insert 0 0
i insert 3090188119144805974278993541496046030603332576127698954354688 1757893090931529309729309729129.735595703125
i insert 19313675744655037339243709634363471752689217900725794137702400 4394732727328823274323274322824.3388671875
CDIS Start 
section_temp 0
section h inf
35157861818630586194586194582594707096876113161886490251231232 / 6 ::== 5859643636438431032431032430432450976489345646084369225351168
            ----->  | *2 11719287272876862064862064860864901952978691292168738450702336
            ----->  /2 2929821818219215516215516215216225488244672823042184612675584
                 --> 1464910909109607758107758107608112744122336411521092306337792
                 --> 732455454554803879053879053804056372061168205760546153168896
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 137341694184213598856844157399918008147762908249993826055225344 11719287272876862064862064860864.900390625
i insert 858385588651334992855275983749604798700518973499057658698661888 29298218182192155162155162152162.25
i insert 0 0
i insert 8583855886513349928552759837494875509235181765624614128451584 2929821818219215516215516215216.22509765625
i insert 53649099290708437053454748984342971313749866392463700853260288 7324554545548038790538790538040.5625
CDIS End 
section_temp 0
section h inf
878946545465764654864654864564867687325423143330204455473774592 / 15 ::== 58596436364384310324310324304324508526953417175463417354387456
            ----->  | *2 117192872728768620648620648608649017053906834350926834708774912
            ----->  /2 29298218182192155162155162152162254263476708587731708677193728
                 --> 14649109091096077581077581076081127131738354293865854338596864
                 --> 7324554545548038790538790538040563565869177146932927169298432
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 137341694184213598856844157399918008147762908249993826055225344 11719287272876862064862064860864.900390625
i insert 858385588651334992855275983749604798700518973499057658698661888 29298218182192155162155162152162.25
i insert 0 0
i insert 8583855886513349928552759837494875509235181765624614128451584 2929821818219215516215516215216.22509765625
i insert 53649099290708437053454748984342971313749866392463700853260288 7324554545548038790538790538040.5625
section_temp 0
section h inf
58596436364384310324310324304324508526953417175463417354387456 / 312 ::== 187809090911488174116379244565142650575411436117750236315648
            ----->  | *2 375618181822976348232758489130285301150822872235500472631296
            ----->  /2 93904545455744087058189622282571325287705718058875118157824
                 --> 46952272727872043529094811141285662643852859029437559078912
                 --> 23476136363936021764547405570642831321926429514718779539456
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 14108901851599851953571268634931456209132742459741930514284544 3756181818229763482327584891302.8525390625
i insert 88180636572499074709820428968359156694051440954786680445861888 9390454545574408705818962228257.130859375
i insert 0 0
i insert 881806365724990747098204289682276880808493532122825309028352 939045454557440870581896222825.713134765625
i insert 551128978578119216936377681052221300084637990860334011961573376 23476136363936021764547405570642.828125
removals 
reporing rt 3
section_temp 0
section h inf
35157861818630586194586194582594707096876113161886490251231232 - 187809090911488174116379244565142650575411436117750236315648 ::== 34970052727719098020469815338029562473333764114693926894436352
            ----->  | *2 69940105455438196040939630676059124946667528229387853788872704
            ----->  /2 17485026363859549010234907669014781236666882057346963447218176
                 --> 8742513181929774505117453834507390618333441028673481723609088
                 --> 4371256590964887252558726917253695309166720514336740861804544
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 48916183511178157116517545493136752566772445747351742377361408 6994010545543819604093963067605.9111328125
i insert 305726146944863481978234659332157151347972189627055041054507008 17485026363859549010234907669014.77734375
i insert 0 0
i insert 3057261469448634819782346593320172740270532559390336392101888 1748502636385954901023490766901.477783203125
i insert 19107884184053967623639666208255449555029505888559996359147520 4371256590964887252558726917253.6943359375
section_temp 0
section h inf
5859643636438431032431032430432450976489345646084369225351168 - 187809090911488174116379244565142650575411436117750236315648 ::== 5671834545526942858314653185867308209857055526962218217242624
            ----->  | *2 11343669091053885716629306371734616419714111053924436434485248
            ----->  /2 2835917272763471429157326592933654104928527763481109108621312
                 --> 1417958636381735714578663296466827052464263881740554554310656
                 --> 708979318190867857289331648233413526232131940870277277155328
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 128678828447331289757351398458073324296286875022435518095818752 11343669091053885716629306371734.615234375
i insert 804242677795820560983446240363014984409112553589854567181320192 28359172727634714291573265929336.5390625
i insert 0 0
i insert 8042426777958205609834462403626746647887926882692425987391488 2835917272763471429157326592933.65380859375
i insert 50265167362238785061465390022688436525569534599365910448832512 7089793181908678572893316482334.134765625
section_temp 0
section h inf
58596436364384310324310324304324508526953417175463417354387456 - 187809090911488174116379244565142650575411436117750236315648 ::== 58408627273472822150193945059759368855171225269791953594089472
            ----->  | *2 116817254546945644300387890119518737710342450539583907188178944
            ----->  /2 29204313636736411075096972529879684427585612634895976797044736
                 --> 14602156818368205537548486264939842213792806317447988398522368
                 --> 7301078409184102768774243132469921106896403158723994199261184
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 136462709598858928080136667363962121135768886112284750527856640 11681725454694564430038789011951.876953125
i insert 852891934992868300500854171024850883446296314559158150408175616 29204313636736411075096972529879.69140625
i insert 0 0
i insert 8528919349928683005008541710243251501186524421224928907362304 2920431363673641107509697252987.96923828125
i insert 53305745937054268781303385689042226921925922615275076949377024 7301078409184102768774243132469.9228515625
ending sqti reporting the results 
reporting size of xl vector 34 64
entering amfidromi loop of xl vector  with first 
 of 7031572363726117238917238916518.9423828125 ^2 ::== 49443009906316895588463896663978113397526395768351411597737984 as intpart 49443009906316895588463896663964862487345885057888891372044288  diafora 829503535559447759276190967900902904066239772536653157645680640 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 17578930909315293097293097291297.35546875 ^2 ::== 309018811914480597427899354149863203782779816410675222889365504 as intpart 309018811914480597427899354149850685733102562645335442945212416  diafora 569927733551284057436755510415017001592320580684869012528562176 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 1757893090931529309729309729129.735595703125 ^2 ::== 3090188119144805974278993541498632087345399735521963224858624 as intpart 3090188119144805974278993541496046030603332576127698954354688  diafora 875856357346619848890375871023371562066657296489739162975469568 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 4394732727328823274323274322824.3388671875 ^2 ::== 19313675744655037339243709634366450236423738525667201430585344 as intpart 19313675744655037339243709634363471752689217900725794137702400  diafora 859632869721109617525411154930504188338053061151112613555339264 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 11719287272876862064862064860864.900390625 ^2 ::== 137341694184213598856844157399939122453072959695962505517989888 as intpart 137341694184213598856844157399918008147762908249993826055225344  diafora 741604851281551056007810707164949718791741492212379426190524416 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 29298218182192155162155162152162.25 ^2 ::== 858385588651334992855275983749619376682421598137174870785523712 as intpart 858385588651334992855275983749604798700518973499057658698661888  diafora 20560956814429662009378880815262888624904169831146796775112704 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 2929821818219215516215516215216.22509765625 ^2 ::== 8583855886513349928552759837496195153317059980997656594874368 as intpart 8583855886513349928552759837494875509235181765624614128451584  diafora 870362689579251304936102104727372834099108668701424789529559040 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 7324554545548038790538790538040.5625 ^2 ::== 53649099290708437053454748984351211042651349883573429424095232 as intpart 53649099290708437053454748984342971313749866392463700853260288  diafora 825297446175056217811200115580524775432795162635993949778477056 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 11719287272876862064862064860864.900390625 ^2 ::== 137341694184213598856844157399939122453072959695962505517989888 as intpart 137341694184213598856844157399918008147762908249993826055225344  diafora 741604851281551056007810707164949718791741492212379426190524416 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 29298218182192155162155162152162.25 ^2 ::== 858385588651334992855275983749619376682421598137174870785523712 as intpart 858385588651334992855275983749604798700518973499057658698661888  diafora 20560956814429662009378880815262888624904169831146796775112704 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 2929821818219215516215516215216.22509765625 ^2 ::== 8583855886513349928552759837496195153317059980997656594874368 as intpart 8583855886513349928552759837494875509235181765624614128451584  diafora 870362689579251304936102104727372834099108668701424789529559040 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 7324554545548038790538790538040.5625 ^2 ::== 53649099290708437053454748984351211042651349883573429424095232 as intpart 53649099290708437053454748984342971313749866392463700853260288  diafora 825297446175056217811200115580524775432795162635993949778477056 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 3756181818229763482327584891302.8525390625 ^2 ::== 14108901851599851953571268634937861310896005017284258583019520 as intpart 14108901851599851953571268634931456209132742459741930514284544  diafora 864837643614164802911083595929936305392692757993279018906943488 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 9390454545574408705818962228257.130859375 ^2 ::== 88180636572499074709820428968361622670609697432294279501316096 as intpart 88180636572499074709820428968359156694051440954786680445861888  diafora 790765908893265580154834435596508520727851388092375575834918912 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 939045454557440870581896222825.713134765625 ^2 ::== 881806365724990747098204289683616331931000313580266161438720 as intpart 881806365724990747098204289682276880808493532122825309028352  diafora 878064739100039664117556660275185466306658922550866534987726848 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 23476136363936021764547405570642.828125 ^2 ::== 551128978578119216936377681052260201112432494650092442041188352 as intpart 551128978578119216936377681052221300084637990860334011961573376  diafora 327817566887645437928277183512646387240785152469870443512201216 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 6994010545543819604093963067605.9111328125 ^2 ::== 48916183511178157116517545493149493445656770881141004163874816 as intpart 48916183511178157116517545493136752566772445747351742377361408  diafora 830030361954586497748137319071730979324492111856542609464885248 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 17485026363859549010234907669014.77734375 ^2 ::== 305726146944863481978234659332184326607714582294849626629472256 as intpart 305726146944863481978234659332157151347972189627055041054507008  diafora 573220398520901172886420205232710496363369696570980617647292416 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 1748502636385954901023490766901.477783203125 ^2 ::== 3057261469448634819782346593321843340353548180071312760242176 as intpart 3057261469448634819782346593320172740270532559390336392101888  diafora 875889283996316020044872517971547474971071353638645322309697536 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 4371256590964887252558726917253.6943359375 ^2 ::== 19107884184053967623639666208261520412982161393428101664342016 as intpart 19107884184053967623639666208255449555029505888559996359147520  diafora 859838661281710687241015198356612279860354973144573805684850688 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 11343669091053885716629306371734.615234375 ^2 ::== 128678828447331289757351398458087268452889385545851981831077888 as intpart 128678828447331289757351398458073324296286875022435518095818752  diafora 750267717018433365107303466106794363029136268307768937377955840 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 28359172727634714291573265929336.5390625 ^2 ::== 804242677795820560983446240363045566479843059624165675146149888 as intpart 804242677795820560983446240363014984409112553589854567181320192  diafora 74703867669944093881208624201852702916310589740349888292454400 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 2835917272763471429157326592933.65380859375 ^2 ::== 8042426777958205609834462403630454278305586596615748864442368 as intpart 8042426777958205609834462403626746647887926882692425987391488  diafora 870904118687806449254820402161240882494353370034639109227544576 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 7089793181908678572893316482334.134765625 ^2 ::== 50265167362238785061465390022690347904990191226510354696634368 as intpart 50265167362238785061465390022688436525569534599365910448832512  diafora 828681378103525869803189474542179320124495808712133939375898624 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 11681725454694564430038789011951.876953125 ^2 ::== 136462709598858928080136667363982601615778823443552681639018496 as intpart 136462709598858928080136667363962121135768886112284750527856640  diafora 742483835866905726784518197200905566189654257217919704945917952 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 29204313636736411075096972529879.69140625 ^2 ::== 852891934992868300500854171024891289809178589371330857822846976 as intpart 852891934992868300500854171024850883446296314559158150408175616  diafora 26054610472896354363800693540016803879126828771046305065598976 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 2920431363673641107509697252987.96923828125 ^2 ::== 8528919349928683005008541710248912600986176465222042602438656 as intpart 8528919349928683005008541710243251501186524421224928907362304  diafora 870417626115835971859646322854624412303375872486754303483052032 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 7301078409184102768774243132469.9228515625 ^2 ::== 53305745937054268781303385689055705613073661835708178613927936 as intpart 53305745937054268781303385689042226921925922615275076949377024  diafora 825640799528710386083351478875825430692936277865802780945416192 from 878946545465764654864654864564867687325423143330204455473774592
the size of xpl vector is 34 64
 of 29298218182192155162155162152162.25 ^2 ::== 858385588651334992855275983749619376682421598137174870785523712 as intpart 858385588651334992855275983749604798700518973499057658698661888  diafora 20560956814429662009378880815262888624904169831146796775112704 from 878946545465764654864654864564867687325423143330204455473774592
 of 29298218182192155162155162152162.25 ^2 ::== 858385588651334992855275983749619376682421598137174870785523712 as intpart 858385588651334992855275983749604798700518973499057658698661888  diafora 20560956814429662009378880815262888624904169831146796775112704 from 878946545465764654864654864564867687325423143330204455473774592

-------------------------------------------------------------------------

10 26 |36 16| 29647032658695619530898332004547.6328125  and main 878946545465764654864654864564867687325423143330204455473774592
-------------------------------------------------------------------------
section_temp 0
section h inf
878946545465764654864654864564867687325423143330204455473774592 / 36 ::== 24415181818493462635129301793468546044857283346696607163744256
            ----->  | *2 48830363636986925270258603586937092089714566693393214327488512
            ----->  /2 12207590909246731317564650896734273022428641673348303581872128
                 --> 6103795454623365658782325448367136511214320836674151790936064
                 --> 3051897727311682829391162724183568255607160418337075895468032
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 23844044129203749801535443993038065901976654989087793370628096 4883036363698692527025860358693.7109375
i insert 149025275807523436259596524956524539438266449870682286404403200 12207590909246731317564650896734.27734375
i insert 0 0
i insert 1490252758075234362595965249564268814434173244342461817421824 1220759090924673131756465089673.427734375
i insert 9314079737970214766224782809779732192694814654540016559063040 3051897727311682829391162724183.5693359375
CDIS Start 
section_temp 0
section h inf
24415181818493462635129301793468546044857283346696607163744256 / 6 ::== 4069196969748910439188216965578091007476213891116101193957376
            ----->  | *2 8138393939497820878376433931156182014952427782232202387914752
            ----->  /2 2034598484874455219594108482789045503738106945558050596978688
                 --> 1017299242437227609797054241394522751869053472779025298489344
                 --> 508649621218613804898527120697261375934526736389512649244672
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 66233455914454860559820677758455356363407485655326682398064640 8138393939497820878376433931156.1845703125
i insert 413959099465342878498879235990345945084855763925904617610674176 20345984848744552195941084827890.4609375
i insert 0 0
i insert 4139590994653428784988792359903459772712967853457917649879040 2034598484874455219594108482789.046142578125
i insert 25872443716583929906179952249391536110122100903199752998354944 5086496212186138048985271206972.615234375
CDIS End 
section_temp 0
section h inf
878946545465764654864654864564867687325423143330204455473774592 / 16 ::== 54934159091610290929040929035304230457838946458137778467110912
            ----->  | *2 109868318183220581858081858070608460915677892916275556934221824
            ----->  /2 27467079545805145464520464517652115228919473229068889233555456
                 --> 13733539772902572732260232258826057614459736614534444616777728
                 --> 6866769886451286366130116129413028807229868307267222308388864
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 120710473404093983370273185214771690407697356524564426516332544 10986831818322058185808185807060.84765625
i insert 754440458775587396064207407592432989171836862905417608361672704 27467079545805145464520464517652.1171875
i insert 0 0
i insert 7544404587755873960642074075923230650481084782785276657270784 2746707954580514546452046451765.2119140625
i insert 47152528673474212254012962974527061823239803931588600522604544 6866769886451286366130116129413.029296875
section_temp 0
section h inf
54934159091610290929040929035304230457838946458137778467110912 / 312 ::== 176071022729520163234105541779821247003706417506682593607680
            ----->  | *2 352142045459040326468211083559642494007412835013365187215360
            ----->  /2 88035511364760081617052770889910623501853208753341296803840
                 --> 44017755682380040808526385444955311750926604376670648401920
                 --> 22008877841190020404263192722477655875463302188335324200960
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 12400402018007682381068497823672866038739693078813051468120064 3521420454590403264682110835596.4248046875
i insert 77502512612548014881678111397973017487421759135470912121339904 8803551136476008161705277088991.0625
i insert 0 0
i insert 775025126125480148816781113979554127421230817425815716757504 880355113647600816170527708899.106201171875
i insert 484390703828425093010488196237309341294847264823123844934926336 22008877841190020404263192722477.65625
removals 
reporing rt 3
section_temp 0
section h inf
24415181818493462635129301793468546044857283346696607163744256 - 176071022729520163234105541779821247003706417506682593607680 ::== 24239110795763942471895196251688724507711380221678922640654336
            ----->  | *2 48478221591527884943790392503377449015422760443357845281308672
            ----->  /2 12119555397881971235947598125844362253855690110839461320327168
                 --> 6059777698940985617973799062922181126927845055419730660163584
                 --> 3029888849470492808986899531461090563463922527709865330081792
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 23501379686772804178405251169843527836770868725153373576232960 4847822159152788494379039250337.7451171875
i insert 146883623042330026115032819811558407897741760793572509579476992 12119555397881971235947598125844.36328125
i insert 0 0
i insert 1468836230423300261150328198114614518148949101677522727206912 1211955539788197123594759812584.436279296875
i insert 9180226440145626632189551238222400493608860049598281848717312 3029888849470492808986899531461.0908203125
section_temp 0
section h inf
4069196969748910439188216965578091007476213891116101193957376 - 176071022729520163234105541779821247003706417506682593607680 ::== 3893125947019390275954111423798269470330310766098416670867456
            ----->  | *2 7786251894038780551908222847596538940660621532196833341734912
            ----->  /2 1946562973509695137977055711899134735165155383049208335433728
                 --> 973281486754847568988527855949567367582577691524604167716864
                 --> 486640743377423784494263927974783683791288845762302083858432
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 60625718557422497527493034853743166533589472999225660834578432 7786251894038780551908222847596.5390625
i insert 378910740983890609546831467835933706718009181459482109085220864 19465629735096951379770557118991.34765625
i insert 0 0
i insert 3789107409838906095468314678358947908349342062451603802161152 1946562973509695137977055711899.134765625
i insert 23681921311493163096676966739738557775403947239116826581401600 4866407433774237844942639279747.8369140625
section_temp 0
section h inf
54934159091610290929040929035304230457838946458137778467110912 - 176071022729520163234105541779821247003706417506682593607680 ::== 54758088068880770765806823493524408920693043333120093944020992
            ----->  | *2 109516176137761541531613646987048817841386086666240187888041984
            ----->  /2 27379044034440385382903411746762204460346521666560046972010496
                 --> 13689522017220192691451705873381102230173260833280023486005248
                 --> 6844761008610096345725852936690551115086630416640011743002624
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 119937928358372104757932617800355971295441158641322879981977600 10951617613776154153161364698704.884765625
i insert 749612052239825654737078861252334284206541011973695680047742976 27379044034440385382903411746762.2109375
i insert 0 0
i insert 7496120522398256547370788612522248205965072415082679998873600 2737904403444038538290341174676.22119140625
i insert 46850753264989103421067428828264049430371643666196337644273664 6844761008610096345725852936690.552734375
ending sqti reporting the results 
reporting size of xl vector 34 64
entering amfidromi loop of xl vector  with first 
 of 4883036363698692527025860358693.7109375 ^2 ::== 23844044129203749801535443993045010745597045972429977457524736 as intpart 23844044129203749801535443993038065901976654989087793370628096  diafora 855102501336560905063119420571829544671164052647539618357444608 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 12207590909246731317564650896734.27734375 ^2 ::== 149025275807523436259596524956531313446161419471546534412156928 as intpart 149025275807523436259596524956524539438266449870682286404403200  diafora 729921269658241218605058339608343128080116064893437770683383808 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 1220759090924673131756465089673.427734375 ^2 ::== 1490252758075234362595965249565313171599815373276873591095296 as intpart 1490252758075234362595965249564268814434173244342461817421824  diafora 877456292707689420502058899315303367910189864295943257154650112 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 3051897727311682829391162724183.5693359375 ^2 ::== 9314079737970214766224782809783207090385088716971658400759808 as intpart 9314079737970214766224782809779732192694814654540016559063040  diafora 869632465727794440098430081755087917994527150114256191940984832 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 8138393939497820878376433931156.1845703125 ^2 ::== 66233455914454860559820677758458357130062713417113037875183616 as intpart 66233455914454860559820677758455356363407485655326682398064640  diafora 812713089551309794304834186806412301251454714825751175496728576 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 20345984848744552195941084827890.4609375 ^2 ::== 413959099465342878498879235990364722159371644573914287526903808 as intpart 413959099465342878498879235990345945084855763925904617610674176  diafora 464987446000421776365775628574521742240567379404299837863100416 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 2034598484874455219594108482789.046142578125 ^2 ::== 4139590994653428784988792359903647320628919588569564867198976 as intpart 4139590994653428784988792359903459772712967853457917649879040  diafora 874806954471111226079666072204964299972202473671492619422662656 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 5086496212186138048985271206972.615234375 ^2 ::== 25872443716583929906179952249397795134960727785869642970431488 as intpart 25872443716583929906179952249391536110122100903199752998354944  diafora 853074101749180724958474912315476111601219785294835905703444480 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 10986831818322058185808185807060.84765625 ^2 ::== 120710473404093983370273185214790328832928837209983307730649088 as intpart 120710473404093983370273185214771690407697356524564426516332544  diafora 758236072061670671494381679350096016724766415371724427343429632 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 27467079545805145464520464517652.1171875 ^2 ::== 754440458775587396064207407592439406653000518316762685421649920 as intpart 754440458775587396064207407592432989171836862905417608361672704  diafora 124506086690177258800447456972434698153586280424786847112101888 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 2746707954580514546452046451765.2119140625 ^2 ::== 7544404587755873960642074075924395552058052325623956733165568 as intpart 7544404587755873960642074075923230650481084782785276657270784  diafora 871402140878008780904012790488944378684719583568461860171677696 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 6866769886451286366130116129413.029296875 ^2 ::== 47152528673474212254012962974527462915812532394797667838853120 as intpart 47152528673474212254012962974527061823239803931588600522604544  diafora 831794016792290442610641901590340670068024753672305751319642112 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 3521420454590403264682110835596.4248046875 ^2 ::== 12400402018007682381068497823675858139814645842937482651369472 as intpart 12400402018007682381068497823672866038739693078813051468120064  diafora 866546143447756972483586366741194756913801407411617109251194880 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 8803551136476008161705277088991.0625 ^2 ::== 77502512612548014881678111397974116778176644553155022543650816 as intpart 77502512612548014881678111397973017487421759135470912121339904  diafora 801444032853216639982976753166894640127440441345606945773453312 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 880355113647600816170527708899.106201171875 ^2 ::== 775025126125480148816781113979741133738415365183592665710592 as intpart 775025126125480148816781113979554127421230817425815716757504  diafora 878171520339639174715838083450888119271176470552250547141869568 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 22008877841190020404263192722477.65625 ^2 ::== 484390703828425093010488196237338259574164971306345488476798976 as intpart 484390703828425093010488196237309341294847264823123844934926336  diafora 394555841637339561854166668327558346030575878507080610538848256 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 4847822159152788494379039250337.7451171875 ^2 ::== 23501379686772804178405251169850752454840138204437684865204224 as intpart 23501379686772804178405251169843527836770868725153373576232960  diafora 855445165778991850686249613395024087688129996052995137748336640 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 12119555397881971235947598125844.36328125 ^2 ::== 146883623042330026115032819811567202223780844135045392957964288 as intpart 146883623042330026115032819811558407897741760793572509579476992  diafora 732062922423434628749622044753309299234722011102716344280285184 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 1211955539788197123594759812584.436279296875 ^2 ::== 1468836230423300261150328198115672028427508637777355304075264 as intpart 1468836230423300261150328198114614518148949101677522727206912  diafora 877477709235341354603504536366753016945229921475742027923587072 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 3029888849470492808986899531461.0908203125 ^2 ::== 9180226440145626632189551238222950138986302758440337059872768 as intpart 9180226440145626632189551238222400493608860049598281848717312  diafora 869766319025619028232465313326645332635595736839676344892653568 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 7786251894038780551908222847596.5390625 ^2 ::== 60625718557422497527493034853751554815295670735968377300320256 as intpart 60625718557422497527493034853743166533589472999225660834578432  diafora 818320826908342157337161829711124540598874298897063193025183744 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 19465629735096951379770557118991.34765625 ^2 ::== 378910740983890609546831467835947254733799120661210605100728320 as intpart 378910740983890609546831467835933706718009181459482109085220864  diafora 500035804481874045317823396728933940993332704738553549616578560 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 1946562973509695137977055711899.134765625 ^2 ::== 3789107409838906095468314678359472175955979420998023581270016 as intpart 3789107409838906095468314678358947908349342062451603802161152  diafora 875157438055925748769186549886508676282131797713358831816278016 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 4866407433774237844942639279747.8369140625 ^2 ::== 23681921311493163096676966739746703420862445041325662818795520 as intpart 23681921311493163096676966739738557775403947239116826581401600  diafora 855264624154271491767977897825129057749496917539031684743168000 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 10951617613776154153161364698704.884765625 ^2 ::== 119937928358372104757932617800375342581175896271864501477834752 as intpart 119937928358372104757932617800355971295441158641322879981977600  diafora 759008617107392550106722246764511676415900727556712778719821824 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 27379044034440385382903411746762.2109375 ^2 ::== 749612052239825654737078861252345851518268094566984337464492032 as intpart 749612052239825654737078861252334284206541011973695680047742976  diafora 129334493225939000127576003312533403118882131356508775426031616 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 2737904403444038538290341174676.22119140625 ^2 ::== 7496120522398256547370788612523458911323493516991531342364672 as intpart 7496120522398256547370788612522248205965072415082679998873600  diafora 871450424943366398317284075952345426740057678061319026483658752 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 6844761008610096345725852936690.552734375 ^2 ::== 46850753264989103421067428828271615719891755910436521091530752 as intpart 46850753264989103421067428828264049430371643666196337644273664  diafora 832095792200775551443587435736603677509132756796176914601476096 from 878946545465764654864654864564867687325423143330204455473774592
the size of xpl vector is 34 64
 of 27467079545805145464520464517652.1171875 ^2 ::== 754440458775587396064207407592439406653000518316762685421649920 as intpart 754440458775587396064207407592432989171836862905417608361672704  diafora 124506086690177258800447456972434698153586280424786847112101888 from 878946545465764654864654864564867687325423143330204455473774592

-------------------------------------------------------------------------

10 |26| 36 |16| 29647032658695619530898332004547.6328125  and main 878946545465764654864654864564867687325423143330204455473774592
-------------------------------------------------------------------------
section_temp 0
section h inf
878946545465764654864654864564867687325423143330204455473774592 / 26 ::== 33805636364067871340948264021725680662651671446663332871798784
            ----->  | *2 67611272728135742681896528043451361325303342893326665743597568
            ----->  /2 16902818182033935670474132010862840331325835723331666435899392
                 --> 8451409091016967835237066005431420165662917861665833217949696
                 --> 4225704545508483917618533002715710082831458930832916608974848
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 45712841999183520329570910377196846914037181033780016419176448 6761127272813574268189652804345.1376953125
i insert 285705262494897002059818189857463401520896332447274104069816320 16902818182033935670474132010862.84375
i insert 0 0
i insert 2857052624948970020598181898573957728565501721228563649134592 1690281818203393567047413201086.284423828125
i insert 17856578905931062628738636866087236267761900489696125894262784 4225704545508483917618533002715.7109375
CDIS Start 
section_temp 0
section h inf
33805636364067871340948264021725680662651671446663332871798784 / 6 ::== 5634272727344645223491377336954279904118605360213842995445760
            ----->  | *2 11268545454689290446982754673908559808237210720427685990891520
            ----->  /2 2817136363672322611745688668477139952059302680106921497722880
                 --> 1408568181836161305872844334238569976029651340053460748861440
                 --> 704284090918080652936422167119284988014825670026730374430720
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 126980116664398667582141417714428171851384827121204802346811392 11268545454689290446982754673908.55859375
i insert 793625729152491672388383860715232420149983282876122323205750784 28171363636723226117456886684771.3984375
i insert 0 0
i insert 7936257291524916723883838607151760740711551695075300146675712 2817136363672322611745688668477.1396484375
i insert 49601608072030729524273991294691464154958772315252205872480256 7042840909180806529364221671192.849609375
CDIS End 
section_temp 0
section h inf
878946545465764654864654864564867687325423143330204455473774592 / 16 ::== 54934159091610290929040929035304230457838946458137778467110912
            ----->  | *2 109868318183220581858081858070608460915677892916275556934221824
            ----->  /2 27467079545805145464520464517652115228919473229068889233555456
                 --> 13733539772902572732260232258826057614459736614534444616777728
                 --> 6866769886451286366130116129413028807229868307267222308388864
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 120710473404093983370273185214771690407697356524564426516332544 10986831818322058185808185807060.84765625
i insert 754440458775587396064207407592432989171836862905417608361672704 27467079545805145464520464517652.1171875
i insert 0 0
i insert 7544404587755873960642074075923230650481084782785276657270784 2746707954580514546452046451765.2119140625
i insert 47152528673474212254012962974527061823239803931588600522604544 6866769886451286366130116129413.029296875
section_temp 0
section h inf
54934159091610290929040929035304230457838946458137778467110912 / 312 ::== 176071022729520163234105541779821247003706417506682593607680
            ----->  | *2 352142045459040326468211083559642494007412835013365187215360
            ----->  /2 88035511364760081617052770889910623501853208753341296803840
                 --> 44017755682380040808526385444955311750926604376670648401920
                 --> 22008877841190020404263192722477655875463302188335324200960
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 12400402018007682381068497823672866038739693078813051468120064 3521420454590403264682110835596.4248046875
i insert 77502512612548014881678111397973017487421759135470912121339904 8803551136476008161705277088991.0625
i insert 0 0
i insert 775025126125480148816781113979554127421230817425815716757504 880355113647600816170527708899.106201171875
i insert 484390703828425093010488196237309341294847264823123844934926336 22008877841190020404263192722477.65625
removals 
reporing rt 3
section_temp 0
section h inf
33805636364067871340948264021725680662651671446663332871798784 - 176071022729520163234105541779821247003706417506682593607680 ::== 33629565341338351177714158479945859125505768321645648348708864
            ----->  | *2 67259130682676702355428316959891718251011536643291296697417728
            ----->  /2 16814782670669175588857079239972929562752884160822824174354432
                 --> 8407391335334587794428539619986464781376442080411412087177216
                 --> 4203695667667293897214269809993232390688221040205706043588608
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 45237906601893826094375986910549592429780598899211799783014400 6725913068267670235542831695989.173828125
i insert 282736916261836413089849918190918147650095444082841993032499200 16814782670669175588857079239972.93359375
i insert 0 0
i insert 2827369162618364130898499181908508656089602836649012256309248 1681478267066917558885707923997.29345703125
i insert 17671057266364775818115619886932384228130965255177624564531200 4203695667667293897214269809993.2333984375
section_temp 0
section h inf
5634272727344645223491377336954279904118605360213842995445760 - 176071022729520163234105541779821247003706417506682593607680 ::== 5458201704615125060257271795174458366972702235196158472355840
            ----->  | *2 10916403409230250120514543590348916733945404470392316944711680
            ----->  /2 2729100852307562530128635897587229183486351117598079236177920
                 --> 1364550426153781265064317948793614591743175558799039618088960
                 --> 682275213076890632532158974396807295871587779399519809044480
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 119167863393053827682068264085504972634963092560507224228626432 10916403409230250120514543590348.912109375
i insert 744799146206586423012926650534515275183504613326458453378465792 27291008523075625301286358975872.28125
i insert 0 0
i insert 7447991462065864230129266505344060789685193285031701514289152 2729100852307562530128635897587.22802734375
i insert 46549946637911651438307915658407204698969038332903653336154112 6822752130768906325321589743968.0703125
section_temp 0
section h inf
54934159091610290929040929035304230457838946458137778467110912 - 176071022729520163234105541779821247003706417506682593607680 ::== 54758088068880770765806823493524408920693043333120093944020992
            ----->  | *2 109516176137761541531613646987048817841386086666240187888041984
            ----->  /2 27379044034440385382903411746762204460346521666560046972010496
                 --> 13689522017220192691451705873381102230173260833280023486005248
                 --> 6844761008610096345725852936690551115086630416640011743002624
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 119937928358372104757932617800355971295441158641322879981977600 10951617613776154153161364698704.884765625
i insert 749612052239825654737078861252334284206541011973695680047742976 27379044034440385382903411746762.2109375
i insert 0 0
i insert 7496120522398256547370788612522248205965072415082679998873600 2737904403444038538290341174676.22119140625
i insert 46850753264989103421067428828264049430371643666196337644273664 6844761008610096345725852936690.552734375
ending sqti reporting the results 
reporting size of xl vector 34 64
entering amfidromi loop of xl vector  with first 
 of 6761127272813574268189652804345.1376953125 ^2 ::== 45712841999183520329570910377198708775856266245713464702009344 as intpart 45712841999183520329570910377196846914037181033780016419176448  diafora 833233703466581134535083954187670785942024233739692343493132288 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 16902818182033935670474132010862.84375 ^2 ::== 285705262494897002059818189857491923659401467608807779891937280 as intpart 285705262494897002059818189857463401520896332447274104069816320  diafora 593241282970867652804836674707404285804526810882930351403958272 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 1690281818203393567047413201086.284423828125 ^2 ::== 2857052624948970020598181898574919298491016640357091543875584 as intpart 2857052624948970020598181898573957728565501721228563649134592  diafora 876089492840815684844056682666293722788187425539384379879456768 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 4225704545508483917618533002715.7109375 ^2 ::== 17856578905931062628738636866093245228712591725550486243246080 as intpart 17856578905931062628738636866087236267761900489696125894262784  diafora 861089966559833592235916227698780448581781164269747779781263360 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 11268545454689290446982754673908.55859375 ^2 ::== 126980116664398667582141417714440769129224595150882175834914816 as intpart 126980116664398667582141417714428171851384827121204802346811392  diafora 751966428801365987282513446850439535281078944775084051512950784 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 28171363636723226117456886684771.3984375 ^2 ::== 793625729152491672388383860715254920948137333947998889687646208 as intpart 793625729152491672388383860715232420149983282876122323205750784  diafora 85320816313272982476271003849635267175439860454082132268023808 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 2817136363672322611745688668477.1396484375 ^2 ::== 7936257291524916723883838607152548070576537196930135989682176 as intpart 7936257291524916723883838607151760740711551695075300146675712  diafora 871010288174239738140771025957715972388493045194199326594695168 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 7042840909180806529364221671192.849609375 ^2 ::== 49601608072030729524273991294703432559258583371749930605477888 as intpart 49601608072030729524273991294691464154958772315252205872480256  diafora 829344937393733925340380873270176282591586256713205444759257088 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 10986831818322058185808185807060.84765625 ^2 ::== 120710473404093983370273185214790328832928837209983307730649088 as intpart 120710473404093983370273185214771690407697356524564426516332544  diafora 758236072061670671494381679350096016724766415371724427343429632 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 27467079545805145464520464517652.1171875 ^2 ::== 754440458775587396064207407592439406653000518316762685421649920 as intpart 754440458775587396064207407592432989171836862905417608361672704  diafora 124506086690177258800447456972434698153586280424786847112101888 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 2746707954580514546452046451765.2119140625 ^2 ::== 7544404587755873960642074075924395552058052325623956733165568 as intpart 7544404587755873960642074075923230650481084782785276657270784  diafora 871402140878008780904012790488944378684719583568461860171677696 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 6866769886451286366130116129413.029296875 ^2 ::== 47152528673474212254012962974527462915812532394797667838853120 as intpart 47152528673474212254012962974527061823239803931588600522604544  diafora 831794016792290442610641901590340670068024753672305751319642112 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 3521420454590403264682110835596.4248046875 ^2 ::== 12400402018007682381068497823675858139814645842937482651369472 as intpart 12400402018007682381068497823672866038739693078813051468120064  diafora 866546143447756972483586366741194756913801407411617109251194880 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 8803551136476008161705277088991.0625 ^2 ::== 77502512612548014881678111397974116778176644553155022543650816 as intpart 77502512612548014881678111397973017487421759135470912121339904  diafora 801444032853216639982976753166894640127440441345606945773453312 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 880355113647600816170527708899.106201171875 ^2 ::== 775025126125480148816781113979741133738415365183592665710592 as intpart 775025126125480148816781113979554127421230817425815716757504  diafora 878171520339639174715838083450888119271176470552250547141869568 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 22008877841190020404263192722477.65625 ^2 ::== 484390703828425093010488196237338259574164971306345488476798976 as intpart 484390703828425093010488196237309341294847264823123844934926336  diafora 394555841637339561854166668327558346030575878507080610538848256 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 6725913068267670235542831695989.173828125 ^2 ::== 45237906601893826094375986910551929660574769697170809329549312 as intpart 45237906601893826094375986910549592429780598899211799783014400  diafora 833708638863870828770278877654318089943882387289471556094263296 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 16814782670669175588857079239972.93359375 ^2 ::== 282736916261836413089849918190949522002451092760529036436832256 as intpart 282736916261836413089849918190918147650095444082841993032499200  diafora 596209629203928241774804946373949539675327699247362462441275392 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 1681478267066917558885707923997.29345703125 ^2 ::== 2827369162618364130898499181909495603785923106073175583096832 as intpart 2827369162618364130898499181908508656089602836649012256309248  diafora 876119176303146290733756365382959199095344188702329979053015040 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 4203695667667293897214269809993.2333984375 ^2 ::== 17671057266364775818115619886934345125153193297533064777302016 as intpart 17671057266364775818115619886932384228130965255177624564531200  diafora 861275488199399879046539244677935317952572649499590129698734080 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 10916403409230250120514543590348.912109375 ^2 ::== 119167863393053827682068264085524898517835430041412000532135936 as intpart 119167863393053827682068264085504972634963092560507224228626432  diafora 759778682072710827182586600479362714690460050769697231245148160 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 27291008523075625301286358975872.28125 ^2 ::== 744799146206586423012926650534530645447032380607951600904830976 as intpart 744799146206586423012926650534515275183504613326458453378465792  diafora 134147399259178231851728214030352412141918530003746002095308800 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 2729100852307562530128635897587.22802734375 ^2 ::== 7447991462065864230129266505345306157364714377588250033258496 as intpart 7447991462065864230129266505344060789685193285031701514289152  diafora 871498554003698790634525598059523661198059050035820451134963712 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 6822752130768906325321589743968.0703125 ^2 ::== 46549946637911651438307915658408165340439523787996975056551936 as intpart 46549946637911651438307915658407204698969038332903653336154112  diafora 832396598827853003426346948906460551951096304978596196488577024 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 10951617613776154153161364698704.884765625 ^2 ::== 119937928358372104757932617800375342581175896271864501477834752 as intpart 119937928358372104757932617800355971295441158641322879981977600  diafora 759008617107392550106722246764511676415900727556712778719821824 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 27379044034440385382903411746762.2109375 ^2 ::== 749612052239825654737078861252345851518268094566984337464492032 as intpart 749612052239825654737078861252334284206541011973695680047742976  diafora 129334493225939000127576003312533403118882131356508775426031616 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 878946545465764654864654864564867687325423143330204455473774592 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 2737904403444038538290341174676.22119140625 ^2 ::== 7496120522398256547370788612523458911323493516991531342364672 as intpart 7496120522398256547370788612522248205965072415082679998873600  diafora 871450424943366398317284075952345426740057678061319026483658752 from 878946545465764654864654864564867687325423143330204455473774592
entering amfidromi loop of xl vector  with first 
 of 6844761008610096345725852936690.552734375 ^2 ::== 46850753264989103421067428828271615719891755910436521091530752 as intpart 46850753264989103421067428828264049430371643666196337644273664  diafora 832095792200775551443587435736603677509132756796176914601476096 from 878946545465764654864654864564867687325423143330204455473774592
the size of xpl vector is 34 64
 of 28171363636723226117456886684771.3984375 ^2 ::== 793625729152491672388383860715254920948137333947998889687646208 as intpart 793625729152491672388383860715232420149983282876122323205750784  diafora 85320816313272982476271003849635267175439860454082132268023808 from 878946545465764654864654864564867687325423143330204455473774592

-------------------------------------------------------------------------


 27467079545805145464520464517652.117188 ^2 ::== 754440458775587396064207407592439406653000518316762685421649920.000000 as intpart 754440458775587396064207407592432989171836862905417608361672704.000000 diafora 124506086690177258800447456972434698153586280424786847112101888.000000 from 878946545465764654864654864564867687325423143330204455473774592.000000 
 29298218182192155162155162152162.250000 ^2 ::== 858385588651334992855275983749619376682421598137174870785523712.000000 as intpart 858385588651334992855275983749604798700518973499057658698661888.000000 diafora 20560956814429662009378880815262888624904169831146796775112704.000000 from 878946545465764654864654864564867687325423143330204455473774592.000000 
 25851368984287195731313378369554.945312 ^2 ::== 668293278361765997897706215722023047547869381560840359170277376.000000 as intpart 668293278361765997897706215721974163771598080464545142552920064.000000 diafora 210653267103998656966948648842893523553825062865659312920854528.000000 from 878946545465764654864654864564867687325423143330204455473774592.000000 
 28171363636723226117456886684771.398438 ^2 ::== 793625729152491672388383860715254920948137333947998889687646208.000000 as intpart 793625729152491672388383860715232420149983282876122323205750784.000000 diafora 85320816313272982476271003849635267175439860454082132268023808.000000 from 878946545465764654864654864564867687325423143330204455473774592.000000 
 29298218182192155162155162152162.250000 ^2 ::== 858385588651334992855275983749619376682421598137174870785523712.000000 as intpart 858385588651334992855275983749604798700518973499057658698661888.000000 diafora 20560956814429662009378880815262888624904169831146796775112704.000000 from 878946545465764654864654864564867687325423143330204455473774592.000000 
 29298218182192155162155162152162.250000 ^2 ::== 858385588651334992855275983749619376682421598137174870785523712.000000 as intpart 858385588651334992855275983749604798700518973499057658698661888.000000 diafora 20560956814429662009378880815262888624904169831146796775112704.000000 from 878946545465764654864654864564867687325423143330204455473774592.000000 
 29298218182192155162155162152162.250000 ^2 ::== 858385588651334992855275983749619376682421598137174870785523712.000000 as intpart 858385588651334992855275983749604798700518973499057658698661888.000000 diafora 20560956814429662009378880815262888624904169831146796775112704.000000 from 878946545465764654864654864564867687325423143330204455473774592.000000 
 27467079545805145464520464517652.117188 ^2 ::== 754440458775587396064207407592439406653000518316762685421649920.000000 as intpart 754440458775587396064207407592432989171836862905417608361672704.000000 diafora 124506086690177258800447456972434698153586280424786847112101888.000000 from 878946545465764654864654864564867687325423143330204455473774592.000000 
 28171363636723226117456886684771.398438 ^2 ::== 793625729152491672388383860715254920948137333947998889687646208.000000 as intpart 793625729152491672388383860715232420149983282876122323205750784.000000 diafora 85320816313272982476271003849635267175439860454082132268023808.000000 from 878946545465764654864654864564867687325423143330204455473774592.000000 

---------order of near approximation numbers--------
|----------bigger value is the nearest-------------|

the size of fnl_weirdo vector is 8 16
 29298218182192155162155162152162  29298218182192155162155162152162  29298218182192155162155162152162  29298218182192155162155162152162  28171363636723226117456886684771  28171363636723226117456886684771  27467079545805145464520464517652  27467079545805145464520464517652 
----------------------------------------------------

auto value is 29298218182192155162155162152162
lenght of 29298218182192155162155162152162 32
lenght of 878946545465764654864654864564867687325423143330204455473774592 is 63
moving with ps_ask 33
-------------------------------------------------------
times 1 8 2
main 2.828427124746190097603377448419395968694492778317254832511024748099349480912056975512314238585531712 second 1.414213562373095048801688724209697984347246389158627416255512374049674740456028487756157119292765856
main 7.999999999999999999999999999999999229628022245105658777608822966029072584759340713844721904024481773 second 1.999999999999999999999999999999999807407005561276414694402205741507268146189835178461180476006120443
times of 1.414213562373095048801688724209698176940240827882212721853306632542406594266193309294976643286645412
new times of 1.414213562373095048801688724209698176940240827882212721853306632542406594266193309294976643286645412
using 29298218182192155162155162152162 * 1.414213562373095048801688724209698176940240827882212721853306632542406594266193309294976643286645412
41433937506622152862815645495443.34375  with length of 37 and dot length 32 will move 5

 trying to reach the main number 878946545465764654864654864564867687325423143330204455473774592  main number intpart lenght 63 
 fract 0 int 878946545465764654864654864564867687325423143330204455473774592
    -----------------> 41433937506622152862815645495443.34375 ^2 ::== 1716771177302669985710551967499209597401037946998115317397323776
 temp fract 0 temp int 1716771177302669985710551967499209597401037946998115317397323776
before loop xstp is 0entering tens with lap of value 5
using t_rst as 414339375066221528628156454954433.4375
using for fract 171677117730266998571055196749920947063597792417517516772700323840
getting the part of 171677117730266998571055196749920947063597792417517516772700323840 :: ad 66 and mad 63
have to exit bigger lenght with ad 66 and mad 63
    -----------------> 414339375066221528628156454954433.4375 ^2 ::== 171677117730266998571055196749920947063597792417517516772700323840
t_ten increased 
breaking with xbrk of value 1

increasing the digits 2
-------------------------------------------------------
-------------------------------------------------------
times 2 87 29
main 9.327379053088815045554475542320557471527647726584875648712282054562071331726968992370530031621456146 second 5.385164807134504031250710491540329415288892282132364959513666214486289282592501592716871527954936028
main 87.00000000000000000000000000000001232595164407830945955825883254353483864385054857848444953560829163 second 29
times of 0.3216337604513384498467060531834675106401857929086603425347731726525638646860261182780504896072670817
new times of 0.3216337604513384498467060531834675106401857929086603425347731726525638646860261182780504896072670817
using 29298218182192155162155162152162 * 0.3216337604513384498467060531834675106401857929086603425347731726525638646860261182780504896072670817
9423296088462240284928559919616.0361328125  with length of 41 and dot length 31 will move 10

 trying to reach the main number 878946545465764654864654864564867687325423143330204455473774592  main number intpart lenght 63 
 fract 0 int 878946545465764654864654864564867687325423143330204455473774592
    -----------------> 9423296088462240284928559919616.0361328125 ^2 ::== 88798509170827757881580274180993616599105252426422094363885568
 temp fract 0 temp int 88798509170827757881580274180993616599105252426422094363885568
before loop xstp is 0entering tens with lap of value 10
using t_rst as 94232960884622402849285599196160.359375
using for fract 8879850917082775788158027418099360511102168785809314330001276928
getting the part of 8879850917082775788158027418099360511102168785809314330001276928 :: ad 64 and mad 63
have to exit bigger lenght with ad 64 and mad 63
i push_back a near value of 94232960884622402849285599196160
stopping with ad 64 and mad of 63
    -----------------> 94232960884622402849285599196160.359375 ^2 ::== 8879850917082775788158027418099360511102168785809314330001276928
t_ten increased 
breaking with xbrk of value 1

increasing the digits 3
-------------------------------------------------------
-------------------------------------------------------
times 3 878 292
main 29.6310647800581071187546542085948978899151365306819798276977635028296004238157479449000675231218338 second 17.08800749063506233574329665247941270348631833650356961665371018175424433493958531471434980630874634
main 878.000000000000000000000000000000098607613152626475676466070660348278709150804388627875596284866333 second 292
times of 0.1014762492467743394477899116732701982531340292146643144784169982973616452870402326880139298737049103
new times of 0.1014762492467743394477899116732701982531340292146643144784169982973616452870402326880139298737049103
using 29298218182192155162155162152162 * 0.1014762492467743394477899116732701982531340292146643144784169982973616452870402326880139298737049103
2973073290742506941989189804302.46923828125  with length of 42 and dot length 31 will move 11
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867687325423143330204455473774592  main number intpart lenght 63 
 fract 0 int 878946545465764654864654864564867687325423143330204455473774592
    -----------------> 2973073290742506941989189804302.46923828125 ^2 ::== 8839164792126479214286595910726135152005855594047282545164288
 temp fract 0 temp int 8839164792126479214286595910726135152005855594047282545164288
before loop xstp is 0entering tens with lap of value 10
using t_rst as 29730732907425069419891898043024.69140625
using for fract 883916479212647921428659591072613426068902730857348461779484672
getting the part of 883916479212647921428659591072613426068902730857348461779484672 :: ad 63 and mad 63
i push_back a near value of 29730732907425069419891898043024
stopping with ad 63 and mad of 63
    -----------------> 29730732907425069419891898043024.69140625 ^2 ::== 883916479212647921428659591072613426068902730857348461779484672
t_ten increased 
breaking with xbrk of value 1

increasing the digits 4
-------------------------------------------------------
-------------------------------------------------------
times 4 8789 2929
main 93.74966666607407196706882482764269786085029109606588594281784853528075029949206964374752715229988098 second 54.12023651093923296030250331814636068815957718088187600516748197937780262556373145343968644738197327
main 8789.000000000000000000000000000001577721810442023610823457130565572459346412870218046009540557861328 second 2929.000000000000000000000000000000394430452610505902705864282641393114836603217554511502385139465332
times of 0.03200739729125096345751752298656288627334868961201845375748148618110141812396346461255802751111332327
new times of 0.03200739729125096345751752298656288627334868961201845375748148618110141812396346461255802751111332327
using 29298218182192155162155162152162 * 0.03200739729125096345751752298656288627334868961201845375748148618110141812396346461255802751111332327
937759709283176913712722503263.169677734375  with length of 42 and dot length 30 will move 12
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867687325423143330204455473774592  main number intpart lenght 63 
 fract 0 int 878946545465764654864654864564867687325423143330204455473774592
    -----------------> 937759709283176913712722503263.169677734375 ^2 ::== 879393272354868481477710692975505802355273039067147019485184
 temp fract 0 temp int 879393272354868481477710692975505802355273039067147019485184
before loop xstp is 0entering tens with lap of value 10
using t_rst as 9377597092831769137127225032631.697265625
using for fract 87939327235486848147771069297550589520077598547066763691950080
getting the part of 87939327235486848147771069297550589520077598547066763691950080 :: ad 62 and mad 63
i push_back a near value of 9377597092831769137127225032631
stopping with ad 62 and mad of 63
    -----------------> 9377597092831769137127225032631.697265625 ^2 ::== 87939327235486848147771069297550589520077598547066763691950080
t_ten increased 
breaking with xbrk of value 1

increasing the digits 5
-------------------------------------------------------
-------------------------------------------------------
times 5 87894 29298
main 296.4692226859307566326379017943671893234291320392629396225253363573309828282731359649915248155593872 second 171.1665855241612278624797217450403879100196527591486517239579320630304959394152319873683154582977295
main 87894.00000000000000000000000000001262177448353618888658765704452457967477130296174436807632446289062 second 29297.99999999999999999999999999999684455637911595277835308573886885508130717425956390798091888427734
times of 0.01011909422779475584110307535648737854315251047477711530623979216063618153222461448770275183051126078
new times of 0.01011909422779475584110307535648737854315251047477711530623979216063618153222461448770275183051126078
using 29298218182192155162155162152162 * 0.01011909422779475584110307535648737854315251047477711530623979216063618153222461448770275183051126078
296471430492092001540262091995.2669677734375  with length of 43 and dot length 30 will move 13
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867687325423143330204455473774592  main number intpart lenght 63 
 fract 0 int 878946545465764654864654864564867687325423143330204455473774592
    -----------------> 296471430492092001540262091995.2669677734375 ^2 ::== 87895309098027339018561947957158015669727931757446440157184
 temp fract 0 temp int 87895309098027339018561947957158015669727931757446440157184
before loop xstp is 0entering tens with lap of value 10
using t_rst as 2964714304920920015402620919952.669921875
using for fract 8789530909802733901856194795715802727541580005788651733647360
getting the part of 8789530909802733901856194795715802727541580005788651733647360 :: ad 61 and mad 63
    -----------------> 2964714304920920015402620919952.669921875 ^2 ::== 8789530909802733901856194795715802727541580005788651733647360
t_ten increased 
using t_rst as 29647143049209200154026209199526.6953125
using for fract 878953090980273390185619479571579975648548572087599197574922240
getting the part of 878953090980273390185619479571579975648548572087599197574922240 :: ad 63 and mad 63
i push_back a near value of 29647143049209200154026209199526
stopping with ad 63 and mad of 63
    -----------------> 29647143049209200154026209199526.6953125 ^2 ::== 878953090980273390185619479571579975648548572087599197574922240
t_ten increased 
breaking with xbrk of value 1

increasing the digits 6
-------------------------------------------------------
-------------------------------------------------------
times 6 878946 292982
main 937.5211997603040869596046837510080805810404728036896793480609014169446790987194617628119885921478271 second 541.2781170525924743760092112120328435622373700115361026485535402008597571921200142242014408111572266
main 878945.999999999999999999999999999899025804131710488907298743643803362601829576306045055389404296875 second 292982.0000000000000000000000000000504870979341447555463506281780983186990852118469774723052978515625
times of 0.003199927639787782481379759451949293530189789920480108384967450772123860724808520894502095188727253117
new times of 0.003199927639787782481379759451949293530189789920480108384967450772123860724808520894502095188727253117
using 29298218182192155162155162152162 * 0.003199927639787782481379759451949293530189789920480108384967450772123860724808520894502095188727253117
93752178157729637931929751469.569580078125  with length of 41 and dot length 29 will move 12
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867687325423143330204455473774592  main number intpart lenght 63 
 fract 0 int 878946545465764654864654864564867687325423143330204455473774592
    -----------------> 93752178157729637931929751469.569580078125 ^2 ::== 8789470909318678207418298568679350699627878942202283425792
 temp fract 0 temp int 8789470909318678207418298568679350699627878942202283425792
before loop xstp is 0entering tens with lap of value 10
using t_rst as 937521781577296379319297514695.69580078125
using for fract 878947090931867820741829856867935045784271501927644848455680
getting the part of 878947090931867820741829856867935045784271501927644848455680 :: ad 60 and mad 63
    -----------------> 937521781577296379319297514695.69580078125 ^2 ::== 878947090931867820741829856867935045784271501927644848455680
t_ten increased 
using t_rst as 9375217815772963793192975146956.9580078125
using for fract 87894709093186782074182985686793502721517091264694072496881664
getting the part of 87894709093186782074182985686793502721517091264694072496881664 :: ad 62 and mad 63
i push_back a near value of 9375217815772963793192975146956
stopping with ad 62 and mad of 63
    -----------------> 9375217815772963793192975146956.9580078125 ^2 ::== 87894709093186782074182985686793502721517091264694072496881664
t_ten increased 
breaking with xbrk of value 1

increasing the digits 7
-------------------------------------------------------
-------------------------------------------------------
times 7 8789465 2929821
main 2964.703189191120359563837776166703541032780873505232619241557719125257364112258073873817920684814453 second 1711.671989605485131483736559397573349728553080534617598466512532022487658167619883897714316844940186
main 8789464.99999999999999999999999999838441286610736782251677989830085380162927322089672088623046875 second 2929820.9999999999999999999999999995961032165268419556291949745752134504073183052241802215576171875
times of 0.001011905911381999227790311345357516371401356277113171096134392861631465255752102688768800931029545609
new times of 0.001011905911381999227790311345357516371401356277113171096134392861631465255752102688768800931029545609
using 29298218182192155162155162152162 * 0.001011905911381999227790311345357516371401356277113171096134392861631465255752102688768800931029545609
29647040171519813467643434746.489871978759765625  with length of 47 and dot length 29 will move 18
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867687325423143330204455473774592  main number intpart lenght 63 
 fract 0 int 878946545465764654864654864564867687325423143330204455473774592
    -----------------> 29647040171519813467643434746.489871978759765625 ^2 ::== 878946990931709570754573643308348358853565089049804275712
 temp fract 0 temp int 878946990931709570754573643308348358853565089049804275712
before loop xstp is 0entering tens with lap of value 10
using t_rst as 296470401715198134676434347464.898712158203125
using for fract 87894699093170957075457364330834830445190320639149141393408
getting the part of 87894699093170957075457364330834830445190320639149141393408 :: ad 59 and mad 63
    -----------------> 296470401715198134676434347464.898712158203125 ^2 ::== 87894699093170957075457364330834830445190320639149141393408
t_ten increased 
using t_rst as 2964704017151981346764343474648.9873046875
using for fract 8789469909317095707545736433083484862743464764317192897429504
getting the part of 8789469909317095707545736433083484862743464764317192897429504 :: ad 61 and mad 63
    -----------------> 2964704017151981346764343474648.9873046875 ^2 ::== 8789469909317095707545736433083484862743464764317192897429504
t_ten increased 
using t_rst as 29647040171519813467643434746489.87109375
using for fract 878946990931709570754573643308348278300419876487833106690080768
getting the part of 878946990931709570754573643308348278300419876487833106690080768 :: ad 63 and mad 63
i push_back a near value of 29647040171519813467643434746489
stopping with ad 63 and mad of 63
    -----------------> 29647040171519813467643434746489.87109375 ^2 ::== 878946990931709570754573643308348278300419876487833106690080768
t_ten increased 
breaking with xbrk of value 1

increasing the digits 8
-------------------------------------------------------
-------------------------------------------------------
times 8 87894654 29298218
main 9375.214877537474340744708743012260967695356648055455136777942143355701887230679858475923538208007812 second 5412.782833256845156800144485440906212246841254950927547375644742488898231158600538037717342376708984
main 87894654 second 29298218.0000000000000000000000000032311742677852643549664402033982923967414535582065582275390625
times of 0.0003199926656814921078389378064909019215937635061010817859669139860187511920094709759465612108897403232
new times of 0.0003199926656814921078389378064909019215937635061010817859669139860187511920094709759465612108897403232
using 29298218182192155162155162152162 * 0.0003199926656814921078389378064909019215937635061010817859669139860187511920094709759465612108897403232
9375214935837627737338762076.76564884185791015625  with length of 48 and dot length 28 will move 20
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867687325423143330204455473774592  main number intpart lenght 63 
 fract 0 int 878946545465764654864654864564867687325423143330204455473774592
    -----------------> 9375214935837627737338762076.76564884185791015625 ^2 ::== 87894655093152934371838858979369109367374443892294287360
 temp fract 0 temp int 87894655093152934371838858979369109367374443892294287360
before loop xstp is 0entering tens with lap of value 10
using t_rst as 93752149358376277373387620767.656494140625
using for fract 8789465509315293437183885897936912372336855181601573699584
getting the part of 8789465509315293437183885897936912372336855181601573699584 :: ad 58 and mad 63
    -----------------> 93752149358376277373387620767.656494140625 ^2 ::== 8789465509315293437183885897936912372336855181601573699584
t_ten increased 
using t_rst as 937521493583762773733876207676.56494140625
using for fract 878946550931529343718388589793691198548059290492023779360768
getting the part of 878946550931529343718388589793691198548059290492023779360768 :: ad 60 and mad 63
    -----------------> 937521493583762773733876207676.56494140625 ^2 ::== 878946550931529343718388589793691198548059290492023779360768
t_ten increased 
using t_rst as 9375214935837627737338762076765.6484375
using for fract 87894655093152934371838858979369098809825261197737704650964992
getting the part of 87894655093152934371838858979369098809825261197737704650964992 :: ad 62 and mad 63
i push_back a near value of 9375214935837627737338762076765
stopping with ad 62 and mad of 63
    -----------------> 9375214935837627737338762076765.6484375 ^2 ::== 87894655093152934371838858979369098809825261197737704650964992
t_ten increased 
breaking with xbrk of value 1

increasing the digits 9
-------------------------------------------------------
-------------------------------------------------------
times 9 878946545 292982181
main 29647.03265084045472758795028768039383049128697748282144778294439069199484038108494132757186889648438 second 17116.72226216222741921515447279315076639880506730385204163099807650461059438384836539626121520996094
main 878946545 second 292982181
times of 0.0001011905657526675819495928671774082817065270192816785756446979117022598350316521043437689719723948656
new times of 0.0001011905657526675819495928671774082817065270192816785756446979117022598350316521043437689719723948656
using 29298218182192155162155162152162 * 0.0001011905657526675819495928671774082817065270192816785756446979117022598350316521043437689719723948656
2964703273401116154048313185.737000942230224609375  with length of 49 and dot length 28 will move 21
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867687325423143330204455473774592  main number intpart lenght 63 
 fract 0 int 878946545465764654864654864564867687325423143330204455473774592
    -----------------> 2964703273401116154048313185.737000942230224609375 ^2 ::== 8789465499315293278681306772805597268393122802752815104
 temp fract 0 temp int 8789465499315293278681306772805597268393122802752815104
before loop xstp is 0entering tens with lap of value 10
using t_rst as 29647032734011161540483131857.3700103759765625
using for fract 878946549931529327868130677280559759895877660362798006272
getting the part of 878946549931529327868130677280559759895877660362798006272 :: ad 57 and mad 63
    -----------------> 29647032734011161540483131857.3700103759765625 ^2 ::== 878946549931529327868130677280559759895877660362798006272
t_ten increased 
using t_rst as 296470327340111615404831318573.700103759765625
using for fract 87894654993152932786813067728055981429753954302111086804992
getting the part of 87894654993152932786813067728055981429753954302111086804992 :: ad 59 and mad 63
    -----------------> 296470327340111615404831318573.700103759765625 ^2 ::== 87894654993152932786813067728055981429753954302111086804992
t_ten increased 
using t_rst as 2964703273401116154048313185737.0009765625
using for fract 8789465499315293278681306772805598104289769202542975089901568
getting the part of 8789465499315293278681306772805598104289769202542975089901568 :: ad 61 and mad 63
    -----------------> 2964703273401116154048313185737.0009765625 ^2 ::== 8789465499315293278681306772805598104289769202542975089901568
t_ten increased 
using t_rst as 29647032734011161540483131857370.0078125
using for fract 878946549931529327868130677280559666827932363150185620691746816
getting the part of 878946549931529327868130677280559666827932363150185620691746816 :: ad 63 and mad 63
i push_back a near value of 29647032734011161540483131857370
stopping with ad 63 and mad of 63
    -----------------> 29647032734011161540483131857370.0078125 ^2 ::== 878946549931529327868130677280559666827932363150185620691746816
t_ten increased 
breaking with xbrk of value 1

increasing the digits 10
-------------------------------------------------------
-------------------------------------------------------
times 10 8789465454 2929821818
main 93752.14906336814207845240203253937714699402539928552753471010378083505543145292904227972030639648438 second 54127.82849884151781554157413712146694245178154941586778361398840653251340881979558616876602172851562
main 8789465453.9999999999999999999999983456387748939446502571826158600742928683757781982421875 second 2929821818
times of 3.199926646985197038984314165979747575157539909520423035918924435496802707817014113991782586765566521e-05
new times of 3.199926646985197038984314165979747575157539909520423035918924435496802707817014113991782586765566521e-05
using 29298218182192155162155162152162 * 3.199926646985197038984314165979747575157539909520423035918924435496802707817014113991782586765566521e-05
937521490703828777961588609.64442718029022216796875  with length of 50 and dot length 27 will move 23
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867687325423143330204455473774592  main number intpart lenght 63 
 fract 0 int 878946545465764654864654864564867687325423143330204455473774592
    -----------------> 937521490703828777961588609.64442718029022216796875 ^2 ::== 878946545531529309734230380848646727124808866277097472
 temp fract 0 temp int 878946545531529309734230380848646727124808866277097472
before loop xstp is 0entering tens with lap of value 10
using t_rst as 9375214907038287779615886096.44427204132080078125
using for fract 87894654553152930973423038084864676254255748779943657472
getting the part of 87894654553152930973423038084864676254255748779943657472 :: ad 56 and mad 63
    -----------------> 9375214907038287779615886096.44427204132080078125 ^2 ::== 87894654553152930973423038084864676254255748779943657472
t_ten increased 
using t_rst as 93752149070382877796158860964.442718505859375
using for fract 8789465455315293097342303808486466378720823400408029331456
getting the part of 8789465455315293097342303808486466378720823400408029331456 :: ad 58 and mad 63
    -----------------> 93752149070382877796158860964.442718505859375 ^2 ::== 8789465455315293097342303808486466378720823400408029331456
t_ten increased 
using t_rst as 937521490703828777961588609644.4271240234375
using for fract 878946545531529309734230380848646599186456112372669342547968
getting the part of 878946545531529309734230380848646599186456112372669342547968 :: ad 60 and mad 63
    -----------------> 937521490703828777961588609644.4271240234375 ^2 ::== 878946545531529309734230380848646599186456112372669342547968
t_ten increased 
using t_rst as 9375214907038287779615886096444.271484375
using for fract 87894654553152930973423038084864666727315827306858446199980032
getting the part of 87894654553152930973423038084864666727315827306858446199980032 :: ad 62 and mad 63
i push_back a near value of 9375214907038287779615886096444
stopping with ad 62 and mad of 63
    -----------------> 9375214907038287779615886096444.271484375 ^2 ::== 87894654553152930973423038084864666727315827306858446199980032
t_ten increased 
breaking with xbrk of value 1

increasing the digits 11
-------------------------------------------------------
-------------------------------------------------------
times 11 87894654546 29298218182
main 296470.32658598398083291272497742756366654003228393470296096745553171558640315197408199310302734375 second 171167.2228611541152967172351127140469946814852289177401464207589620869498503452632576227188110351562
main 87894654546.0000000000000000000000132348898008484427979425390731194056570529937744140625 second 29298218182.000000000000000000000003308722450212110699485634768279851414263248443603515625
times of 1.011905654959341516289185797344771598827380472038846705500165837729789773966136267463467035554458562e-05
new times of 1.011905654959341516289185797344771598827380472038846705500165837729789773966136267463467035554458562e-05
using 29298218182192155162155162152162 * 1.011905654959341516289185797344771598827380472038846705500165837729789773966136267463467035554458562e-05
296470326587928409785057103.2942701876163482666015625  with length of 52 and dot length 27 will move 25
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867687325423143330204455473774592  main number intpart lenght 63 
 fract 0 int 878946545465764654864654864564867687325423143330204455473774592
    -----------------> 296470326587928409785057103.2942701876163482666015625 ^2 ::== 87894654547152930972934753716921944620355621360762880
 temp fract 0 temp int 87894654547152930972934753716921944620355621360762880
before loop xstp is 0entering tens with lap of value 10
using t_rst as 2964703265879284097850571032.942701816558837890625
using for fract 8789465454715293097293475371692193539698358450598707200
getting the part of 8789465454715293097293475371692193539698358450598707200 :: ad 55 and mad 63
    -----------------> 2964703265879284097850571032.942701816558837890625 ^2 ::== 8789465454715293097293475371692193539698358450598707200
t_ten increased 
using t_rst as 29647032658792840978505710329.4270172119140625
using for fract 878946545471529309729347537169219368136935293668806361088
getting the part of 878946545471529309729347537169219368136935293668806361088 :: ad 57 and mad 63
    -----------------> 29647032658792840978505710329.4270172119140625 ^2 ::== 878946545471529309729347537169219368136935293668806361088
t_ten increased 
using t_rst as 296470326587928409785057103294.27020263671875
using for fract 87894654547152930972934753716921947694025905898543208464384
getting the part of 87894654547152930972934753716921947694025905898543208464384 :: ad 59 and mad 63
    -----------------> 296470326587928409785057103294.27020263671875 ^2 ::== 87894654547152930972934753716921947694025905898543208464384
t_ten increased 
using t_rst as 2964703265879284097850571032942.70166015625
using for fract 8789465454715293097293475371692193376720046393801511584923648
getting the part of 8789465454715293097293475371692193376720046393801511584923648 :: ad 61 and mad 63
    -----------------> 2964703265879284097850571032942.70166015625 ^2 ::== 8789465454715293097293475371692193376720046393801511584923648
t_ten increased 
using t_rst as 29647032658792840978505710329427.01953125
using for fract 878946545471529309729347537169219456514248410776657548808290304
getting the part of 878946545471529309729347537169219456514248410776657548808290304 :: ad 63 and mad 63
i push_back a near value of 29647032658792840978505710329427
stopping with ad 63 and mad of 63
    -----------------> 29647032658792840978505710329427.01953125 ^2 ::== 878946545471529309729347537169219456514248410776657548808290304
t_ten increased 
breaking with xbrk of value 1

increasing the digits 12
-------------------------------------------------------
-------------------------------------------------------
times 12 878946545465 292982181821
main 937521.490668347292792889417508933962014530607032781659403164464805513489409349858760833740234375 second 541278.285007813702520819716657316246914067098663090040421529136605016674366197548806667327880859375
main 878946545465 second 292982181821
times of 3.199926646874157564241785944198523344218615856853316796112364297047603446963105918148667639044901989e-06
new times of 3.199926646874157564241785944198523344218615856853316796112364297047603446963105918148667639044901989e-06
using 29298218182192155162155162152162 * 3.199926646874157564241785944198523344218615856853316796112364297047603446963105918148667639044901989e-06
93752149067129619038316254.04012914001941680908203125  with length of 52 and dot length 26 will move 26
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867687325423143330204455473774592  main number intpart lenght 63 
 fract 0 int 878946545465764654864654864564867687325423143330204455473774592
    -----------------> 93752149067129619038316254.04012914001941680908203125 ^2 ::== 8789465454705293097293310068013550645112493597261824
 temp fract 0 temp int 8789465454705293097293310068013550645112493597261824
before loop xstp is 0entering tens with lap of value 10
using t_rst as 937521490671296190383162540.401291370391845703125
using for fract 878946545470529309729331006801355046064505286016630784
getting the part of 878946545470529309729331006801355046064505286016630784 :: ad 54 and mad 63
    -----------------> 937521490671296190383162540.401291370391845703125 ^2 ::== 878946545470529309729331006801355046064505286016630784
t_ten increased 
using t_rst as 9375214906712961903831625404.01291370391845703125
using for fract 87894654547052930972933100680135495752013373221078302720
getting the part of 87894654547052930972933100680135495752013373221078302720 :: ad 56 and mad 63
    -----------------> 9375214906712961903831625404.01291370391845703125 ^2 ::== 87894654547052930972933100680135495752013373221078302720
t_ten increased 
using t_rst as 93752149067129619038316254040.1291351318359375
using for fract 8789465454705293097293310068013549197412018692536213176320
getting the part of 8789465454705293097293310068013549197412018692536213176320 :: ad 58 and mad 63
    -----------------> 93752149067129619038316254040.1291351318359375 ^2 ::== 8789465454705293097293310068013549197412018692536213176320
t_ten increased 
using t_rst as 937521490671296190383162540401.2913818359375
using for fract 878946545470529309729331006801354972933937932297305004703744
getting the part of 878946545470529309729331006801354972933937932297305004703744 :: ad 60 and mad 63
    -----------------> 937521490671296190383162540401.2913818359375 ^2 ::== 878946545470529309729331006801354972933937932297305004703744
t_ten increased 
using t_rst as 9375214906712961903831625404012.9140625
using for fract 87894654547052930972933100680135499769273871800491050268622848
getting the part of 87894654547052930972933100680135499769273871800491050268622848 :: ad 62 and mad 63
i push_back a near value of 9375214906712961903831625404012
stopping with ad 62 and mad of 63
    -----------------> 9375214906712961903831625404012.9140625 ^2 ::== 87894654547052930972933100680135499769273871800491050268622848
t_ten increased 
breaking with xbrk of value 1

increasing the digits 13
-------------------------------------------------------
-------------------------------------------------------
times 13 8789465454657 2929821818219
main 2964703.2658694529120512254088480664740294246765950740844959565567506842853617854416370391845703125 second 1711672.22861709128098887351665540704246439638854191466290667611449549667668179608881473541259765625
main 8789465454657.0000000000000000000008470329472543003390683225006796419620513916015625 second 2929821818219
times of 1.011905654956060393982583203824677380924143379930579309177325273040486013198626839100155438977424183e-06
new times of 1.011905654956060393982583203824677380924143379930579309177325273040486013198626839100155438977424183e-06
using 29298218182192155162155162152162 * 1.011905654956060393982583203824677380924143379930579309177325273040486013198626839100155438977424183e-06
29647032658696709941284409.96071936190128326416015625  with length of 52 and dot length 26 will move 26
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867687325423143330204455473774592  main number intpart lenght 63 
 fract 0 int 878946545465764654864654864564867687325423143330204455473774592
    -----------------> 29647032658696709941284409.96071936190128326416015625 ^2 ::== 878946545465829309729309733885699314016187502821376
 temp fract 0 temp int 878946545465829309729309733885699314016187502821376
before loop xstp is 0entering tens with lap of value 10
using t_rst as 296470326586967099412844099.6071936190128326416015625
using for fract 87894654546582930972930973388569940048530034833489920
getting the part of 87894654546582930972930973388569940048530034833489920 :: ad 53 and mad 63
    -----------------> 296470326586967099412844099.6071936190128326416015625 ^2 ::== 87894654546582930972930973388569940048530034833489920
t_ten increased 
using t_rst as 2964703265869670994128440996.071936130523681640625
using for fract 8789465454658293097293097338856993230089752387547824128
getting the part of 8789465454658293097293097338856993230089752387547824128 :: ad 55 and mad 63
    -----------------> 2964703265869670994128440996.071936130523681640625 ^2 ::== 8789465454658293097293097338856993230089752387547824128
t_ten increased 
using t_rst as 29647032658696709941284409960.7193603515625
using for fract 878946545465829309729309733885699209672179649883297284096
getting the part of 878946545465829309729309733885699209672179649883297284096 :: ad 57 and mad 63
    -----------------> 29647032658696709941284409960.7193603515625 ^2 ::== 878946545465829309729309733885699209672179649883297284096
t_ten increased 
using t_rst as 296470326586967099412844099607.193634033203125
using for fract 87894654546582930972930973388569949981437635739429921357824
getting the part of 87894654546582930972930973388569949981437635739429921357824 :: ad 59 and mad 63
    -----------------> 296470326586967099412844099607.193634033203125 ^2 ::== 87894654546582930972930973388569949981437635739429921357824
t_ten increased 
using t_rst as 2964703265869670994128440996071.93603515625
using for fract 8789465454658293097293097338856993141233704645872579787096064
getting the part of 8789465454658293097293097338856993141233704645872579787096064 :: ad 61 and mad 63
    -----------------> 2964703265869670994128440996071.93603515625 ^2 ::== 8789465454658293097293097338856993141233704645872579787096064
t_ten increased 
using t_rst as 29647032658696709941284409960719.36328125
using for fract 878946545465829309729309733885699477531455650257454265394003968
getting the part of 878946545465829309729309733885699477531455650257454265394003968 :: ad 63 and mad 63
i push_back a near value of 29647032658696709941284409960719
stopping with ad 63 and mad of 63
    -----------------> 29647032658696709941284409960719.36328125 ^2 ::== 878946545465829309729309733885699477531455650257454265394003968
t_ten increased 
breaking with xbrk of value 1

increasing the digits 14
-------------------------------------------------------
-------------------------------------------------------
times 14 87894654546576 29298218182192
main 9375214.90668752616834825800887280262320472882957004992325600323255230250651948153972625732421875 second 5412782.85008663542635859614273087470598932454884659091175203027290763202472589910030364990234375
main 87894654546576 second 29298218182191.99999999999999999999661186821098279864372670999728143215179443359375
times of 3.199926646865492844573847725145931257086744516087911846070743704305282659900152540937302153567500795e-07
new times of 3.199926646865492844573847725145931257086744516087911846070743704305282659900152540937302153567500795e-07
using 29298218182192155162155162152162 * 3.199926646865492844573847725145931257086744516087911846070743704305282659900152540937302153567500795e-07
9375214906687575819099746.85376169718801975250244140625  with length of 54 and dot length 25 will move 29
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867687325423143330204455473774592  main number intpart lenght 63 
 fract 0 int 878946545465764654864654864564867687325423143330204455473774592
    -----------------> 9375214906687575819099746.85376169718801975250244140625 ^2 ::== 87894654546576930972930972915437223324931044933632
 temp fract 0 temp int 87894654546576930972930972915437223324931044933632
before loop xstp is 0entering tens with lap of value 10
using t_rst as 93752149066875758190997468.5376169681549072265625
using for fract 8789465454657693097293097291543721323686787962372096
getting the part of 8789465454657693097293097291543721323686787962372096 :: ad 52 and mad 63
    -----------------> 93752149066875758190997468.5376169681549072265625 ^2 ::== 8789465454657693097293097291543721323686787962372096
t_ten increased 
using t_rst as 937521490668757581909974685.376169681549072265625
using for fract 878946545465769309729309729154372178485538980511088640
getting the part of 878946545465769309729309729154372178485538980511088640 :: ad 54 and mad 63
    -----------------> 937521490668757581909974685.376169681549072265625 ^2 ::== 878946545465769309729309729154372178485538980511088640
t_ten increased 
using t_rst as 9375214906687575819099746853.76169681549072265625
using for fract 87894654546576930972930972915437207813525121953112784896
getting the part of 87894654546576930972930972915437207813525121953112784896 :: ad 56 and mad 63
    -----------------> 9375214906687575819099746853.76169681549072265625 ^2 ::== 87894654546576930972930972915437207813525121953112784896
t_ten increased 
using t_rst as 93752149066875758190997468537.616973876953125
using for fract 8789465454657693097293097291543722708078037206126525677568
getting the part of 8789465454657693097293097291543722708078037206126525677568 :: ad 58 and mad 63
    -----------------> 93752149066875758190997468537.616973876953125 ^2 ::== 8789465454657693097293097291543722708078037206126525677568
t_ten increased 
using t_rst as 937521490668757581909974685376.169677734375
using for fract 878946545465769309729309729154372048365452911520884421820416
getting the part of 878946545465769309729309729154372048365452911520884421820416 :: ad 60 and mad 63
    -----------------> 937521490668757581909974685376.169677734375 ^2 ::== 878946545465769309729309729154372048365452911520884421820416
t_ten increased 
using t_rst as 9375214906687575819099746853761.697265625
using for fract 87894654546576930972930972915437225262555939360862978017591296
getting the part of 87894654546576930972930972915437225262555939360862978017591296 :: ad 62 and mad 63
i push_back a near value of 9375214906687575819099746853761
stopping with ad 62 and mad of 63
    -----------------> 9375214906687575819099746853761.697265625 ^2 ::== 87894654546576930972930972915437225262555939360862978017591296
t_ten increased 
breaking with xbrk of value 1

increasing the digits 15
-------------------------------------------------------
-------------------------------------------------------
times 15 878946545465764 292982181821921
main 29647032.65869560848654420719991921919208754642176446847390280936451745219528675079345703125 second 17116722.28617152624509113271089864630025120548236622873561341151571468799374997615814208984375
main 878946545465764 second 292982181821920.9999999999999999999457898913757247782996273599565029144287109375
times of 1.011905654956024704582055421262649038184313072388729451014482157865681012867569440007772113565565064e-07
new times of 1.011905654956024704582055421262649038184313072388729451014482157865681012867569440007772113565565064e-07
using 29298218182192155162155162152162 * 1.011905654956024704582055421262649038184313072388729451014482157865681012867569440007772113565565064e-07
2964703265869566430544095.5343361855484545230865478515625  with length of 56 and dot length 25 will move 31
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867687325423143330204455473774592  main number intpart lenght 63 
 fract 0 int 878946545465764654864654864564867687325423143330204455473774592
    -----------------> 2964703265869566430544095.5343361855484545230865478515625 ^2 ::== 8789465454657673097293097291366017021946829471744
 temp fract 0 temp int 8789465454657673097293097291366017021946829471744
before loop xstp is 0entering tens with lap of value 10
using t_rst as 29647032658695664305440955.34336185455322265625
using for fract 878946545465767309729309729136601648151487418728448
getting the part of 878946545465767309729309729136601648151487418728448 :: ad 51 and mad 63
    -----------------> 29647032658695664305440955.34336185455322265625 ^2 ::== 878946545465767309729309729136601648151487418728448
t_ten increased 
using t_rst as 296470326586956643054409553.4336185455322265625
using for fract 87894654546576730972930972913660161356384228052303872
getting the part of 87894654546576730972930972913660161356384228052303872 :: ad 53 and mad 63
    -----------------> 296470326586956643054409553.4336185455322265625 ^2 ::== 87894654546576730972930972913660161356384228052303872
t_ten increased 
using t_rst as 2964703265869566430544095534.336185455322265625
using for fract 8789465454657673097293097291366016910401673901031555072
getting the part of 8789465454657673097293097291366016910401673901031555072 :: ad 55 and mad 63
    -----------------> 2964703265869566430544095534.336185455322265625 ^2 ::== 8789465454657673097293097291366016910401673901031555072
t_ten increased 
using t_rst as 29647032658695664305440955343.36185455322265625
using for fract 878946545465767309729309729136601596592837732710251233280
getting the part of 878946545465767309729309729136601596592837732710251233280 :: ad 57 and mad 63
    -----------------> 29647032658695664305440955343.36185455322265625 ^2 ::== 878946545465767309729309729136601596592837732710251233280
t_ten increased 
using t_rst as 296470326586956643054409553433.618560791015625
using for fract 87894654546576730972930972913660176584245247875833569214464
getting the part of 87894654546576730972930972913660176584245247875833569214464 :: ad 59 and mad 63
    -----------------> 296470326586956643054409553433.618560791015625 ^2 ::== 87894654546576730972930972913660176584245247875833569214464
t_ten increased 
using t_rst as 2964703265869566430544095534336.185546875
using for fract 8789465454657673097293097291366016768655121551216284337700864
getting the part of 8789465454657673097293097291366016768655121551216284337700864 :: ad 61 and mad 63
    -----------------> 2964703265869566430544095534336.185546875 ^2 ::== 8789465454657673097293097291366016768655121551216284337700864
t_ten increased 
using t_rst as 29647032658695664305440955343361.85546875
using for fract 878946545465767309729309729136601666961991840838586234577092608
getting the part of 878946545465767309729309729136601666961991840838586234577092608 :: ad 63 and mad 63
i push_back a near value of 29647032658695664305440955343361
stopping with ad 63 and mad of 63
    -----------------> 29647032658695664305440955343361.85546875 ^2 ::== 878946545465767309729309729136601666961991840838586234577092608
t_ten increased 
breaking with xbrk of value 1

increasing the digits 16
-------------------------------------------------------
-------------------------------------------------------
times 16 8789465454657646 2929821818219215
main 93752149.06687550701119217310952513122915767011390894732081324747241524164564907550811767578125 second 54127828.500866492824474283040794206440121118209906465011671539144799680798314511775970458984375
main 8789465454657646 second 2929821818219215
times of 3.199926646865484835169112681108075371089217323164233739078763962419393842402100025905918069535349701e-08
new times of 3.199926646865484835169112681108075371089217323164233739078763962419393842402100025905918069535349701e-08
using 29298218182192155162155162152162 * 3.199926646865484835169112681108075371089217323164233739078763962419393842402100025905918069535349701e-08
937521490668755235297100.317344460287131369113922119140625  with length of 57 and dot length 24 will move 33
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867687325423143330204455473774592  main number intpart lenght 63 
 fract 0 int 878946545465764654864654864564867687325423143330204455473774592
    -----------------> 937521490668755235297100.317344460287131369113922119140625 ^2 ::== 878946545465764909729309729129782563727839592448
 temp fract 0 temp int 878946545465764909729309729129782563727839592448
before loop xstp is 0entering tens with lap of value 10
using t_rst as 9375214906687552352971003.1734446026384830474853515625
using for fract 87894654546576490972930972912978245676734844239872
getting the part of 87894654546576490972930972912978245676734844239872 :: ad 50 and mad 63
    -----------------> 9375214906687552352971003.1734446026384830474853515625 ^2 ::== 87894654546576490972930972912978245676734844239872
t_ten increased 
using t_rst as 93752149066875523529710031.73444603383541107177734375
using for fract 8789465454657649097293097291297826297055741334257664
getting the part of 8789465454657649097293097291297826297055741334257664 :: ad 52 and mad 63
    -----------------> 93752149066875523529710031.73444603383541107177734375 ^2 ::== 8789465454657649097293097291297826297055741334257664
t_ten increased 
using t_rst as 937521490668755235297100317.3444602489471435546875
using for fract 878946545465764909729309729129782403732959230483759104
getting the part of 878946545465764909729309729129782403732959230483759104 :: ad 54 and mad 63
    -----------------> 937521490668755235297100317.3444602489471435546875 ^2 ::== 878946545465764909729309729129782403732959230483759104
t_ten increased 
using t_rst as 9375214906687552352971003173.44460296630859375
using for fract 87894654546576490972930972912978250408324699146371989504
getting the part of 87894654546576490972930972912978250408324699146371989504 :: ad 56 and mad 63
    -----------------> 9375214906687552352971003173.44460296630859375 ^2 ::== 87894654546576490972930972912978250408324699146371989504
t_ten increased 
using t_rst as 93752149066875523529710031734.4460296630859375
using for fract 8789465454657649097293097291297825191948197366465845788672
getting the part of 8789465454657649097293097291297825191948197366465845788672 :: ad 58 and mad 63
    -----------------> 93752149066875523529710031734.4460296630859375 ^2 ::== 8789465454657649097293097291297825191948197366465845788672
t_ten increased 
using t_rst as 937521490668755235297100317344.4603271484375
using for fract 878946545465764909729309729129782644923104976568018748309504
getting the part of 878946545465764909729309729129782644923104976568018748309504 :: ad 60 and mad 63
    -----------------> 937521490668755235297100317344.4603271484375 ^2 ::== 878946545465764909729309729129782644923104976568018748309504
t_ten increased 
using t_rst as 9375214906687552352971003173444.6025390625
using for fract 87894654546576490972930972912978248399089986946858301142335488
getting the part of 87894654546576490972930972912978248399089986946858301142335488 :: ad 62 and mad 63
i push_back a near value of 9375214906687552352971003173444
stopping with ad 62 and mad of 63
    -----------------> 9375214906687552352971003173444.6025390625 ^2 ::== 87894654546576490972930972912978248399089986946858301142335488
t_ten increased 
breaking with xbrk of value 1

increasing the digits 17
-------------------------------------------------------
-------------------------------------------------------
times 17 87894654546576465 29298218182192155
main 296470326.586956194488554692235056886446225509637131083351402338621483067981898784637451171875 second 171167222.8617154231125119550343128713758026668883736008675011674995403154753148555755615234375
main 87894654546576465.00000000000000001387778780781445675529539585113525390625 second 29298218182192155
times of 1.011905654956023179148000604834751198223622016970026527648826654261781527769620601029228407555238256e-08
new times of 1.011905654956023179148000604834751198223622016970026527648826654261781527769620601029228407555238256e-08
using 29298218182192155162155162152162 * 1.011905654956023179148000604834751198223622016970026527648826654261781527769620601029228407555238256e-08
296470326586956196129411.947855893173255026340484619140625  with length of 57 and dot length 24 will move 33
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867687325423143330204455473774592  main number intpart lenght 63 
 fract 0 int 878946545465764654864654864564867687325423143330204455473774592
    -----------------> 296470326586956196129411.947855893173255026340484619140625 ^2 ::== 87894654546576465972930972912972001334670655488
 temp fract 0 temp int 87894654546576465972930972912972001334670655488
before loop xstp is 0entering tens with lap of value 10
using t_rst as 2964703265869561961294119.4785589314997196197509765625
using for fract 8789465454657646597293097291297198620539065729024
getting the part of 8789465454657646597293097291297198620539065729024 :: ad 49 and mad 63
    -----------------> 2964703265869561961294119.4785589314997196197509765625 ^2 ::== 8789465454657646597293097291297198620539065729024
t_ten increased 
using t_rst as 29647032658695619612941194.7855893187224864959716796875
using for fract 878946545465764659729309729129720114255485705650176
getting the part of 878946545465764659729309729129720114255485705650176 :: ad 51 and mad 63
    -----------------> 29647032658695619612941194.7855893187224864959716796875 ^2 ::== 878946545465764659729309729129720114255485705650176
t_ten increased 
using t_rst as 296470326586956196129411947.8558931648731231689453125
using for fract 87894654546576465972930972912971998166951267586277376
getting the part of 87894654546576465972930972912971998166951267586277376 :: ad 53 and mad 63
    -----------------> 296470326586956196129411947.8558931648731231689453125 ^2 ::== 87894654546576465972930972912971998166951267586277376
t_ten increased 
using t_rst as 2964703265869561961294119478.558931827545166015625
using for fract 8789465454657646597293097291297200591458377854428905472
getting the part of 8789465454657646597293097291297200591458377854428905472 :: ad 55 and mad 63
    -----------------> 2964703265869561961294119478.558931827545166015625 ^2 ::== 8789465454657646597293097291297200591458377854428905472
t_ten increased 
using t_rst as 29647032658695619612941194785.58931732177734375
using for fract 878946545465764659729309729129720129981335028487568752640
getting the part of 878946545465764659729309729129720129981335028487568752640 :: ad 57 and mad 63
    -----------------> 29647032658695619612941194785.58931732177734375 ^2 ::== 878946545465764659729309729129720129981335028487568752640
t_ten increased 
using t_rst as 296470326586956196129411947855.8931884765625
using for fract 87894654546576465972930972912972018438299691114588161441792
getting the part of 87894654546576465972930972912972018438299691114588161441792 :: ad 59 and mad 63
    -----------------> 296470326586956196129411947855.8931884765625 ^2 ::== 87894654546576465972930972912972018438299691114588161441792
t_ten increased 
using t_rst as 2964703265869561961294119478558.931640625
using for fract 8789465454657646597293097291297200489833051143074140473262080
getting the part of 8789465454657646597293097291297200489833051143074140473262080 :: ad 61 and mad 63
    -----------------> 2964703265869561961294119478558.931640625 ^2 ::== 8789465454657646597293097291297200489833051143074140473262080
t_ten increased 
using t_rst as 29647032658695619612941194785589.31640625
using for fract 878946545465764659729309729129720024224504328599808549343723520
getting the part of 878946545465764659729309729129720024224504328599808549343723520 :: ad 63 and mad 63
i push_back a near value of 29647032658695619612941194785589
stopping with ad 63 and mad of 63
    -----------------> 29647032658695619612941194785589.31640625 ^2 ::== 878946545465764659729309729129720024224504328599808549343723520
t_ten increased 
breaking with xbrk of value 1

increasing the digits 18
-------------------------------------------------------
-------------------------------------------------------
times 18 878946545465764654 292982181821921551
main 937521490.66875509891126155288461114149123412709924303698461045541989733465015888214111328125 second 541278285.0086649753554448597564647776033076710211315585308256004282156936824321746826171875
main 878946545465764654.00000000000000011102230246251565404236316680908203125 second 292982181821921551
times of 3.199926646865484376448659674042295965976132087104373871479329463857875597856996471695918780181466801e-09
new times of 3.199926646865484376448659674042295965976132087104373871479329463857875597856996471695918780181466801e-09
using 29298218182192155162155162152162 * 3.199926646865484376448659674042295965976132087104373871479329463857875597856996471695918780181466801e-09
93752149066875510090018.114899409338249824941158294677734375  with length of 59 and dot length 23 will move 36
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867687325423143330204455473774592  main number intpart lenght 63 
 fract 0 int 878946545465764654864654864564867687325423143330204455473774592
    -----------------> 93752149066875510090018.114899409338249824941158294677734375 ^2 ::== 8789465454657646577293097291297203386153172992
 temp fract 0 temp int 8789465454657646577293097291297203386153172992
before loop xstp is 0entering tens with lap of value 10
using t_rst as 937521490668755100900181.148994093411602079868316650390625
using for fract 878946545465764657729309729129720413382107987968
getting the part of 878946545465764657729309729129720413382107987968 :: ad 48 and mad 63
    -----------------> 937521490668755100900181.148994093411602079868316650390625 ^2 ::== 878946545465764657729309729129720413382107987968
t_ten increased 
using t_rst as 9375214906687551009001811.489940933883190155029296875
using for fract 87894654546576465772930972912972029516261776949248
getting the part of 87894654546576465772930972912972029516261776949248 :: ad 50 and mad 63
    -----------------> 9375214906687551009001811.489940933883190155029296875 ^2 ::== 87894654546576465772930972912972029516261776949248
t_ten increased 
using t_rst as 93752149066875510090018114.89940933883190155029296875
using for fract 8789465454657646577293097291297203672202118074204160
getting the part of 8789465454657646577293097291297203672202118074204160 :: ad 52 and mad 63
    -----------------> 93752149066875510090018114.89940933883190155029296875 ^2 ::== 8789465454657646577293097291297203672202118074204160
t_ten increased 
using t_rst as 937521490668755100900181148.994093418121337890625
using for fract 878946545465764657729309729129720357996839770565640192
getting the part of 878946545465764657729309729129720357996839770565640192 :: ad 54 and mad 63
    -----------------> 937521490668755100900181148.994093418121337890625 ^2 ::== 878946545465764657729309729129720357996839770565640192
t_ten increased 
using t_rst as 9375214906687551009001811489.94093418121337890625
using for fract 87894654546576465772930972912972036389979787415269670912
getting the part of 87894654546576465772930972912972036389979787415269670912 :: ad 56 and mad 63
    -----------------> 9375214906687551009001811489.94093418121337890625 ^2 ::== 87894654546576465772930972912972036389979787415269670912
t_ten increased 
using t_rst as 93752149066875510090018114899.409332275390625
using for fract 8789465454657646577293097291297202203398567949154822127616
getting the part of 8789465454657646577293097291297202203398567949154822127616 :: ad 58 and mad 63
    -----------------> 93752149066875510090018114899.409332275390625 ^2 ::== 8789465454657646577293097291297202203398567949154822127616
t_ten increased 
using t_rst as 937521490668755100900181148994.0933837890625
using for fract 878946545465764657729309729129720268696889579500649201008640
getting the part of 878946545465764657729309729129720268696889579500649201008640 :: ad 60 and mad 63
    -----------------> 937521490668755100900181148994.0933837890625 ^2 ::== 878946545465764657729309729129720268696889579500649201008640
t_ten increased 
using t_rst as 9375214906687551009001811489940.93359375
using for fract 87894654546576465772930972912972024393808879379304370302615552
getting the part of 87894654546576465772930972912972024393808879379304370302615552 :: ad 62 and mad 63
i push_back a near value of 9375214906687551009001811489940
stopping with ad 62 and mad of 63
    -----------------> 9375214906687551009001811489940.93359375 ^2 ::== 87894654546576465772930972912972024393808879379304370302615552
t_ten increased 
breaking with xbrk of value 1

increasing the digits 19
-------------------------------------------------------
-------------------------------------------------------
times 19 8789465454657646548 2929821818219215516
main 2964703265.869561952980792161998754196428381213544549221960977547496440820395946502685546875 second 1711672228.6171542357989115686100451237584425034162112500002450587999192066490650177001953125
main 8789465454657646548 second 2929821818219215516
times of 1.011905654956023176384950241393679324858079324121536944965260774750684085669981866455095309651618374e-09
new times of 1.011905654956023176384950241393679324858079324121536944965260774750684085669981866455095309651618374e-09
using 29298218182192155162155162152162 * 1.011905654956023176384950241393679324858079324121536944965260774750684085669981866455095309651618374e-09
29647032658695619531988.7423891074649873189628124237060546875  with length of 60 and dot length 23 will move 37
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867687325423143330204455473774592  main number intpart lenght 63 
 fract 0 int 878946545465764654864654864564867687325423143330204455473774592
    -----------------> 29647032658695619531988.7423891074649873189628124237060546875 ^2 ::== 878946545465764654929309729129720191459000320
 temp fract 0 temp int 878946545465764654929309729129720191459000320
before loop xstp is 0entering tens with lap of value 10
using t_rst as 296470326586956195319887.4238910746644251048564910888671875
using for fract 87894654546576465492930972912972021344923287552
getting the part of 87894654546576465492930972912972021344923287552 :: ad 47 and mad 63
    -----------------> 296470326586956195319887.4238910746644251048564910888671875 ^2 ::== 87894654546576465492930972912972021344923287552
t_ten increased 
using t_rst as 2964703265869561953198874.2389107462950050830841064453125
using for fract 8789465454657646549293097291297199917876887158784
getting the part of 8789465454657646549293097291297199917876887158784 :: ad 49 and mad 63
    -----------------> 2964703265869561953198874.2389107462950050830841064453125 ^2 ::== 8789465454657646549293097291297199917876887158784
t_ten increased 
using t_rst as 29647032658695619531988742.3891074657440185546875
using for fract 878946545465764654929309729129720144910076046475264
getting the part of 878946545465764654929309729129720144910076046475264 :: ad 51 and mad 63
    -----------------> 29647032658695619531988742.3891074657440185546875 ^2 ::== 878946545465764654929309729129720144910076046475264
t_ten increased 
using t_rst as 296470326586956195319887423.891074657440185546875
using for fract 87894654546576465492930972912972024290840393805725696
getting the part of 87894654546576465492930972912972024290840393805725696 :: ad 53 and mad 63
    -----------------> 296470326586956195319887423.891074657440185546875 ^2 ::== 87894654546576465492930972912972024290840393805725696
t_ten increased 
using t_rst as 2964703265869561953198874238.91074657440185546875
using for fract 8789465454657646549293097291297202097042646053800640512
getting the part of 8789465454657646549293097291297202097042646053800640512 :: ad 55 and mad 63
    -----------------> 2964703265869561953198874238.91074657440185546875 ^2 ::== 8789465454657646549293097291297202097042646053800640512
t_ten increased 
using t_rst as 29647032658695619531988742389.107463836669921875
using for fract 878946545465764654929309729129720086922736050769288495104
getting the part of 878946545465764654929309729129720086922736050769288495104 :: ad 57 and mad 63
    -----------------> 29647032658695619531988742389.107463836669921875 ^2 ::== 878946545465764654929309729129720086922736050769288495104
t_ten increased 
using t_rst as 296470326586956195319887423891.07464599609375
using for fract 87894654546576465492930972912972013527976883535445548335104
getting the part of 87894654546576465492930972912972013527976883535445548335104 :: ad 59 and mad 63
    -----------------> 296470326586956195319887423891.07464599609375 ^2 ::== 87894654546576465492930972912972013527976883535445548335104
t_ten increased 
using t_rst as 2964703265869561953198874238910.74658203125
using for fract 8789465454657646549293097291297202049138960451570959464267776
getting the part of 8789465454657646549293097291297202049138960451570959464267776 :: ad 61 and mad 63
    -----------------> 2964703265869561953198874238910.74658203125 ^2 ::== 8789465454657646549293097291297202049138960451570959464267776
t_ten increased 
using t_rst as 29647032658695619531988742389107.46484375
using for fract 878946545465764654929309729129720076168131959477547356917858304
getting the part of 878946545465764654929309729129720076168131959477547356917858304 :: ad 63 and mad 63
i push_back a near value of 29647032658695619531988742389107
stopping with ad 63 and mad of 63
    -----------------> 29647032658695619531988742389107.46484375 ^2 ::== 878946545465764654929309729129720076168131959477547356917858304
t_ten increased 
breaking with xbrk of value 1

increasing the digits 20
-------------------------------------------------------
-------------------------------------------------------
times 20 87894654546576465486 29298218182192155162
main 9375214906.6875509936991770560199720501231041990160275378940468726796098053455352783203125 second 5412782850.08664975928163198152466352562286292806302545610463994307792745530605316162109375
main 87894654546576465486 second 29298218182192155161.999999999999996447286321199499070644378662109375
times of 3.199926646865484371242546596263693120048089456407054833454340198651258966481014202947492100709628304e-10
new times of 3.199926646865484371242546596263693120048089456407054833454340198651258966481014202947492100709628304e-10
using 29298218182192155162155162152162 * 3.199926646865484371242546596263693120048089456407054833454340198651258966481014202947492100709628304e-10
9375214906687550993748.8278065487911590025760233402252197265625  with length of 62 and dot length 22 will move 40
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867687325423143330204455473774592  main number intpart lenght 63 
 fract 0 int 878946545465764654864654864564867687325423143330204455473774592
    -----------------> 9375214906687550993748.8278065487911590025760233402252197265625 ^2 ::== 87894654546576465486930972912972026762756096
 temp fract 0 temp int 87894654546576465486930972912972026762756096
before loop xstp is 0entering tens with lap of value 10
using t_rst as 93752149066875509937488.2780654879170469939708709716796875
using for fract 8789465454657646548693097291297202951153516544
getting the part of 8789465454657646548693097291297202951153516544 :: ad 46 and mad 63
    -----------------> 93752149066875509937488.2780654879170469939708709716796875 ^2 ::== 8789465454657646548693097291297202951153516544
t_ten increased 
using t_rst as 937521490668755099374882.780654879170469939708709716796875
using for fract 878946545465764654869309729129720317105584209920
getting the part of 878946545465764654869309729129720317105584209920 :: ad 48 and mad 63
    -----------------> 937521490668755099374882.780654879170469939708709716796875 ^2 ::== 878946545465764654869309729129720317105584209920
t_ten increased 
using t_rst as 9375214906687550993748827.80654879100620746612548828125
using for fract 87894654546576465486930972912972021014509305987072
getting the part of 87894654546576465486930972912972021014509305987072 :: ad 50 and mad 63
    -----------------> 9375214906687550993748827.80654879100620746612548828125 ^2 ::== 87894654546576465486930972912972021014509305987072
t_ten increased 
using t_rst as 93752149066875509937488278.06548790633678436279296875
using for fract 8789465454657646548693097291297201885278148484923392
getting the part of 8789465454657646548693097291297201885278148484923392 :: ad 52 and mad 63
    -----------------> 93752149066875509937488278.06548790633678436279296875 ^2 ::== 8789465454657646548693097291297201885278148484923392
t_ten increased 
using t_rst as 937521490668755099374882780.654879093170166015625
using for fract 878946545465764654869309729129720174692756793210175488
getting the part of 878946545465764654869309729129720174692756793210175488 :: ad 54 and mad 63
    -----------------> 937521490668755099374882780.654879093170166015625 ^2 ::== 878946545465764654869309729129720174692756793210175488
t_ten increased 
using t_rst as 9375214906687550993748827806.54879093170166015625
using for fract 87894654546576465486930972912972018649867300038428852224
getting the part of 87894654546576465486930972912972018649867300038428852224 :: ad 56 and mad 63
    -----------------> 9375214906687550993748827806.54879093170166015625 ^2 ::== 87894654546576465486930972912972018649867300038428852224
t_ten increased 
using t_rst as 93752149066875509937488278065.4879150390625
using for fract 8789465454657646548693097291297202809460026577771927961600
getting the part of 8789465454657646548693097291297202809460026577771927961600 :: ad 58 and mad 63
    -----------------> 93752149066875509937488278065.4879150390625 ^2 ::== 8789465454657646548693097291297202809460026577771927961600
t_ten increased 
using t_rst as 937521490668755099374882780654.879150390625
using for fract 878946545465764654869309729129720285781705936235709494984704
getting the part of 878946545465764654869309729129720285781705936235709494984704 :: ad 60 and mad 63
    -----------------> 937521490668755099374882780654.879150390625 ^2 ::== 878946545465764654869309729129720285781705936235709494984704
t_ten increased 
using t_rst as 9375214906687550993748827806548.791015625
using for fract 87894654546576465486930972912972016198770200769768200507228160
getting the part of 87894654546576465486930972912972016198770200769768200507228160 :: ad 62 and mad 63
i push_back a near value of 9375214906687550993748827806548
stopping with ad 62 and mad of 63
    -----------------> 9375214906687550993748827806548.791015625 ^2 ::== 87894654546576465486930972912972016198770200769768200507228160
t_ten increased 
breaking with xbrk of value 1

increasing the digits 21
-------------------------------------------------------
-------------------------------------------------------
times 21 878946545465764654864 292982181821921551621
main 29647032658.695619530887287651940633328092952075184796090212557828635908663272857666015625 second 17116722286.17154235860255088849798422286901532392289215778191646677441895008087158203125
main 878946545465764654864 second 292982181821921551621.000000000000028421709430404007434844970703125
times of 1.011905654956023176349260840865898635303903176328261800693376058762070585268601837987793630338571177e-10
new times of 1.011905654956023176349260840865898635303903176328261800693376058762070585268601837987793630338571177e-10
using 29298218182192155162155162152162 * 1.011905654956023176349260840865898635303903176328261800693376058762070585268601837987793630338571177e-10
2964703265869561953094.310654565289951278828084468841552734375  with length of 61 and dot length 22 will move 39
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867687325423143330204455473774592  main number intpart lenght 63 
 fract 0 int 878946545465764654864654864564867687325423143330204455473774592
    -----------------> 2964703265869561953094.310654565289951278828084468841552734375 ^2 ::== 8789465454657646548673097291297196416696320
 temp fract 0 temp int 8789465454657646548673097291297196416696320
before loop xstp is 0entering tens with lap of value 10
using t_rst as 29647032658695619530943.10654565289951278828084468841552734375
using for fract 878946545465764654867309729129719697504206848
getting the part of 878946545465764654867309729129719697504206848 :: ad 45 and mad 63
    -----------------> 29647032658695619530943.10654565289951278828084468841552734375 ^2 ::== 878946545465764654867309729129719697504206848
t_ten increased 
using t_rst as 296470326586956195309431.06545652900240384042263031005859375
using for fract 87894654546576465486730972912971971949443940352
getting the part of 87894654546576465486730972912971971949443940352 :: ad 47 and mad 63
    -----------------> 296470326586956195309431.06545652900240384042263031005859375 ^2 ::== 87894654546576465486730972912971971949443940352
t_ten increased 
using t_rst as 2964703265869561953094310.6545652900822460651397705078125
using for fract 8789465454657646548673097291297197265313138212864
getting the part of 8789465454657646548673097291297197265313138212864 :: ad 49 and mad 63
    -----------------> 2964703265869561953094310.6545652900822460651397705078125 ^2 ::== 8789465454657646548673097291297197265313138212864
t_ten increased 
using t_rst as 29647032658695619530943106.5456528998911380767822265625
using for fract 878946545465764654867309729129719735538513076027392
getting the part of 878946545465764654867309729129719735538513076027392 :: ad 51 and mad 63
    -----------------> 29647032658695619530943106.5456528998911380767822265625 ^2 ::== 878946545465764654867309729129719735538513076027392
t_ten increased 
using t_rst as 296470326586956195309431065.4565289914608001708984375
using for fract 87894654546576465486730972912971966636322279961657344
getting the part of 87894654546576465486730972912971966636322279961657344 :: ad 53 and mad 63
    -----------------> 296470326586956195309431065.4565289914608001708984375 ^2 ::== 87894654546576465486730972912971966636322279961657344
t_ten increased 
using t_rst as 2964703265869561953094310654.565289974212646484375
using for fract 8789465454657646548673097291297196442271299111651115008
getting the part of 8789465454657646548673097291297196442271299111651115008 :: ad 55 and mad 63
    -----------------> 2964703265869561953094310654.565289974212646484375 ^2 ::== 8789465454657646548673097291297196442271299111651115008
t_ten increased 
using t_rst as 29647032658695619530943106545.65290069580078125
using for fract 878946545465764654867309729129719743396826051427660988416
getting the part of 878946545465764654867309729129719743396826051427660988416 :: ad 57 and mad 63
    -----------------> 29647032658695619530943106545.65290069580078125 ^2 ::== 878946545465764654867309729129719743396826051427660988416
t_ten increased 
using t_rst as 296470326586956195309431065456.52899169921875
using for fract 87894654546576465486730972912971969503979326684249400016896
getting the part of 87894654546576465486730972912971969503979326684249400016896 :: ad 59 and mad 63
    -----------------> 296470326586956195309431065456.52899169921875 ^2 ::== 87894654546576465486730972912971969503979326684249400016896
t_ten increased 
using t_rst as 2964703265869561953094310654565.2900390625
using for fract 8789465454657646548673097291297197066454811351429340773482496
getting the part of 8789465454657646548673097291297197066454811351429340773482496 :: ad 61 and mad 63
    -----------------> 2964703265869561953094310654565.2900390625 ^2 ::== 8789465454657646548673097291297197066454811351429340773482496
t_ten increased 
using t_rst as 29647032658695619530943106545652.8984375
using for fract 878946545465764654867309729129719577899717049463385487839330304
getting the part of 878946545465764654867309729129719577899717049463385487839330304 :: ad 63 and mad 63
i push_back a near value of 29647032658695619530943106545652
stopping with ad 63 and mad of 63
    -----------------> 29647032658695619530943106545652.8984375 ^2 ::== 878946545465764654867309729129719577899717049463385487839330304
t_ten increased 
breaking with xbrk of value 1

increasing the digits 22
-------------------------------------------------------
-------------------------------------------------------
times 22 8789465454657646548646 2929821818219215516215
main 93752149066.8755099372370982697927360114079227935979243824249351746402680873870849609375 second 54127828500.86649759295488070356824900411429001521879111891166758141480386257171630859375
main 8789465454657646548645.9999999999990905052982270717620849609375 second 2929821818219215516214.99999999999954525264911353588104248046875
times of 3.1999266468654843712345371915286491613391334958320202356239748188795308255728495790142023810515709e-11
new times of 3.1999266468654843712345371915286491613391334958320202356239748188795308255728495790142023810515709e-11
using 29298218182192155162155162152162 * 3.1999266468654843712345371915286491613391334958320202356239748188795308255728495790142023810515709e-11
937521490668755099372.536167780511050295899622142314910888671875  with length of 63 and dot length 21 will move 42
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867687325423143330204455473774592  main number intpart lenght 63 
 fract 0 int 878946545465764654864654864564867687325423143330204455473774592
    -----------------> 937521490668755099372.536167780511050295899622142314910888671875 ^2 ::== 878946545465764654864909729129720203706368
 temp fract 0 temp int 878946545465764654864909729129720203706368
before loop xstp is 0entering tens with lap of value 10
using t_rst as 9375214906687550993725.36167780511095770634710788726806640625
using for fract 87894654546576465486490972912972020907507712
getting the part of 87894654546576465486490972912972020907507712 :: ad 44 and mad 63
    -----------------> 9375214906687550993725.36167780511095770634710788726806640625 ^2 ::== 87894654546576465486490972912972020907507712
t_ten increased 
using t_rst as 93752149066875509937253.61677805110230110585689544677734375
using for fract 8789465454657646548649097291297200578922283008
getting the part of 8789465454657646548649097291297200578922283008 :: ad 46 and mad 63
    -----------------> 93752149066875509937253.61677805110230110585689544677734375 ^2 ::== 8789465454657646548649097291297200578922283008
t_ten increased 
using t_rst as 937521490668755099372536.167780511081218719482421875
using for fract 878946545465764654864909729129720233814088744960
getting the part of 878946545465764654864909729129720233814088744960 :: ad 48 and mad 63
    -----------------> 937521490668755099372536.167780511081218719482421875 ^2 ::== 878946545465764654864909729129720233814088744960
t_ten increased 
using t_rst as 9375214906687550993725361.67780511081218719482421875
using for fract 87894654546576465486490972912972020003709153968128
getting the part of 87894654546576465486490972912972020003709153968128 :: ad 50 and mad 63
    -----------------> 9375214906687550993725361.67780511081218719482421875 ^2 ::== 87894654546576465486490972912972020003709153968128
t_ten increased 
using t_rst as 93752149066875509937253616.7780511081218719482421875
using for fract 8789465454657646548649097291297201604054148188209152
getting the part of 8789465454657646548649097291297201604054148188209152 :: ad 52 and mad 63
    -----------------> 93752149066875509937253616.7780511081218719482421875 ^2 ::== 8789465454657646548649097291297201604054148188209152
t_ten increased 
using t_rst as 937521490668755099372536167.78051102161407470703125
using for fract 878946545465764654864909729129720082006752505555320832
getting the part of 878946545465764654864909729129720082006752505555320832 :: ad 54 and mad 63
    -----------------> 937521490668755099372536167.78051102161407470703125 ^2 ::== 878946545465764654864909729129720082006752505555320832
t_ten increased 
using t_rst as 9375214906687550993725361677.805110931396484375
using for fract 87894654546576465486490972912972023548366319881879027712
getting the part of 87894654546576465486490972912972023548366319881879027712 :: ad 56 and mad 63
    -----------------> 9375214906687550993725361677.805110931396484375 ^2 ::== 87894654546576465486490972912972023548366319881879027712
t_ten increased 
using t_rst as 93752149066875509937253616778.0511016845703125
using for fract 8789465454657646548649097291297200654784698155115625840640
getting the part of 8789465454657646548649097291297200654784698155115625840640 :: ad 58 and mad 63
    -----------------> 93752149066875509937253616778.0511016845703125 ^2 ::== 8789465454657646548649097291297200654784698155115625840640
t_ten increased 
using t_rst as 937521490668755099372536167780.5111083984375
using for fract 878946545465764654864909729129720336277853409188497718247424
getting the part of 878946545465764654864909729129720336277853409188497718247424 :: ad 60 and mad 63
    -----------------> 937521490668755099372536167780.5111083984375 ^2 ::== 878946545465764654864909729129720336277853409188497718247424
t_ten increased 
using t_rst as 9375214906687550993725361677805.1103515625
using for fract 87894654546576465486490972912972010106924594496624548741382144
getting the part of 87894654546576465486490972912972010106924594496624548741382144 :: ad 62 and mad 63
i push_back a near value of 9375214906687550993725361677805
stopping with ad 62 and mad of 63
    -----------------> 9375214906687550993725361677805.1103515625 ^2 ::== 87894654546576465486490972912972010106924594496624548741382144
t_ten increased 
breaking with xbrk of value 1

increasing the digits 23
-------------------------------------------------------
-------------------------------------------------------
times 23 87894654546576465486465 29298218182192155162155
main 296470326586.95619530898249963202655802671395095237993899672801489941775798797607421875 second 171167222861.71542358618617048560775362000033715526026156794614507816731929779052734375
main 87894654546576465486465 second 29298218182192155162154.99999999999636202119290828704833984375
times of 1.011905654956023176347735406811082490079336412595376467802744143983545282104795935412649351021205715e-11
new times of 1.011905654956023176347735406811082490079336412595376467802744143983545282104795935412649351021205715e-11
using 29298218182192155162155162152162 * 1.011905654956023176347735406811082490079336412595376467802744143983545282104795935412649351021205715e-11
296470326586956195308.984140458923548067105002701282501220703125  with length of 63 and dot length 21 will move 42
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867687325423143330204455473774592  main number intpart lenght 63 
 fract 0 int 878946545465764654864654864564867687325423143330204455473774592
    -----------------> 296470326586956195308.984140458923548067105002701282501220703125 ^2 ::== 87894654546576465486465972912972036571136
 temp fract 0 temp int 87894654546576465486465972912972036571136
before loop xstp is 0entering tens with lap of value 10
using t_rst as 2964703265869561953089.84140458923548067105002701282501220703125
using for fract 8789465454657646548646597291297204126875648
getting the part of 8789465454657646548646597291297204126875648 :: ad 43 and mad 63
    -----------------> 2964703265869561953089.84140458923548067105002701282501220703125 ^2 ::== 8789465454657646548646597291297204126875648
t_ten increased 
using t_rst as 29647032658695619530898.41404589235389721579849720001220703125
using for fract 878946545465764654864659729129720395507695616
getting the part of 878946545465764654864659729129720395507695616 :: ad 45 and mad 63
    -----------------> 29647032658695619530898.41404589235389721579849720001220703125 ^2 ::== 878946545465764654864659729129720395507695616
t_ten increased 
using t_rst as 296470326586956195308984.14045892356080003082752227783203125
using for fract 87894654546576465486465972912972053294664908800
getting the part of 87894654546576465486465972912972053294664908800 :: ad 47 and mad 63
    -----------------> 296470326586956195308984.14045892356080003082752227783203125 ^2 ::== 87894654546576465486465972912972053294664908800
t_ten increased 
using t_rst as 2964703265869561953089841.4045892353169620037078857421875
using for fract 8789465454657646548646597291297203253588537638912
getting the part of 8789465454657646548646597291297203253588537638912 :: ad 49 and mad 63
    -----------------> 2964703265869561953089841.4045892353169620037078857421875 ^2 ::== 8789465454657646548646597291297203253588537638912
t_ten increased 
using t_rst as 29647032658695619530898414.0458923541009426116943359375
using for fract 878946545465764654864659729129720334366053018632192
getting the part of 878946545465764654864659729129720334366053018632192 :: ad 51 and mad 63
    -----------------> 29647032658695619530898414.0458923541009426116943359375 ^2 ::== 878946545465764654864659729129720334366053018632192
t_ten increased 
using t_rst as 296470326586956195308984140.4589235484600067138671875
using for fract 87894654546576465486465972912972048424584861752229888
getting the part of 87894654546576465486465972912972048424584861752229888 :: ad 53 and mad 63
    -----------------> 296470326586956195308984140.4589235484600067138671875 ^2 ::== 87894654546576465486465972912972048424584861752229888
t_ten increased 
using t_rst as 2964703265869561953089841404.5892353057861328125
using for fract 8789465454657646548646597291297203477399424720716169216
getting the part of 8789465454657646548646597291297203477399424720716169216 :: ad 55 and mad 63
    -----------------> 2964703265869561953089841404.5892353057861328125 ^2 ::== 8789465454657646548646597291297203477399424720716169216
t_ten increased 
using t_rst as 29647032658695619530898414045.892353057861328125
using for fract 878946545465764654864659729129720376074141369289488203776
getting the part of 878946545465764654864659729129720376074141369289488203776 :: ad 57 and mad 63
    -----------------> 29647032658695619530898414045.892353057861328125 ^2 ::== 878946545465764654864659729129720376074141369289488203776
t_ten increased 
using t_rst as 296470326586956195308984140458.923553466796875
using for fract 87894654546576465486465972912972047278820693845982218027008
getting the part of 87894654546576465486465972912972047278820693845982218027008 :: ad 59 and mad 63
    -----------------> 296470326586956195308984140458.923553466796875 ^2 ::== 87894654546576465486465972912972047278820693845982218027008
t_ten increased 
using t_rst as 2964703265869561953089841404589.2353515625
using for fract 8789465454657646548646597291297203722055787465226748447162368
getting the part of 8789465454657646548646597291297203722055787465226748447162368 :: ad 61 and mad 63
    -----------------> 2964703265869561953089841404589.2353515625 ^2 ::== 8789465454657646548646597291297203722055787465226748447162368
t_ten increased 
using t_rst as 29647032658695619530898414045892.35546875
using for fract 878946545465764654864659729129720441530220946503970239067193344
getting the part of 878946545465764654864659729129720441530220946503970239067193344 :: ad 63 and mad 63
i push_back a near value of 29647032658695619530898414045892
stopping with ad 63 and mad of 63
    -----------------> 29647032658695619530898414045892.35546875 ^2 ::== 878946545465764654864659729129720441530220946503970239067193344
t_ten increased 
breaking with xbrk of value 1

increasing the digits 24
-------------------------------------------------------
-------------------------------------------------------
times 24 878946545465764654864654 292982181821921551621551
main 937521490668.7550993723997820377491354694563137350815651416269247420132160186767578125 second 541278285008.6649759295959177377118826221709391166569957931642420589923858642578125
main 878946545465764654864653.999999999883584678173065185546875 second 292982181821921551621551
times of 3.199926646865484371234078471075641512149986503033779171757775092561137596209096315509499178932994838e-12
new times of 3.199926646865484371234078471075641512149986503033779171757775092561137596209096315509499178932994838e-12
using 29298218182192155162155162152162 * 3.199926646865484371234078471075641512149986503033779171757775092561137596209096315509499178932994838e-12
93752149066875509937.240177086134252704141545109450817108154296875  with length of 65 and dot length 20 will move 45
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867687325423143330204455473774592  main number intpart lenght 63 
 fract 0 int 878946545465764654864654864564867687325423143330204455473774592
    -----------------> 93752149066875509937.240177086134252704141545109450817108154296875 ^2 ::== 8789465454657646548646577291297197916160
 temp fract 0 temp int 8789465454657646548646577291297197916160
before loop xstp is 0entering tens with lap of value 10
using t_rst as 937521490668755099372.401770861342583884834311902523040771484375
using for fract 878946545465764654864657729129719909056512
getting the part of 878946545465764654864657729129719909056512 :: ad 42 and mad 63
    -----------------> 937521490668755099372.401770861342583884834311902523040771484375 ^2 ::== 878946545465764654864657729129719909056512
t_ten increased 
using t_rst as 9375214906687550993724.0177086134253841009922325611114501953125
using for fract 87894654546576465486465772912971984463200256
getting the part of 87894654546576465486465772912971984463200256 :: ad 44 and mad 63
    -----------------> 9375214906687550993724.0177086134253841009922325611114501953125 ^2 ::== 87894654546576465486465772912971984463200256
t_ten increased 
using t_rst as 93752149066875509937240.177086134252022020518779754638671875
using for fract 8789465454657646548646577291297198137082380288
getting the part of 8789465454657646548646577291297198137082380288 :: ad 46 and mad 63
    -----------------> 93752149066875509937240.177086134252022020518779754638671875 ^2 ::== 8789465454657646548646577291297198137082380288
t_ten increased 
using t_rst as 937521490668755099372401.77086134254932403564453125
using for fract 878946545465764654864657729129719875280889184256
getting the part of 878946545465764654864657729129719875280889184256 :: ad 48 and mad 63
    -----------------> 937521490668755099372401.77086134254932403564453125 ^2 ::== 878946545465764654864657729129719875280889184256
t_ten increased 
using t_rst as 9375214906687550993724017.7086134254932403564453125
using for fract 87894654546576465486465772912971987528088918425600
getting the part of 87894654546576465486465772912971987528088918425600 :: ad 50 and mad 63
    -----------------> 9375214906687550993724017.7086134254932403564453125 ^2 ::== 87894654546576465486465772912971987528088918425600
t_ten increased 
using t_rst as 93752149066875509937240177.086134254932403564453125
using for fract 8789465454657646548646577291297199041039267994271744
getting the part of 8789465454657646548646577291297199041039267994271744 :: ad 52 and mad 63
    -----------------> 93752149066875509937240177.086134254932403564453125 ^2 ::== 8789465454657646548646577291297199041039267994271744
t_ten increased 
using t_rst as 937521490668755099372401770.86134254932403564453125
using for fract 878946545465764654864657729129719885657182725717622784
getting the part of 878946545465764654864657729129719885657182725717622784 :: ad 54 and mad 63
    -----------------> 937521490668755099372401770.86134254932403564453125 ^2 ::== 878946545465764654864657729129719885657182725717622784
t_ten increased 
using t_rst as 9375214906687550993724017708.61342525482177734375
using for fract 87894654546576465486465772912971986204535031136939671552
getting the part of 87894654546576465486465772912971986204535031136939671552 :: ad 56 and mad 63
    -----------------> 9375214906687550993724017708.61342525482177734375 ^2 ::== 87894654546576465486465772912971986204535031136939671552
t_ten increased 
using t_rst as 93752149066875509937240177086.134246826171875
using for fract 8789465454657646548646577291297196580391182514007234838528
getting the part of 8789465454657646548646577291297196580391182514007234838528 :: ad 58 and mad 63
    -----------------> 93752149066875509937240177086.134246826171875 ^2 ::== 8789465454657646548646577291297196580391182514007234838528
t_ten increased 
using t_rst as 937521490668755099372401770861.342529296875
using for fract 878946545465764654864657729129719836960139554365841340366848
getting the part of 878946545465764654864657729129719836960139554365841340366848 :: ad 60 and mad 63
    -----------------> 937521490668755099372401770861.342529296875 ^2 ::== 878946545465764654864657729129719836960139554365841340366848
t_ten increased 
using t_rst as 9375214906687550993724017708613.4248046875
using for fract 87894654546576465486465772912971969459703503654710972696756224
getting the part of 87894654546576465486465772912971969459703503654710972696756224 :: ad 62 and mad 63
i push_back a near value of 9375214906687550993724017708613
stopping with ad 62 and mad of 63
    -----------------> 9375214906687550993724017708613.4248046875 ^2 ::== 87894654546576465486465772912971969459703503654710972696756224
t_ten increased 
breaking with xbrk of value 1

increasing the digits 25
-------------------------------------------------------
-------------------------------------------------------
times 25 8789465454657646548646548 2929821818219215516215516
main 2964703265869.56195308983309156550526558657372711014232891102437861263751983642578125 second 1711672228617.154235861866378648095915907608073613932475609544781036674976348876953125
main 8789465454657646548646548 second 2929821818219215516215516
times of 1.011905654956023176347732643760718910022277915023032219933990661881253638180039345334927770860906004e-12
new times of 1.011905654956023176347732643760718910022277915023032219933990661881253638180039345334927770860906004e-12
using 29298218182192155162155162152162 * 1.011905654956023176347732643760718910022277915023032219933990661881253638180039345334927770860906004e-12
29647032658695619530.89833309343995182416620082221925258636474609375  with length of 67 and dot length 20 will move 47
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867687325423143330204455473774592  main number intpart lenght 63 
 fract 0 int 878946545465764654864654864564867687325423143330204455473774592
    -----------------> 29647032658695619530.89833309343995182416620082221925258636474609375 ^2 ::== 878946545465764654864654929129719988224
 temp fract 0 temp int 878946545465764654864654929129719988224
before loop xstp is 0entering tens with lap of value 10
using t_rst as 296470326586956195308.9833309343995324525167234241962432861328125
using for fract 87894654546576465486465492912972006162432
getting the part of 87894654546576465486465492912972006162432 :: ad 41 and mad 63
    -----------------> 296470326586956195308.9833309343995324525167234241962432861328125 ^2 ::== 87894654546576465486465492912972006162432
t_ten increased 
using t_rst as 2964703265869561953089.8333093439950971514917910099029541015625
using for fract 8789465454657646548646549291297200414916608
getting the part of 8789465454657646548646549291297200414916608 :: ad 43 and mad 63
    -----------------> 2964703265869561953089.8333093439950971514917910099029541015625 ^2 ::== 8789465454657646548646549291297200414916608
t_ten increased 
using t_rst as 29647032658695619530898.33309343995279050432145595550537109375
using for fract 878946545465764654864654929129720131685974016
getting the part of 878946545465764654864654929129720131685974016 :: ad 45 and mad 63
    -----------------> 29647032658695619530898.33309343995279050432145595550537109375 ^2 ::== 878946545465764654864654929129720131685974016
t_ten increased 
using t_rst as 296470326586956195308983.33093439950607717037200927734375
using for fract 87894654546576465486465492912971995026655543296
getting the part of 87894654546576465486465492912971995026655543296 :: ad 47 and mad 63
    -----------------> 296470326586956195308983.33093439950607717037200927734375 ^2 ::== 87894654546576465486465492912971995026655543296
t_ten increased 
using t_rst as 2964703265869561953089833.3093439950607717037200927734375
using for fract 8789465454657646548646549291297199432296810151936
getting the part of 8789465454657646548646549291297199432296810151936 :: ad 49 and mad 63
    -----------------> 2964703265869561953089833.3093439950607717037200927734375 ^2 ::== 8789465454657646548646549291297199432296810151936
t_ten increased 
using t_rst as 29647032658695619530898333.09343995153903961181640625
using for fract 878946545465764654864654929129720010783675425751040
getting the part of 878946545465764654864654929129720010783675425751040 :: ad 51 and mad 63
    -----------------> 29647032658695619530898333.09343995153903961181640625 ^2 ::== 878946545465764654864654929129720010783675425751040
t_ten increased 
using t_rst as 296470326586956195308983330.9343995153903961181640625
using for fract 87894654546576465486465492912972005113592808699068416
getting the part of 87894654546576465486465492912972005113592808699068416 :: ad 53 and mad 63
    -----------------> 296470326586956195308983330.9343995153903961181640625 ^2 ::== 87894654546576465486465492912972005113592808699068416
t_ten increased 
using t_rst as 2964703265869561953089833309.34399509429931640625
using for fract 8789465454657646548646549291297200179317887543134912512
getting the part of 8789465454657646548646549291297200179317887543134912512 :: ad 55 and mad 63
    -----------------> 2964703265869561953089833309.34399509429931640625 ^2 ::== 8789465454657646548646549291297200179317887543134912512
t_ten increased 
using t_rst as 29647032658695619530898333093.439952850341796875
using for fract 878946545465764654864654929129720079322553031618879029248
getting the part of 878946545465764654864654929129720079322553031618879029248 :: ad 57 and mad 63
    -----------------> 29647032658695619530898333093.439952850341796875 ^2 ::== 878946545465764654864654929129720079322553031618879029248
t_ten increased 
using t_rst as 296470326586956195308983330934.399505615234375
using for fract 87894654546576465486465492912972000678700385474112854687744
getting the part of 87894654546576465486465492912972000678700385474112854687744 :: ad 59 and mad 63
    -----------------> 296470326586956195308983330934.399505615234375 ^2 ::== 87894654546576465486465492912972000678700385474112854687744
t_ten increased 
using t_rst as 2964703265869561953089833309343.9951171875
using for fract 8789465454657646548646549291297200532097553279428888555945984
getting the part of 8789465454657646548646549291297200532097553279428888555945984 :: ad 61 and mad 63
    -----------------> 2964703265869561953089833309343.9951171875 ^2 ::== 8789465454657646548646549291297200532097553279428888555945984
t_ten increased 
using t_rst as 29647032658695619530898333093439.953125
using for fract 878946545465764654864654929129720201762560042188521843489505280
getting the part of 878946545465764654864654929129720201762560042188521843489505280 :: ad 63 and mad 63
i push_back a near value of 29647032658695619530898333093439
stopping with ad 63 and mad of 63
    -----------------> 29647032658695619530898333093439.953125 ^2 ::== 878946545465764654864654929129720201762560042188521843489505280
t_ten increased 
breaking with xbrk of value 1

increasing the digits 26
-------------------------------------------------------
-------------------------------------------------------
times 26 87894654546576465486465486 29298218182192155162155162
main 9375214906687.550993724002406939018413093399340052513935006572864949703216552734375 second 5412782850086.6497592959649045605024345636895055644544072492863051593303680419921875
main 87894654546576465486465485.99999998509883880615234375 second 29298218182192155162155161.9999999962747097015380859375
times of 3.199926646865484371234073264962564242102433191278221169206956212641690349999443667724010048168269051e-13
new times of 3.199926646865484371234073264962564242102433191278221169206956212641690349999443667724010048168269051e-13
using 29298218182192155162155162152162 * 3.199926646865484371234073264962564242102433191278221169206956212641690349999443667724010048168269051e-13
9375214906687550993.724002455629744190446217544376850128173828125  with length of 64 and dot length 19 will move 45
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867687325423143330204455473774592  main number intpart lenght 63 
 fract 0 int 878946545465764654864654864564867687325423143330204455473774592
    -----------------> 9375214906687550993.724002455629744190446217544376850128173828125 ^2 ::== 87894654546576465486465486912972029952
 temp fract 0 temp int 87894654546576465486465486912972029952
before loop xstp is 0entering tens with lap of value 10
using t_rst as 93752149066875509937.24002455629744190446217544376850128173828125
using for fract 8789465454657646548646548691297202339840
getting the part of 8789465454657646548646548691297202339840 :: ad 40 and mad 63
    -----------------> 93752149066875509937.24002455629744190446217544376850128173828125 ^2 ::== 8789465454657646548646548691297202339840
t_ten increased 
using t_rst as 937521490668755099372.4002455629744190446217544376850128173828125
using for fract 878946545465764654864654869129720204623872
getting the part of 878946545465764654864654869129720204623872 :: ad 42 and mad 63
    -----------------> 937521490668755099372.4002455629744190446217544376850128173828125 ^2 ::== 878946545465764654864654869129720204623872
t_ten increased 
using t_rst as 9375214906687550993724.0024556297439630725421011447906494140625
using for fract 87894654546576465486465486912972023146741760
getting the part of 87894654546576465486465486912972023146741760 :: ad 44 and mad 63
    -----------------> 9375214906687550993724.0024556297439630725421011447906494140625 ^2 ::== 87894654546576465486465486912972023146741760
t_ten increased 
using t_rst as 93752149066875509937240.024556297445087693631649017333984375
using for fract 8789465454657646548646548691297203311106588672
getting the part of 8789465454657646548646548691297203311106588672 :: ad 46 and mad 63
    -----------------> 93752149066875509937240.024556297445087693631649017333984375 ^2 ::== 8789465454657646548646548691297203311106588672
t_ten increased 
using t_rst as 937521490668755099372400.2455629743635654449462890625
using for fract 878946545465764654864654869129720120004426334208
getting the part of 878946545465764654864654869129720120004426334208 :: ad 48 and mad 63
    -----------------> 937521490668755099372400.2455629743635654449462890625 ^2 ::== 878946545465764654864654869129720120004426334208
t_ten increased 
using t_rst as 9375214906687550993724002.455629744566977024078369140625
using for fract 87894654546576465486465486912972035081390723694592
getting the part of 87894654546576465486465486912972035081390723694592 :: ad 50 and mad 63
    -----------------> 9375214906687550993724002.455629744566977024078369140625 ^2 ::== 87894654546576465486465486912972035081390723694592
t_ten increased 
using t_rst as 93752149066875509937240024.55629743635654449462890625
using for fract 8789465454657646548646548691297201886843206516080640
getting the part of 8789465454657646548646548691297201886843206516080640 :: ad 52 and mad 63
    -----------------> 93752149066875509937240024.55629743635654449462890625 ^2 ::== 8789465454657646548646548691297201886843206516080640
t_ten increased 
using t_rst as 937521490668755099372400245.562974452972412109375
using for fract 878946545465764654864654869129720354705017314994028544
getting the part of 878946545465764654864654869129720354705017314994028544 :: ad 54 and mad 63
    -----------------> 937521490668755099372400245.562974452972412109375 ^2 ::== 878946545465764654864654869129720354705017314994028544
t_ten increased 
using t_rst as 9375214906687550993724002455.62974452972412109375
using for fract 87894654546576465486465486912972036651093352216814157824
getting the part of 87894654546576465486465486912972036651093352216814157824 :: ad 56 and mad 63
    -----------------> 9375214906687550993724002455.62974452972412109375 ^2 ::== 87894654546576465486465486912972036651093352216814157824
t_ten increased 
using t_rst as 93752149066875509937240024556.2974395751953125
using for fract 8789465454657646548646548691297202645078174921838049624064
getting the part of 8789465454657646548646548691297202645078174921838049624064 :: ad 58 and mad 63
    -----------------> 93752149066875509937240024556.2974395751953125 ^2 ::== 8789465454657646548646548691297202645078174921838049624064
t_ten increased 
using t_rst as 937521490668755099372400245562.974365234375
using for fract 878946545465764654864654869129720104929609303052753901191168
getting the part of 878946545465764654864654869129720104929609303052753901191168 :: ad 60 and mad 63
    -----------------> 937521490668755099372400245562.974365234375 ^2 ::== 878946545465764654864654869129720104929609303052753901191168
t_ten increased 
using t_rst as 9375214906687550993724002455629.744140625
using for fract 87894654546576465486465486912972022253391303516388001660796928
getting the part of 87894654546576465486465486912972022253391303516388001660796928 :: ad 62 and mad 63
i push_back a near value of 9375214906687550993724002455629
stopping with ad 62 and mad of 63
    -----------------> 9375214906687550993724002455629.744140625 ^2 ::== 87894654546576465486465486912972022253391303516388001660796928
t_ten increased 
breaking with xbrk of value 1

increasing the digits 27
-------------------------------------------------------
-------------------------------------------------------
times 27 878946545465764654864654864 292982181821921551621551621
main 29647032658695.61953089833199502108629385700722114194149980903603136539459228515625 second 17116722286171.5423586186643999161612994357184458493748024920932948589324951171875
main 878946545465764654864654864.00000011920928955078125 second 292982181821921551621551621
times of 1.011905654956023176347732608071318466203087554307517478366845323448445613524541536510279690791920548e-13
new times of 1.011905654956023176347732608071318466203087554307517478366845323448445613524541536510279690791920548e-13
using 29298218182192155162155162152162 * 1.011905654956023176347732608071318466203087554307517478366845323448445613524541536510279690791920548e-13
2964703265869561953.08983320478041090240139965317212045192718505859375  with length of 69 and dot length 19 will move 50
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867687325423143330204455473774592  main number intpart lenght 63 
 fract 0 int 878946545465764654864654864564867687325423143330204455473774592
    -----------------> 2964703265869561953.08983320478041090240139965317212045192718505859375 ^2 ::== 8789465454657646548646548671297201152
 temp fract 0 temp int 8789465454657646548646548671297201152
before loop xstp is 0entering tens with lap of value 10
using t_rst as 29647032658695619530.89833204780411080037083593197166919708251953125
using for fract 878946545465764654864654867129720242176
getting the part of 878946545465764654864654867129720242176 :: ad 39 and mad 63
    -----------------> 29647032658695619530.89833204780411080037083593197166919708251953125 ^2 ::== 878946545465764654864654867129720242176
t_ten increased 
using t_rst as 296470326586956195308.98332047804109379285364411771297454833984375
using for fract 87894654546576465486465486712972016353280
getting the part of 87894654546576465486465486712972016353280 :: ad 41 and mad 63
    -----------------> 296470326586956195308.98332047804109379285364411771297454833984375 ^2 ::== 87894654546576465486465486712972016353280
t_ten increased 
using t_rst as 2964703265869561953089.83320478041105161537416279315948486328125
using for fract 8789465454657646548646548671297201769545728
getting the part of 8789465454657646548646548671297201769545728 :: ad 43 and mad 63
    -----------------> 2964703265869561953089.83320478041105161537416279315948486328125 ^2 ::== 8789465454657646548646548671297201769545728
t_ten increased 
using t_rst as 29647032658695619530898.33204780410960665903985500335693359375
using for fract 878946545465764654864654867129720142594834432
getting the part of 878946545465764654864654867129720142594834432 :: ad 45 and mad 63
    -----------------> 29647032658695619530898.33204780410960665903985500335693359375 ^2 ::== 878946545465764654864654867129720142594834432
t_ten increased 
using t_rst as 296470326586956195308983.32047804110334254801273345947265625
using for fract 87894654546576465486465486712972020306797395968
getting the part of 87894654546576465486465486712972020306797395968 :: ad 47 and mad 63
    -----------------> 296470326586956195308983.32047804110334254801273345947265625 ^2 ::== 87894654546576465486465486712972020306797395968
t_ten increased 
using t_rst as 2964703265869561953089833.2047804109752178192138671875
using for fract 8789465454657646548646548671297200799226716487680
getting the part of 8789465454657646548646548671297200799226716487680 :: ad 49 and mad 63
    -----------------> 2964703265869561953089833.2047804109752178192138671875 ^2 ::== 8789465454657646548646548671297200799226716487680
t_ten increased 
using t_rst as 29647032658695619530898332.047804109752178192138671875
using for fract 878946545465764654864654867129720160987464941436928
getting the part of 878946545465764654864654867129720160987464941436928 :: ad 51 and mad 63
    -----------------> 29647032658695619530898332.047804109752178192138671875 ^2 ::== 878946545465764654864654867129720160987464941436928
t_ten increased 
using t_rst as 296470326586956195308983320.4780410826206207275390625
using for fract 87894654546576465486465486712972004569531448075223040
getting the part of 87894654546576465486465486712972004569531448075223040 :: ad 53 and mad 63
    -----------------> 296470326586956195308983320.4780410826206207275390625 ^2 ::== 87894654546576465486465486712972004569531448075223040
t_ten increased 
using t_rst as 2964703265869561953089833204.7804107666015625
using for fract 8789465454657646548646548671297200530740121102360510464
getting the part of 8789465454657646548646548671297200530740121102360510464 :: ad 55 and mad 63
    -----------------> 2964703265869561953089833204.7804107666015625 ^2 ::== 8789465454657646548646548671297200530740121102360510464
t_ten increased 
using t_rst as 29647032658695619530898332047.804107666015625
using for fract 878946545465764654864654867129720053074012110236051046400
getting the part of 878946545465764654864654867129720053074012110236051046400 :: ad 57 and mad 63
    -----------------> 29647032658695619530898332047.804107666015625 ^2 ::== 878946545465764654864654867129720053074012110236051046400
t_ten increased 
using t_rst as 296470326586956195308983320478.04107666015625
using for fract 87894654546576465486465486712971998053846293335830056402944
getting the part of 87894654546576465486465486712971998053846293335830056402944 :: ad 59 and mad 63
    -----------------> 296470326586956195308983320478.04107666015625 ^2 ::== 87894654546576465486465486712971998053846293335830056402944
t_ten increased 
using t_rst as 2964703265869561953089833204780.4111328125
using for fract 8789465454657646548646548671297202397321586587347956210335744
getting the part of 8789465454657646548646548671297202397321586587347956210335744 :: ad 61 and mad 63
    -----------------> 2964703265869561953089833204780.4111328125 ^2 ::== 8789465454657646548646548671297202397321586587347956210335744
t_ten increased 
using t_rst as 29647032658695619530898332047804.109375
using for fract 878946545465764654864654867129720041661752373073951637173698560
getting the part of 878946545465764654864654867129720041661752373073951637173698560 :: ad 63 and mad 63
i push_back a near value of 29647032658695619530898332047804
stopping with ad 63 and mad of 63
    -----------------> 29647032658695619530898332047804.109375 ^2 ::== 878946545465764654864654867129720041661752373073951637173698560
t_ten increased 
breaking with xbrk of value 1

increasing the digits 28
-------------------------------------------------------
-------------------------------------------------------
times 28 8789465454657646548646548645 2929821818219215516215516215
main 93752149066875.509937240024309384694533968385155020541787962429225444793701171875 second 54127828500866.49759295964918416591460555153947353801413555629551410675048828125
main 8789465454657646548646548645.00000095367431640625 second 2929821818219215516215516215
times of 3.199926646865484371234073256771127698888058575035448559894121887722019035149623153481595582167404602e-14
new times of 3.199926646865484371234073256771127698888058575035448559894121887722019035149623153481595582167404602e-14
using 29298218182192155162155162152162 * 3.199926646865484371234073256771127698888058575035448559894121887722019035149623153481595582167404602e-14
937521490668755099.37240024316302944296097621190710924565792083740234375  with length of 71 and dot length 18 will move 53
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867687325423143330204455473774592  main number intpart lenght 63 
 fract 0 int 878946545465764654864654864564867687325423143330204455473774592
    -----------------> 937521490668755099.37240024316302944296097621190710924565792083740234375 ^2 ::== 878946545465764654864654864629720320
 temp fract 0 temp int 878946545465764654864654864629720320
before loop xstp is 0entering tens with lap of value 10
using t_rst as 9375214906687550993.7240024316302946516543670441024005413055419921875
using for fract 87894654546576465486465486462972035072
getting the part of 87894654546576465486465486462972035072 :: ad 38 and mad 63
    -----------------> 9375214906687550993.7240024316302946516543670441024005413055419921875 ^2 ::== 87894654546576465486465486462972035072
t_ten increased 
using t_rst as 93752149066875509937.2400243163029500692573492415249347686767578125
using for fract 8789465454657646548646548646297203638272
getting the part of 8789465454657646548646548646297203638272 :: ad 40 and mad 63
    -----------------> 93752149066875509937.2400243163029500692573492415249347686767578125 ^2 ::== 8789465454657646548646548646297203638272
t_ten increased 
using t_rst as 937521490668755099372.400243163029472270864062011241912841796875
using for fract 878946545465764654864654864629720296718336
getting the part of 878946545465764654864654864629720296718336 :: ad 42 and mad 63
    -----------------> 937521490668755099372.400243163029472270864062011241912841796875 ^2 ::== 878946545465764654864654864629720296718336
t_ten increased 
using t_rst as 9375214906687550993724.0024316302942679612897336483001708984375
using for fract 87894654546576465486465486462972021618769920
getting the part of 87894654546576465486465486462972021618769920 :: ad 44 and mad 63
    -----------------> 9375214906687550993724.0024316302942679612897336483001708984375 ^2 ::== 87894654546576465486465486462972021618769920
t_ten increased 
using t_rst as 93752149066875509937240.02431630293722264468669891357421875
using for fract 8789465454657646548646548646297201749560131584
getting the part of 8789465454657646548646548646297201749560131584 :: ad 46 and mad 63
    -----------------> 93752149066875509937240.02431630293722264468669891357421875 ^2 ::== 8789465454657646548646548646297201749560131584
t_ten increased 
using t_rst as 937521490668755099372400.24316302943043410778045654296875
using for fract 878946545465764654864654864629720276111082913792
getting the part of 878946545465764654864654864629720276111082913792 :: ad 48 and mad 63
    -----------------> 937521490668755099372400.24316302943043410778045654296875 ^2 ::== 878946545465764654864654864629720276111082913792
t_ten increased 
using t_rst as 9375214906687550993724002.4316302947700023651123046875
using for fract 87894654546576465486465486462972036055357592698880
getting the part of 87894654546576465486465486462972036055357592698880 :: ad 50 and mad 63
    -----------------> 9375214906687550993724002.4316302947700023651123046875 ^2 ::== 87894654546576465486465486462972036055357592698880
t_ten increased 
using t_rst as 93752149066875509937240024.31630294024944305419921875
using for fract 8789465454657646548646548646297202128355081492365312
getting the part of 8789465454657646548646548646297202128355081492365312 :: ad 52 and mad 63
    -----------------> 93752149066875509937240024.31630294024944305419921875 ^2 ::== 8789465454657646548646548646297202128355081492365312
t_ten increased 
using t_rst as 937521490668755099372400243.1630294322967529296875
using for fract 878946545465764654864654864629720222058880186091307008
getting the part of 878946545465764654864654864629720222058880186091307008 :: ad 54 and mad 63
    -----------------> 937521490668755099372400243.1630294322967529296875 ^2 ::== 878946545465764654864654864629720222058880186091307008
t_ten increased 
using t_rst as 9375214906687550993724002431.6302947998046875
using for fract 87894654546576465486465486462972039324466519011594600448
getting the part of 87894654546576465486465486462972039324466519011594600448 :: ad 56 and mad 63
    -----------------> 9375214906687550993724002431.6302947998046875 ^2 ::== 87894654546576465486465486462972039324466519011594600448
t_ten increased 
using t_rst as 93752149066875509937240024316.302947998046875
using for fract 8789465454657646548646548646297203327983742093844872691712
getting the part of 8789465454657646548646548646297203327983742093844872691712 :: ad 58 and mad 63
    -----------------> 93752149066875509937240024316.302947998046875 ^2 ::== 8789465454657646548646548646297203327983742093844872691712
t_ten increased 
using t_rst as 937521490668755099372400243163.0294189453125
using for fract 878946545465764654864654864629720168384462741794919509131264
getting the part of 878946545465764654864654864629720168384462741794919509131264 :: ad 60 and mad 63
    -----------------> 937521490668755099372400243163.0294189453125 ^2 ::== 878946545465764654864654864629720168384462741794919509131264
t_ten increased 
using t_rst as 9375214906687550993724002431630.2939453125
using for fract 87894654546576465486465486462972013743596175966041263665315840
getting the part of 87894654546576465486465486462972013743596175966041263665315840 :: ad 62 and mad 63
i push_back a near value of 9375214906687550993724002431630
stopping with ad 62 and mad of 63
    -----------------> 9375214906687550993724002431630.2939453125 ^2 ::== 87894654546576465486465486462972013743596175966041263665315840
t_ten increased 
breaking with xbrk of value 1

increasing the digits 29
-------------------------------------------------------
-------------------------------------------------------
times 29 87894654546576465486465486456 29298218182192155162155162152
main 296470326586956.1953089833200446553550418127276344648635131306946277618408203125 second 171167222861715.42358618664415105984169009067930034007076756097376346588134765625
main 87894654546576465486465486455.9999847412109375 second 29298218182192155162155162151.999996185302734375
times of 1.011905654956023176347732606597691625843706842794975178407205663846885243639060723609887654736038942e-14
new times of 1.011905654956023176347732606597691625843706842794975178407205663846885243639060723609887654736038942e-14
using 29298218182192155162155162152162 * 1.011905654956023176347732606597691625843706842794975178407205663846885243639060723609887654736038942e-14
296470326586956195.30898332004629469604850555697339586913585662841796875  with length of 71 and dot length 18 will move 53
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867687325423143330204455473774592  main number intpart lenght 63 
 fract 0 int 878946545465764654864654864564867687325423143330204455473774592
    -----------------> 296470326586956195.30898332004629469604850555697339586913585662841796875 ^2 ::== 87894654546576465486465486456972016
 temp fract 0 temp int 87894654546576465486465486456972016
before loop xstp is 0entering tens with lap of value 10
using t_rst as 2964703265869561953.08983320046294718252966049476526677608489990234375
using for fract 8789465454657646548646548645697203200
getting the part of 8789465454657646548646548645697203200 :: ad 37 and mad 63
    -----------------> 2964703265869561953.08983320046294718252966049476526677608489990234375 ^2 ::== 8789465454657646548646548645697203200
t_ten increased 
using t_rst as 29647032658695619530.898332004629470048939765547402203083038330078125
using for fract 878946545465764654864654864569720242176
getting the part of 878946545465764654864654864569720242176 :: ad 39 and mad 63
    -----------------> 29647032658695619530.898332004629470048939765547402203083038330078125 ^2 ::== 878946545465764654864654864569720242176
t_ten increased 
using t_rst as 296470326586956195308.983320046294693383970297873020172119140625
using for fract 87894654546576465486465486456972017401856
getting the part of 87894654546576465486465486456972017401856 :: ad 41 and mad 63
    -----------------> 296470326586956195308.983320046294693383970297873020172119140625 ^2 ::== 87894654546576465486465486456972017401856
t_ten increased 
using t_rst as 2964703265869561953089.83320046294693383970297873020172119140625
using for fract 8789465454657646548646548645697201673076736
getting the part of 8789465454657646548646548645697201673076736 :: ad 43 and mad 63
    -----------------> 2964703265869561953089.83320046294693383970297873020172119140625 ^2 ::== 8789465454657646548646548645697201673076736
t_ten increased 
using t_rst as 29647032658695619530898.332004629468428902328014373779296875
using for fract 878946545465764654864654864569720072818393088
getting the part of 878946545465764654864654864569720072818393088 :: ad 45 and mad 63
    -----------------> 29647032658695619530898.332004629468428902328014373779296875 ^2 ::== 878946545465764654864654864569720072818393088
t_ten increased 
using t_rst as 296470326586956195308983.32004629468428902328014373779296875
using for fract 87894654546576465486465486456972015528176517120
getting the part of 87894654546576465486465486456972015528176517120 :: ad 47 and mad 63
    -----------------> 296470326586956195308983.32004629468428902328014373779296875 ^2 ::== 87894654546576465486465486456972015528176517120
t_ten increased 
using t_rst as 2964703265869561953089833.2004629471339285373687744140625
using for fract 8789465454657646548646548645697202537980070199296
getting the part of 8789465454657646548646548645697202537980070199296 :: ad 49 and mad 63
    -----------------> 2964703265869561953089833.2004629471339285373687744140625 ^2 ::== 8789465454657646548646548645697202537980070199296
t_ten increased 
using t_rst as 29647032658695619530898332.004629470407962799072265625
using for fract 878946545465764654864654864569720217769210000965632
getting the part of 878946545465764654864654864569720217769210000965632 :: ad 51 and mad 63
    -----------------> 29647032658695619530898332.004629470407962799072265625 ^2 ::== 878946545465764654864654864569720217769210000965632
t_ten increased 
using t_rst as 296470326586956195308983320.046294689178466796875
using for fract 87894654546576465486465486456972019471077990882869248
getting the part of 87894654546576465486465486456972019471077990882869248 :: ad 53 and mad 63
    -----------------> 296470326586956195308983320.046294689178466796875 ^2 ::== 87894654546576465486465486456972019471077990882869248
t_ten increased 
using t_rst as 2964703265869561953089833200.46294689178466796875
using for fract 8789465454657646548646548645697201061664083550228447232
getting the part of 8789465454657646548646548645697201061664083550228447232 :: ad 55 and mad 63
    -----------------> 2964703265869561953089833200.46294689178466796875 ^2 ::== 8789465454657646548646548645697201061664083550228447232
t_ten increased 
using t_rst as 29647032658695619530898332004.6294708251953125
using for fract 878946545465764654864654864569720347007098981374750621696
getting the part of 878946545465764654864654864569720347007098981374750621696 :: ad 57 and mad 63
    -----------------> 29647032658695619530898332004.6294708251953125 ^2 ::== 878946545465764654864654864569720347007098981374750621696
t_ten increased 
using t_rst as 296470326586956195308983320046.294708251953125
using for fract 87894654546576465486465486456972023215914611798497902460928
getting the part of 87894654546576465486465486456972023215914611798497902460928 :: ad 59 and mad 63
    -----------------> 296470326586956195308983320046.294708251953125 ^2 ::== 87894654546576465486465486456972023215914611798497902460928
t_ten increased 
using t_rst as 2964703265869561953089833200462.94677734375
using for fract 8789465454657646548646548645697200309938897341106843535015936
getting the part of 8789465454657646548646548645697200309938897341106843535015936 :: ad 61 and mad 63
    -----------------> 2964703265869561953089833200462.94677734375 ^2 ::== 8789465454657646548646548645697200309938897341106843535015936
t_ten increased 
using t_rst as 29647032658695619530898332004629.46875
using for fract 878946545465764654864654864569720095366771776950458648256053248
getting the part of 878946545465764654864654864569720095366771776950458648256053248 :: ad 63 and mad 63
i push_back a near value of 29647032658695619530898332004629
stopping with ad 63 and mad of 63
    -----------------> 29647032658695619530898332004629.46875 ^2 ::== 878946545465764654864654864569720095366771776950458648256053248
t_ten increased 
breaking with xbrk of value 1

increasing the digits 30
-------------------------------------------------------
-------------------------------------------------------
times 30 878946545465764654864654864564 292982181821921551621551621521
main 937521490668755.09937240024312797939155805782007746529416181147098541259765625 second 541278285008664.9759295964918610576913256260400686414868687279522418975830078125
main 878946545465764654864654864563.9998779296875 second 292982181821921551621551621521.000030517578125
times of 3.19992664686548437123407325665826692898756338873466746390229807709048566487757620729439063267124139e-15
new times of 3.19992664686548437123407325665826692898756338873466746390229807709048566487757620729439063267124139e-15
using 29298218182192155162155162152162 * 3.19992664686548437123407325665826692898756338873466746390229807709048566487757620729439063267124139e-15
93752149066875509.93724002431299631432626284777143155224621295928955078125  with length of 73 and dot length 17 will move 56
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867687325423143330204455473774592  main number intpart lenght 63 
 fract 0 int 878946545465764654864654864564867687325423143330204455473774592
    -----------------> 93752149066875509.93724002431299631432626284777143155224621295928955078125 ^2 ::== 8789465454657646548646548645677195
 temp fract 0 temp int 8789465454657646548646548645677195
before loop xstp is 0entering tens with lap of value 10
using t_rst as 937521490668755099.372400243129963115507052862085402011871337890625
using for fract 878946545465764654864654864567719552
getting the part of 878946545465764654864654864567719552 :: ad 36 and mad 63
    -----------------> 937521490668755099.372400243129963115507052862085402011871337890625 ^2 ::== 878946545465764654864654864567719552
t_ten increased 
using t_rst as 9375214906687550993.72400243129963115507052862085402011871337890625
using for fract 87894654546576465486465486456771952640
getting the part of 87894654546576465486465486456771952640 :: ad 38 and mad 63
    -----------------> 9375214906687550993.72400243129963115507052862085402011871337890625 ^2 ::== 87894654546576465486465486456771952640
t_ten increased 
using t_rst as 93752149066875509937.2400243129963115507052862085402011871337890625
using for fract 8789465454657646548646548645677195329536
getting the part of 8789465454657646548646548645677195329536 :: ad 40 and mad 63
    -----------------> 93752149066875509937.2400243129963115507052862085402011871337890625 ^2 ::== 8789465454657646548646548645677195329536
t_ten increased 
using t_rst as 937521490668755099372.4002431299630870853434316813945770263671875
using for fract 878946545465764654864654864567719491010560
getting the part of 878946545465764654864654864567719491010560 :: ad 42 and mad 63
    -----------------> 937521490668755099372.4002431299630870853434316813945770263671875 ^2 ::== 878946545465764654864654864567719491010560
t_ten increased 
using t_rst as 9375214906687550993724.0024312996310982271097600460052490234375
using for fract 87894654546576465486465486456771944269217792
getting the part of 87894654546576465486465486456771944269217792 :: ad 44 and mad 63
    -----------------> 9375214906687550993724.0024312996310982271097600460052490234375 ^2 ::== 87894654546576465486465486456771944269217792
t_ten increased 
using t_rst as 93752149066875509937240.024312996320077218115329742431640625
using for fract 8789465454657646548646548645677197038261895168
getting the part of 8789465454657646548646548645677197038261895168 :: ad 46 and mad 63
    -----------------> 93752149066875509937240.024312996320077218115329742431640625 ^2 ::== 8789465454657646548646548645677197038261895168
t_ten increased 
using t_rst as 937521490668755099372400.243129963171668350696563720703125
using for fract 878946545465764654864654864567719642253538361344
getting the part of 878946545465764654864654864567719642253538361344 :: ad 48 and mad 63
    -----------------> 937521490668755099372400.243129963171668350696563720703125 ^2 ::== 878946545465764654864654864567719642253538361344
t_ten increased 
using t_rst as 9375214906687550993724002.431299631483852863311767578125
using for fract 87894654546576465486465486456771957469954395078656
getting the part of 87894654546576465486465486456771957469954395078656 :: ad 50 and mad 63
    -----------------> 9375214906687550993724002.431299631483852863311767578125 ^2 ::== 87894654546576465486465486456771957469954395078656
t_ten increased 
using t_rst as 93752149066875509937240024.31299631297588348388671875
using for fract 8789465454657646548646548645677195530822657394081792
getting the part of 8789465454657646548646548645677195530822657394081792 :: ad 52 and mad 63
    -----------------> 93752149066875509937240024.31299631297588348388671875 ^2 ::== 8789465454657646548646548645677195530822657394081792
t_ten increased 
using t_rst as 937521490668755099372400243.1299631595611572265625
using for fract 878946545465764654864654864567719534635521665698627584
getting the part of 878946545465764654864654864567719534635521665698627584 :: ad 54 and mad 63
    -----------------> 937521490668755099372400243.1299631595611572265625 ^2 ::== 878946545465764654864654864567719534635521665698627584
t_ten increased 
using t_rst as 9375214906687550993724002431.2996311187744140625
using for fract 87894654546576465486465486456771949921777304417628848128
getting the part of 87894654546576465486465486456771949921777304417628848128 :: ad 56 and mad 63
    -----------------> 9375214906687550993724002431.2996311187744140625 ^2 ::== 87894654546576465486465486456771949921777304417628848128
t_ten increased 
using t_rst as 93752149066875509937240024312.996307373046875
using for fract 8789465454657646548646548645677193632136183375305063268352
getting the part of 8789465454657646548646548645677193632136183375305063268352 :: ad 58 and mad 63
    -----------------> 93752149066875509937240024312.996307373046875 ^2 ::== 8789465454657646548646548645677193632136183375305063268352
t_ten increased 
using t_rst as 937521490668755099372400243129.963134765625
using for fract 878946545465764654864654864567719488941903577451940496277504
getting the part of 878946545465764654864654864567719488941903577451940496277504 :: ad 60 and mad 63
    -----------------> 937521490668755099372400243129.963134765625 ^2 ::== 878946545465764654864654864567719488941903577451940496277504
t_ten increased 
using t_rst as 9375214906687550993724002431299.6318359375
using for fract 87894654546576465486465486456771964368440848812447485866803200
getting the part of 87894654546576465486465486456771964368440848812447485866803200 :: ad 62 and mad 63
i push_back a near value of 9375214906687550993724002431299
stopping with ad 62 and mad of 63
    -----------------> 9375214906687550993724002431299.6318359375 ^2 ::== 87894654546576465486465486456771964368440848812447485866803200
t_ten increased 
breaking with xbrk of value 1

increasing the digits 31
-------------------------------------------------------
-------------------------------------------------------
times 31 8789465454657646548646548645648 2929821818219215516215516215216
main 2964703265869561.9530898332004546489627794247923020520829595625400543212890625 second 1711672228617154.23586186644151527235825638317834318513632752001285552978515625
main 8789465454657646548646548645648 second 2929821818219215516215516215216
times of 1.011905654956023176347732606594928372011589765773038907937422301397580879453382838383207517888143961e-15
new times of 1.011905654956023176347732606594928372011589765773038907937422301397580879453382838383207517888143961e-15
using 29298218182192155162155162152162 * 1.011905654956023176347732606594928372011589765773038907937422301397580879453382838383207517888143961e-15
29647032658695619.5308983320045485114480054988916890579275786876678466796875  with length of 75 and dot length 17 will move 58
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867687325423143330204455473774592  main number intpart lenght 63 
 fract 0 int 878946545465764654864654864564867687325423143330204455473774592
    -----------------> 29647032658695619.5308983320045485114480054988916890579275786876678466796875 ^2 ::== 878946545465764654864654864564919.875
 temp fract 0.875 temp int 878946545465764654864654864564919
before loop xstp is 0entering tens with lap of value 10
using t_rst as 296470326586956195.30898332004548512141894889282411895692348480224609375
using for fract 87894654546576465486465486456491984
getting the part of 87894654546576465486465486456491984 :: ad 35 and mad 63
    -----------------> 296470326586956195.30898332004548512141894889282411895692348480224609375 ^2 ::== 87894654546576465486465486456491984
t_ten increased 
using t_rst as 2964703265869561953.089833200454850992144884003209881484508514404296875
using for fract 8789465454657646548646548645649198080
getting the part of 8789465454657646548646548645649198080 :: ad 37 and mad 63
    -----------------> 2964703265869561953.089833200454850992144884003209881484508514404296875 ^2 ::== 8789465454657646548646548645649198080
t_ten increased 
using t_rst as 29647032658695619530.898332004548510809627259732224047183990478515625
using for fract 878946545465764654864654864564919861248
getting the part of 878946545465764654864654864564919861248 :: ad 39 and mad 63
    -----------------> 29647032658695619530.898332004548510809627259732224047183990478515625 ^2 ::== 878946545465764654864654864564919861248
t_ten increased 
using t_rst as 296470326586956195308.9833200454851294125546701252460479736328125
using for fract 87894654546576465486465486456491987697664
getting the part of 87894654546576465486465486456491987697664 :: ad 41 and mad 63
    -----------------> 296470326586956195308.9833200454851294125546701252460479736328125 ^2 ::== 87894654546576465486465486456491987697664
t_ten increased 
using t_rst as 2964703265869561953089.8332004548510667518712580204010009765625
using for fract 8789465454657646548646548645649197897351168
getting the part of 8789465454657646548646548645649197897351168 :: ad 43 and mad 63
    -----------------> 2964703265869561953089.8332004548510667518712580204010009765625 ^2 ::== 8789465454657646548646548645649197897351168
t_ten increased 
using t_rst as 29647032658695619530898.33200454851248650811612606048583984375
using for fract 878946545465764654864654864564919879929430016
getting the part of 878946545465764654864654864564919879929430016 :: ad 45 and mad 63
    -----------------> 29647032658695619530898.33200454851248650811612606048583984375 ^2 ::== 878946545465764654864654864564919879929430016
t_ten increased 
using t_rst as 296470326586956195308983.3200454851030372083187103271484375
using for fract 87894654546576465486465486456491977547582537728
getting the part of 87894654546576465486465486456491977547582537728 :: ad 47 and mad 63
    -----------------> 296470326586956195308983.3200454851030372083187103271484375 ^2 ::== 87894654546576465486465486456491977547582537728
t_ten increased 
using t_rst as 2964703265869561953089833.2004548511467874050140380859375
using for fract 8789465454657646548646548645649198669551928082432
getting the part of 8789465454657646548646548645649198669551928082432 :: ad 49 and mad 63
    -----------------> 2964703265869561953089833.2004548511467874050140380859375 ^2 ::== 8789465454657646548646548645649198669551928082432
t_ten increased 
using t_rst as 29647032658695619530898332.004548512399196624755859375
using for fract 878946545465764654864654864564919884969591317725184
getting the part of 878946545465764654864654864564919884969591317725184 :: ad 51 and mad 63
    -----------------> 29647032658695619530898332.004548512399196624755859375 ^2 ::== 878946545465764654864654864564919884969591317725184
t_ten increased 
using t_rst as 296470326586956195308983320.0454851090908050537109375
using for fract 87894654546576465486465486456491979850047847221166080
getting the part of 87894654546576465486465486456491979850047847221166080 :: ad 53 and mad 63
    -----------------> 296470326586956195308983320.0454851090908050537109375 ^2 ::== 87894654546576465486465486456491979850047847221166080
t_ten increased 
using t_rst as 2964703265869561953089833200.4548511505126953125
using for fract 8789465454657646548646548645649198206365713606631227392
getting the part of 8789465454657646548646548645649198206365713606631227392 :: ad 55 and mad 63
    -----------------> 2964703265869561953089833200.4548511505126953125 ^2 ::== 8789465454657646548646548645649198206365713606631227392
t_ten increased 
using t_rst as 29647032658695619530898332004.548511505126953125
using for fract 878946545465764654864654864564919853693136740750639235072
getting the part of 878946545465764654864654864564919853693136740750639235072 :: ad 57 and mad 63
    -----------------> 29647032658695619530898332004.548511505126953125 ^2 ::== 878946545465764654864654864564919853693136740750639235072
t_ten increased 
using t_rst as 296470326586956195308983320045.485107421875
using for fract 87894654546576465486465486456491982951462034845805574094848
getting the part of 87894654546576465486465486456491982951462034845805574094848 :: ad 59 and mad 63
    -----------------> 296470326586956195308983320045.485107421875 ^2 ::== 87894654546576465486465486456491982951462034845805574094848
t_ten increased 
using t_rst as 2964703265869561953089833200454.85107421875
using for fract 8789465454657646548646548645649197946975567435567355094106112
getting the part of 8789465454657646548646548645649197946975567435567355094106112 :: ad 61 and mad 63
    -----------------> 2964703265869561953089833200454.85107421875 ^2 ::== 8789465454657646548646548645649197946975567435567355094106112
t_ten increased 
using t_rst as 29647032658695619530898332004548.51171875
using for fract 878946545465764654864654864564919819456357529264341007393095680
getting the part of 878946545465764654864654864564919819456357529264341007393095680 :: ad 63 and mad 63
i push_back a near value of 29647032658695619530898332004548
stopping with ad 63 and mad of 63
    -----------------> 29647032658695619530898332004548.51171875 ^2 ::== 878946545465764654864654864564919819456357529264341007393095680
t_ten increased 
breaking with xbrk of value 1

increasing the digits 32
-------------------------------------------------------
-------------------------------------------------------
times 32 87894654546576465486465486456486 29298218182192155162155162152162
main 9375214906687550.99372400243128438009077019188453050446696579456329345703125 second 5412782850086649.759295964918616303994391980580758172436617314815521240234375
main 87894654546576465486465486456485.984375 second 29298218182192155162155162152162
times of 3.199926646865484371234073256653060982031598852267810434344455632322494515959232715961669121910511177e-16
new times of 3.199926646865484371234073256653060982031598852267810434344455632322494515959232715961669121910511177e-16
using 29298218182192155162155162152162 * 3.199926646865484371234073256653060982031598852267810434344455632322494515959232715961669121910511177e-16
9375214906687550.99372400243128438009077019188453050446696579456329345703125  with length of 75 and dot length 16 will move 59
lap for tens is more than ten will lower it 

 trying to reach the main number 878946545465764654864654864564867687325423143330204455473774592  main number intpart lenght 63 
 fract 0 int 878946545465764654864654864564867687325423143330204455473774592
    -----------------> 9375214906687550.99372400243128438009077019188453050446696579456329345703125 ^2 ::== 87894654546576465486465486456485.984375
 temp fract 0.984375 temp int 87894654546576465486465486456485
before loop xstp is 0entering tens with lap of value 10
using t_rst as 93752149066875509.93724002431284379743825496689169085584580898284912109375
using for fract 8789465454657646548646548645648598
getting the part of 8789465454657646548646548645648598 :: ad 34 and mad 63
    -----------------> 93752149066875509.93724002431284379743825496689169085584580898284912109375 ^2 ::== 8789465454657646548646548645648598
t_ten increased 
using t_rst as 937521490668755099.37240024312843800213812528454582206904888153076171875
using for fract 878946545465764654864654864564859776
getting the part of 878946545465764654864654864564859776 :: ad 36 and mad 63
    -----------------> 937521490668755099.37240024312843800213812528454582206904888153076171875 ^2 ::== 878946545465764654864654864564859776
t_ten increased 
using t_rst as 9375214906687550993.724002431284379355247438070364296436309814453125
using for fract 87894654546576465486465486456485969920
getting the part of 87894654546576465486465486456485969920 :: ad 38 and mad 63
    -----------------> 9375214906687550993.724002431284379355247438070364296436309814453125 ^2 ::== 87894654546576465486465486456485969920
t_ten increased 
using t_rst as 93752149066875509937.2400243128438006579017383046448230743408203125
using for fract 8789465454657646548646548645648598564864
getting the part of 8789465454657646548646548645648598564864 :: ad 40 and mad 63
    -----------------> 93752149066875509937.2400243128438006579017383046448230743408203125 ^2 ::== 8789465454657646548646548645648598564864
t_ten increased 
using t_rst as 937521490668755099372.4002431284379781573079526424407958984375
using for fract 878946545465764654864654864564859848097792
getting the part of 878946545465764654864654864564859848097792 :: ad 42 and mad 63
    -----------------> 937521490668755099372.4002431284379781573079526424407958984375 ^2 ::== 878946545465764654864654864564859848097792
t_ten increased 
using t_rst as 9375214906687550993724.002431284379781573079526424407958984375
using for fract 87894654546576465486465486456485976756715520
getting the part of 87894654546576465486465486456485976756715520 :: ad 44 and mad 63
    -----------------> 9375214906687550993724.002431284379781573079526424407958984375 ^2 ::== 87894654546576465486465486456485976756715520
t_ten increased 
using t_rst as 93752149066875509937240.02431284380145370960235595703125
using for fract 8789465454657646548646548645648598740823441408
getting the part of 8789465454657646548646548645648598740823441408 :: ad 46 and mad 63
    -----------------> 93752149066875509937240.02431284380145370960235595703125 ^2 ::== 8789465454657646548646548645648598740823441408
t_ten increased 
using t_rst as 937521490668755099372400.2431284380145370960235595703125
using for fract 878946545465764654864654864564859856490158096384
getting the part of 878946545465764654864654864564859856490158096384 :: ad 48 and mad 63
    -----------------> 937521490668755099372400.2431284380145370960235595703125 ^2 ::== 878946545465764654864654864564859856490158096384
t_ten increased 
using t_rst as 9375214906687550993724002.431284380145370960235595703125
using for fract 87894654546576465486465486456485987900815623323648
getting the part of 87894654546576465486465486456485987900815623323648 :: ad 50 and mad 63
    -----------------> 9375214906687550993724002.431284380145370960235595703125 ^2 ::== 87894654546576465486465486456485987900815623323648
t_ten increased 
using t_rst as 93752149066875509937240024.312843799591064453125
using for fract 8789465454657646548646548645648598465822389161689088
getting the part of 8789465454657646548646548645648598465822389161689088 :: ad 52 and mad 63
    -----------------> 93752149066875509937240024.312843799591064453125 ^2 ::== 8789465454657646548646548645648598465822389161689088
t_ten increased 
using t_rst as 937521490668755099372400243.12843799591064453125
using for fract 878946545465764654864654864564859846582238916168908800
getting the part of 878946545465764654864654864564859846582238916168908800 :: ad 54 and mad 63
    -----------------> 937521490668755099372400243.12843799591064453125 ^2 ::== 878946545465764654864654864564859846582238916168908800
t_ten increased 
using t_rst as 9375214906687550993724002431.2843799591064453125
using for fract 87894654546576465486465486456485982297040650182068273152
getting the part of 87894654546576465486465486456485982297040650182068273152 :: ad 56 and mad 63
    -----------------> 9375214906687550993724002431.2843799591064453125 ^2 ::== 87894654546576465486465486456485982297040650182068273152
t_ten increased 
using t_rst as 93752149066875509937240024312.8437957763671875
using for fract 8789465454657646548646548645648597700799018936806563381248
getting the part of 8789465454657646548646548645648597700799018936806563381248 :: ad 58 and mad 63
    -----------------> 93752149066875509937240024312.8437957763671875 ^2 ::== 8789465454657646548646548645648597700799018936806563381248
t_ten increased 
using t_rst as 937521490668755099372400243128.43798828125
using for fract 878946545465764654864654864564859847451154349016923519320064
getting the part of 878946545465764654864654864564859847451154349016923519320064 :: ad 60 and mad 63
    -----------------> 937521490668755099372400243128.43798828125 ^2 ::== 878946545465764654864654864564859847451154349016923519320064
t_ten increased 
using t_rst as 9375214906687550993724002431284.3798828125
using for fract 87894654546576465486465486456485980412325297402861389785071616
getting the part of 87894654546576465486465486456485980412325297402861389785071616 :: ad 62 and mad 63
i push_back a near value of 9375214906687550993724002431284
stopping with ad 62 and mad of 63
    -----------------> 9375214906687550993724002431284.3798828125 ^2 ::== 87894654546576465486465486456485980412325297402861389785071616
t_ten increased 
breaking with xbrk of value 1

increasing the digits 33


u enter as approximation 29298218182192155162155162152162 with main number to find the power 878946545465764654864654864564867687325423143330204455473774592 with psifia 63
as of the entered 
will count the digit from 858385588651334992855275983749604798700518973499057658698661888
with string of it 858385588651334992855275983749604798700518973499057658698661888
29298218182192155162155162152162 ^2 ::== 858385588651334992855275983749604798700518973499057658698661888               me idia psifia 1               me diafora 20560956814429662009378880815262888624904169831146796775112704

will count the digit from 87894654546576465486465486456478859781219327895520170022535168
with string of it 87894654546576465486465486456478859781219327895520170022535168
9375214906687550993724002431284 ^2 ::== 87894654546576465486465486456478859781219327895520170022535168            me idia psifia 30            me diafora 791051890919188189378189378108388857254764758283810883030220800

will count the digit from 87894654546576465486465486456760109854624652010935051853234176
with string of it 87894654546576465486465486456760109854624652010935051853234176
9375214906687550993724002431299 ^2 ::== 87894654546576465486465486456760109854624652010935051853234176            me idia psifia 29            me diafora 791051890919188189378189378108107597277839119885353802006528000

will count the digit from 87894654546576465486465486462966507386301434594578512360767488
with string of it 87894654546576465486465486462966507386301434594578512360767488
9375214906687550993724002431630 ^2 ::== 87894654546576465486465486462966507386301434594578512360767488            me idia psifia 27            me diafora 791051890919188189378189378101901179939121708735625943113007104

will count the digit from 87894654546576465486465486912958068193268478709929338732544000
with string of it 87894654546576465486465486912958068193268478709929338732544000
9375214906687550993724002455629 ^2 ::== 87894654546576465486465486912958068193268478709929338732544000            me idia psifia 26            me diafora 791051890919188189378189377651909619132154664620275116741230592

will count the digit from 87894654546576465486465772912964007029370820088782821529747456
with string of it 87894654546576465486465772912964007029370820088782821529747456
9375214906687550993724017708613 ^2 ::== 87894654546576465486465772912964007029370820088782821529747456            me idia psifia 23            me diafora 791051890919188189378189091651903700103092951807506032330014720

will count the digit from 87894654546576465486490972912969940271178909340804917405679616
with string of it 87894654546576465486490972912969940271178909340804917405679616
9375214906687550993725361677805 ^2 ::== 87894654546576465486490972912969940271178909340804917405679616            me idia psifia 21            me diafora 791051890919188189378163891651897766861284862555483936454082560

will count the digit from 87894654546576465486930972912957190628859719055596008595521536
with string of it 87894654546576465486930972912957190628859719055596008595521536
9375214906687550993748827806548 ^2 ::== 87894654546576465486930972912957190628859719055596008595521536            me idia psifia 20            me diafora 791051890919188189377723891651910516503604052840692845264240640

will count the digit from 87894654546576465772930972912954524873413541243738396282585088
with string of it 87894654546576465772930972912954524873413541243738396282585088
9375214906687551009001811489940 ^2 ::== 87894654546576465772930972912954524873413541243738396282585088            me idia psifia 17            me diafora 791051890919188189091723891651913132741448659237339461612208128

will count the digit from 87894654546576490972930972912966948482411389995709021936418816
with string of it 87894654546576490972930972912966948482411389995709021936418816
9375214906687552352971003173444 ^2 ::== 87894654546576490972930972912966948482411389995709021936418816            me idia psifia 15            me diafora 791051890919188163891723891651900768553572696183622031116337152

will count the digit from 87894654546576930972930972915424142712220771462117844072792064
with string of it 87894654546576930972930972915424142712220771462117844072792064
9375214906687575819099746853761 ^2 ::== 87894654546576930972930972915424142712220771462117844072792064            me idia psifia 14            me diafora 791051890919187723891723891649443514902641429018960013822001152

will count the digit from 87894654547052930972933100680118366679130162137486446389362688
with string of it 87894654547052930972933100680118366679130162137486446389362688
9375214906712961903831625404012 ^2 ::== 87894654547052930972933100680118366679130162137486446389362688            me idia psifia 10            me diafora 791051890918711723891721763884749310742772666909675809891418112

will count the digit from 87894654553152930973423038084859576317874285823168061001170944
with string of it 87894654553152930973423038084859576317874285823168061001170944
9375214907038287779615886096444 ^2 ::== 87894654553152930973423038084859576317874285823168061001170944            me idia psifia 9            me diafora 791051890912611723891231826480008120911069171790078593665597440

will count the digit from 87894655093152934371838858979356947190399635904959294847582208
with string of it 87894655093152934371838858979356947190399635904959294847582208
9375214935837627737338762076765 ^2 ::== 87894655093152934371838858979356947190399635904959294847582208            me idia psifia 7            me diafora 791051890372611720492816005585510730231503193142202961433198592

will count the digit from 87894709093186782074182985686775537735666981826144736406142976
with string of it 87894709093186782074182985686775537735666981826144736406142976
9375217815772963793192975146956 ^2 ::== 87894709093186782074182985686775537735666981826144736406142976            me idia psifia 5            me diafora 791051836372577872790471878878092189203837418636228515839606784

will count the digit from 87939327235486848147771069297537506969742430648321629747150848
with string of it 87939327235486848147771069297537506969742430648321629747150848
9377597092831769137127225032631 ^2 ::== 87939327235486848147771069297537506969742430648321629747150848            me idia psifia 2            me diafora 791007218230277806716883795267330200162721341247967224112611328

will count the digit from 878946545465764654864654864564889554298277080287380273604067328
with string of it 878946545465764654864654864564889554298277080287380273604067328
29647032658695619530898332004548 ^2 ::== 878946545465764654864654864564889554298277080287380273604067328            me idia psifia 31            me diafora 21866972853936957175818130292736

will count the digit from 878946545465764654864654864569692365509891784432300907873435648
with string of it 878946545465764654864654864569692365509891784432300907873435648
29647032658695619530898332004629 ^2 ::== 878946545465764654864654864569692365509891784432300907873435648            me idia psifia 29            me diafora 4824678184468641102096452399661056

will count the digit from 878946545465764654864654867129713703408751231926944153657671680
with string of it 878946545465764654864654867129713703408751231926944153657671680
29647032658695619530898332047804 ^2 ::== 878946545465764654864654867129713703408751231926944153657671680            me idia psifia 26            me diafora 2564846016083328088596739698183897088

will count the digit from 878946545465764654864654929129663632854524857451480053108965376
with string of it 878946545465764654864654929129663632854524857451480053108965376
29647032658695619530898333093439 ^2 ::== 878946545465764654864654929129663632854524857451480053108965376            me idia psifia 24            me diafora 64564795945529101714121275597635190784

will count the digit from 878946545465764654864659729129699366838992152190170356376403968
with string of it 878946545465764654864659729129699366838992152190170356376403968
29647032658695619530898414045892 ^2 ::== 878946545465764654864659729129699366838992152190170356376403968            me idia psifia 23            me diafora 4864564831679513569008859965900902629376

will count the digit from 878946545465764654867309729129666336574507463828522626304704512
with string of it 878946545465764654867309729129666336574507463828522626304704512
29647032658695619530943106545652 ^2 ::== 878946545465764654867309729129666336574507463828522626304704512            me idia psifia 20            me diafora 2654864564798649249084320498318170830929920

will count the digit from 878946545465764654929309729129692504767576995488064803623141376
with string of it 878946545465764654929309729129692504767576995488064803623141376
29647032658695619531988742389107 ^2 ::== 878946545465764654929309729129692504767576995488064803623141376            me idia psifia 18            me diafora 64654864564824817442153852157860348149366784

will count the digit from 878946545465764659729309729129701167921825933687461285883543552
with string of it 878946545465764659729309729129701167921825933687461285883543552
29647032658695619612941194785589 ^2 ::== 878946545465764659729309729129701167921825933687461285883543552            me idia psifia 17            me diafora 4864654864564833480596402790357256830409768960

will count the digit from 878946545465767309729309729136550960937982711662526366448877568
with string of it 878946545465767309729309729136550960937982711662526366448877568
29647032658695664305440955343361 ^2 ::== 878946545465767309729309729136550960937982711662526366448877568            me idia psifia 14            me diafora 2654864654864571683273612559568332321910975102976

will count the digit from 878946545465829309729309733885677927471251770357628821439512576
with string of it 878946545465829309729309733885677927471251770357628821439512576
29647032658696709941284409960719 ^2 ::== 878946545465829309729309733885677927471251770357628821439512576            me idia psifia 12            me diafora 64654864654869320810240145828627027424365965737984

will count the digit from 878946545471529309729347537169218347319973211075931239192985600
with string of it 878946545471529309729347537169218347319973211075931239192985600
29647032658792840978505710329427 ^2 ::== 878946545471529309729347537169218347319973211075931239192985600            me idia psifia 10            me diafora 5764654864692672604350659994550067745726783719211008

will count the digit from 878946549931529327868130677280559191458957277564160059428044800
with string of it 878946549931529327868130677280559191458957277564160059428044800
29647032734011161540483131857370 ^2 ::== 878946549931529327868130677280559191458957277564160059428044800            me idia psifia 8            me diafora 4465764673003475812715691504133534134233955603954270208

will count the digit from 878946990931709570754573643308296621538460576139722116034461696
with string of it 878946990931709570754573643308296621538460576139722116034461696
29647040171519813467643434746489 ^2 ::== 878946990931709570754573643308296621538460576139722116034461696            me idia psifia 6            me diafora 445465944915889918778743428934213037432809517660560687104

will count the digit from 878953090980273390185619479571538777004041154632050554720747520
with string of it 878953090980273390185619479571538777004041154632050554720747520
29647143049209200154026209199526 ^2 ::== 878953090980273390185619479571538777004041154632050554720747520            me idia psifia 4            me diafora 6545514508735320964615006671089678618011301846099246972928

will count the digit from 883916479212647921428659591072572385880720341930475006013210624
with string of it 883916479212647921428659591072572385880720341930475006013210624
29730732907425069419891898043024 ^2 ::== 883916479212647921428659591072572385880720341930475006013210624            me idia psifia 1            me diafora 4969933746883266564004726507704698555297198600270550539436032

will count the digit from 8879850917082775788158027418099293325620356689651035004731392000
with string of it 8879850917082775788158027418099293325620356689651035004731392000
94232960884622402849285599196160 ^2 ::== 8879850917082775788158027418099293325620356689651035004731392000            me idia psifia 1            me diafora 8000904371617011133293372553534425479838608517792155362169716736


-------------------------Approximation Result Set-----------------------------------------------------

possible approximation < ::== 29647032658695619530898332004548 ^2 878946545465764654864654864564889554298277080287380273604067328               me idia psifia 31               me diafora 21866972853936957175818130292736


possible approximation > ::== 29647032658695619530898332004548 ^2 878946545465764654864654864564889554298277080287380273604067328               me idia psifia 31               me diafora 21866972853936957175818130292736

----removing using main number 878946545465764654864654864564867687325423143330204455473774592

will count the digit from 878946545465764654864654864564830291632716410562860302729216000
with string of it 878946545465764654864654864564830291632716410562860302729216000
possible approximation of minus ::== 29647032658695619530898332004547 with ^2  878946545465764654864654864564830291632716410562860302729216000             me idia psifia 31             me diafora 37395692706732767344152744558592
will pass value of 29647032658695619530898332004547



------------------------Bee-----------------------------

-------------------Calculation Bee--------------------------------
first number second number is the qube one dimension and third the precision 
will count the digit from 878946545465764654864654864564867687325423143330204455473774592
with string of it 878946545465764654864654864564867687325423143330204455473774592
Main Number 878946545465764654864654864564867687325423143330204455473774592 has number of digits 63
Using Power of 29298218182192155162155162152162

first 878946545465764654864654864564867687325423143330204455473774592 
     doted 0
     makes 878946545465764654864654864564867687325423143330204455473774592

second 29298218182192155162155162152162 
     doted 0 
     makes 29298218182192155162155162152162

result 30000000000000000000000000000000 
     doted 0.26171875 
     makes 30000000000000000000000000000000.26171875


for the integer string 30000000000000000000000000000000.000000
the numbers are 32
the retrievable integer digit is 0

entering with number of 0.26171875
recheck values of 29298218182192155162155162152162 and result of 858385588651334992855275983749604798700518973499057658698661888 with intpart 858385588651334992855275983749604798700518973499057658698661888

     ----> using 0.26171875 rst is 0.130859375
     ----> using 0.130859375 with intpart 0 and fract 0.130859375
trying to retrieve digits 
will count the digit from 858385588651334992855275983749612563060445371404141826005794816
with string of it 858385588651334992855275983749612563060445371404141826005794816
digits retrieved 1
                     with combination da_rst 29298218182192155162155162152162.1328125 sq of rst 858385588651334992855275983749612563060445371404141826005794816
                     with intpart 858385588651334992855275983749612563060445371404141826005794816 and other part 0
                     the int string is 0.130859

     ----> using 0.130859375 rst is 0.0654296875
     ----> using 0.0654296875 with intpart 0 and fract 0.0654296875
trying to retrieve digits 
will count the digit from 858385588651334992855275983749608760108644686715937335896178688
with string of it 858385588651334992855275983749608760108644686715937335896178688
digits retrieved 1
                     with combination da_rst 29298218182192155162155162152162.06640625 sq of rst 858385588651334992855275983749608760108644686715937335896178688
                     with intpart 858385588651334992855275983749608760108644686715937335896178688 and other part 0
                     the int string is 0.065430

--------------------------------------
Psifia,Power,Result of Power,Diafora from Main,Diairesi from Main
--------------------------------------
1 29298218182192155162155162152162.132812 858385588651334992855275983749612563060445371404141826005794816.000000 20560956814429662009378880815255124264977771926062629467979776.000000 1.023953 
--------------------------------------

-------------------Calculation Bee--------------------------------
first number second number is the qube one dimension and third the precision 
will count the digit from 878946545465764654864654864564867687325423143330204455473774592
with string of it 878946545465764654864654864564867687325423143330204455473774592
Main Number 878946545465764654864654864564867687325423143330204455473774592 has number of digits 63
Using Power of 29647032658695619530898332004548

first 878946545465764654864654864564867687325423143330204455473774592 
     doted 0
     makes 878946545465764654864654864564867687325423143330204455473774592

second 29647032658695619530898332004548 
     doted 0 
     makes 29647032658695619530898332004548

result 29647032658695619530898332004547 
     doted 0.26171875 
     makes 29647032658695619530898332004547.26171875

u can easily almost retrieve the dots digits 

for the integer string 29647032658695619530898332004547.000000
the numbers are 32
the retrievable integer digit is 7

entering with number of 7.26171875
recheck values of 29647032658695619530898332004548 and result of 878946545465764654864654864564889554298277080287380273604067328 with intpart 878946545465764654864654864564889554298277080287380273604067328

recheck power 29647032658695619530898332004548 of result 878946545465764654864654864564889554298277080287380273604067328
lowering second to value of 29647032658695619530898332004548

     ----> using 7.26171875 rst is 3.630859375
     ----> using 3.630859375 with intpart 3 and fract 0.630859375
trying to retrieve digits 
will count the digit from 878946545465764654864654864564867687325423143330204455473774592
with string of it 878946545465764654864654864564867687325423143330204455473774592
digits retrieved 63
                     with combination da_rst 29647032658695619530898332004547.6328125 sq of rst 878946545465764654864654864564867687325423143330204455473774592
                     with intpart 878946545465764654864654864564867687325423143330204455473774592 and other part 0

     ----> using 7.26171875 
     ----> with rst 3.630859375 
     ----> the times i run 1
     ----> i just go down :0
     ------------------- found  @--------------------------- 
     for number 878946545465764654864654864564867687325423143330204455473774592  
     power result is  29647032658695619530898332004547.6328125
     with result of the power * power  878946545465764654864654864564867687325423143330204455473774592

                     the int string is 3.630859

--------------------------------------
Psifia,Power,Result of Power,Diafora from Main,Diairesi from Main
--------------------------------------
63 29647032658695619530898332004547.632812 878946545465764654864654864564867687325423143330204455473774592.000000 0.000000 1.000000 
--------------------------------------

-------------------Calculation Bee--------------------------------
first number second number is the qube one dimension and third the precision 
will count the digit from 878946545465764654864654864564867687325423143330204455473774592
with string of it 878946545465764654864654864564867687325423143330204455473774592
Main Number 878946545465764654864654864564867687325423143330204455473774592 has number of digits 63
Using Power of 29647032658695619530898332004548

first 878946545465764654864654864564867687325423143330204455473774592 
     doted 0
     makes 878946545465764654864654864564867687325423143330204455473774592

second 29647032658695619530898332004548 
     doted 0 
     makes 29647032658695619530898332004548

result 29647032658695619530898332004547 
     doted 0.26171875 
     makes 29647032658695619530898332004547.26171875

u can easily almost retrieve the dots digits 

for the integer string 29647032658695619530898332004547.000000
the numbers are 32
the retrievable integer digit is 7

entering with number of 7.26171875
recheck values of 29647032658695619530898332004548 and result of 878946545465764654864654864564889554298277080287380273604067328 with intpart 878946545465764654864654864564889554298277080287380273604067328

recheck power 29647032658695619530898332004548 of result 878946545465764654864654864564889554298277080287380273604067328
lowering second to value of 29647032658695619530898332004548

     ----> using 7.26171875 rst is 3.630859375
     ----> using 3.630859375 with intpart 3 and fract 0.630859375
trying to retrieve digits 
will count the digit from 878946545465764654864654864564867687325423143330204455473774592
with string of it 878946545465764654864654864564867687325423143330204455473774592
digits retrieved 63
                     with combination da_rst 29647032658695619530898332004547.6328125 sq of rst 878946545465764654864654864564867687325423143330204455473774592
                     with intpart 878946545465764654864654864564867687325423143330204455473774592 and other part 0

     ----> using 7.26171875 
     ----> with rst 3.630859375 
     ----> the times i run 1
     ----> i just go down :0
     ------------------- found  @--------------------------- 
     for number 878946545465764654864654864564867687325423143330204455473774592  
     power result is  29647032658695619530898332004547.6328125
     with result of the power * power  878946545465764654864654864564867687325423143330204455473774592

                     the int string is 3.630859

--------------------------------------
Psifia,Power,Result of Power,Diafora from Main,Diairesi from Main
--------------------------------------
63 29647032658695619530898332004547.632812 878946545465764654864654864564867687325423143330204455473774592.000000 0.000000 1.000000 
--------------------------------------

-------------------Calculation Bee--------------------------------
first number second number is the qube one dimension and third the precision 
will count the digit from 878946545465764654864654864564867687325423143330204455473774592
with string of it 878946545465764654864654864564867687325423143330204455473774592
Main Number 878946545465764654864654864564867687325423143330204455473774592 has number of digits 63
Using Power of 29647032658695619530898332004547

first 878946545465764654864654864564867687325423143330204455473774592 
     doted 0
     makes 878946545465764654864654864564867687325423143330204455473774592

second 29647032658695619530898332004547 
     doted 0 
     makes 29647032658695619530898332004547

result 29647032658695619530898332004548 
     doted 0.26171875 
     makes 29647032658695619530898332004548.26171875

u can easily almost retrieve the dots digits 

for the integer string 29647032658695619530898332004548.000000
the numbers are 32
the retrievable integer digit is 8

entering with number of 8.26171875
recheck values of 29647032658695619530898332004547 and result of 878946545465764654864654864564830291632716410562860302729216000 with intpart 878946545465764654864654864564830291632716410562860302729216000

     ----> using 8.26171875 rst is 4.130859375
     ----> using 4.130859375 with intpart 4 and fract 0.130859375
trying to retrieve digits 
will count the digit from 878946545465764654864654864564838055992642808467944470036348928
with string of it 878946545465764654864654864564838055992642808467944470036348928
digits retrieved 31
                     with combination da_rst 29647032658695619530898332004547.1328125 sq of rst 878946545465764654864654864564838055992642808467944470036348928
                     with intpart 878946545465764654864654864564838055992642808467944470036348928 and other part 0
                     the int string is 4.130859

     ----> using 4.130859375 rst is 2.0654296875
     ----> using 2.0654296875 with intpart 2 and fract 0.0654296875
trying to retrieve digits 
will count the digit from 878946545465764654864654864564834253040842123779739979926732800
with string of it 878946545465764654864654864564834253040842123779739979926732800
digits retrieved 31
                     with combination da_rst 29647032658695619530898332004547.06640625 sq of rst 878946545465764654864654864564834253040842123779739979926732800
                     with intpart 878946545465764654864654864564834253040842123779739979926732800 and other part 0
                     the int string is 2.065430

from new int t  of 8 ---> 7 with 7.26171875
     ----> using 7.26171875 rst is 3.630859375
     ----> using 3.630859375 with intpart 3 and fract 0.630859375
trying to retrieve digits 
will count the digit from 878946545465764654864654864564867687325423143330204455473774592
with string of it 878946545465764654864654864564867687325423143330204455473774592
digits retrieved 63
                     with combination da_rst 29647032658695619530898332004547.6328125 sq of rst 878946545465764654864654864564867687325423143330204455473774592
                     with intpart 878946545465764654864654864564867687325423143330204455473774592 and other part 0

     ----> using 7.26171875 
     ----> with rst 3.630859375 
     ----> the times i run 3
     ----> i just go down :1
     ------------------- found  @--------------------------- 
     for number 878946545465764654864654864564867687325423143330204455473774592  
     power result is  29647032658695619530898332004547.6328125
     with result of the power * power  878946545465764654864654864564867687325423143330204455473774592

                     the int string is 3.630859

--------------------------------------
Psifia,Power,Result of Power,Diafora from Main,Diairesi from Main
--------------------------------------
31 29647032658695619530898332004547.132812 878946545465764654864654864564838055992642808467944470036348928.000000 29631332780334862259985437425664.000000 1.000000 
--------------------------------------
