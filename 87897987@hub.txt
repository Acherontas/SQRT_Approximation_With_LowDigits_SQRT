voyeristic behaviours and others have fun 
ur number ,ur precision , ur sleep time , ur log ,ur automation 0 no 1 auto , ur bee auto 0 for no log 1 for log 
the approximation while loops times to run if -1 infinite loop will occur until other equations gets equal 
with main number 87894654546576465486465486456486764295765213534217540308916240384
will count the digit from 87894654546576465486465486456486764295765213534217540308916240384
with string of it 87894654546576465486465486456486764295765213534217540308916240384
65
 @ CDIS : with main number 87894654546576465486465486456486764295765213534217540308916240384
Main cdi 319
Secondary cdi 13
Secondary cdi 4
Exiting Secondary cdi 4
with sqrt of math 296470326586956195308983320045476.3125

9 25 |34 16| 296470326586956195308983320045476.3125  and main 87894654546576465486465486456486764295765213534217540308916240384
-------------------------------------------------------------------------
section_temp 0
section h inf
87894654546576465486465486456486764295765213534217540308916240384 / 34 ::== 2585136898428719573131337836955493048880585688826554104722489344
            ----->  | *2 5170273796857439146262675673910986097761171377653108209444978688
            ----->  /2 1292568449214359786565668918477746524440292844413277052361244672
                 --> 646284224607179893282834459238873262220146422206638526180622336
                 --> 323142112303589946641417229619436631110073211103319263090311168
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 2673173113447063991590824862887999968610310922554402551522918400 51702737968574391462626756739109.890625
i insert 16707331959044149947442655393050387704898113104161873938199085056 129256844921435978656566891847774.71875
i insert 0 0
i insert 167073319590441499474426553930493540942899520116136285638230016 12925684492143597865656689184777.47265625
i insert 1044208247440259371715165962065616906465826249160378955205705728 32314211230358994664141722961943.6796875
CDIS Start 
section_temp 0
section h inf
2585136898428719573131337836955493048880585688826554104722489344 / 13 ::== 198856684494516890240872141304268689973263321120170500859887616
            ----->  | *2 397713368989033780481744282608537379946526642240341001719775232
            ----->  /2 99428342247258445120436070652134344986631660560085250429943808
                 --> 49714171123629222560218035326067172493315830280042625214971904
                 --> 24857085561814611280109017663033586246657915140021312607485952
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 1581759238726073367805221812359757284009061150047950477702725632 39771336898903378048174428260853.75
i insert 9885995242037958548782636327248780724877279536048198227035422720 99428342247258445120436070652134.375
i insert 0 0
i insert 98859952420379585487826363272479858683368551790812909973536768 9942834224725844512043607065213.4375
i insert 61787470262737240929891477045304882065784197556760041912377802752 248570855618146112801090176630335.9375
section_temp 0
section h inf
198856684494516890240872141304268689973263321120170500859887616 / 4 ::== 49714171123629222560218035326067172493315830280042625214971904
            ----->  | *2 99428342247258445120436070652134344986631660560085250429943808
            ----->  /2 24857085561814611280109017663033586246657915140021312607485952
                 --> 12428542780907305640054508831516793123328957570010656303742976
                 --> 6214271390453652820027254415758396561664478785005328151871488
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 9885995242037958548782636327248780724877279536048198227035422720 99428342247258445120436070652134.375
i insert 61787470262737240929891477045304882065784197556760041912377802752 248570855618146112801090176630335.9375
i insert 0 0
i insert 617874702627372409298914770453023917661800492001008016389308416 24857085561814611280109017663033.59375
i insert 3861716891421077558118217315331461956792395572436492611838017536 62142713904536528200272544157583.984375
CDIS End 
section_temp 0
section h inf
87894654546576465486465486456486764295765213534217540308916240384 / 16 ::== 5493415909161029092904092903530422768485325845888596269307265024
            ----->  | *2 10986831818322058185808185807060845536970651691777192538614530048
            ----->  /2 2746707954580514546452046451765211384242662922944298134653632512
                 --> 1373353977290257273226023225882605692121331461472149067326816256
                 --> 686676988645128636613011612941302846060665730736074533663408128
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 12071047340409398337027318521478927826749389806486681733786763264 109868318183220581858081858070608.4375
i insert 75444045877558739606420740759243846225330334828585857037776191488 274670795458051454645204645176521.09375
i insert 0 0
i insert 754440458775587396064207407592432989171836862905417608361672704 27467079545805145464520464517652.109375
i insert 4715252867347421225401296297452706162516939764592775653874466816 68667698864512863661301161294130.2734375
section_temp 0
section h inf
5493415909161029092904092903530422768485325845888596269307265024 / 319 ::== 17220739527150561419762046719531107029289083730637740717375488
            ----->  | *2 34441479054301122839524093439062214058578167461275481434750976
            ----->  /2 8610369763575280709881023359765553514644541865318870358687744
                 --> 4305184881787640354940511679882776757322270932659435179343872
                 --> 2152592440893820177470255839941388378661135466329717589671936
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 1186215479447862966856390809984068422843858135742625503529402368 34441479054301122839524093439062.21875
i insert 7413846746549143542852442562400427840844519634052253380918640640 86103697635752807098810233597655.546875
i insert 0 0
i insert 74138467465491435428524425623995670268588021520242995258982400 8610369763575280709881023359765.5546875
i insert 46336542165932147142827766015002890456618236682996889192813821952 215259244089382017747025583994138.875
removals 
reporing rt 4
section_temp 0
section h inf
2585136898428719573131337836955493048880585688826554104722489344 - 17220739527150561419762046719531107029289083730637740717375488 ::== 2567916158901569011711575790235962043362379826497098905733300224
            ----->  | *2 5135832317803138023423151580471924086724759652994197811466600448
            ----->  /2 1283958079450784505855787895117981021681189913248549452866650112
                 --> 641979039725392252927893947558990510840594956624274726433325056
                 --> 320989519862696126463946973779495255420297478312137363216662528
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 2637677359659115292106128039062246818410846569818705860992434176 51358323178031380234231515804719.234375
i insert 16485483497869470575663300244139171202375551712386825953034108928 128395807945078450585578789511798.09375
i insert 0 0
i insert 164854834978694705756633002441371153900146315813549486746107904 12839580794507845058557878951179.80859375
i insert 1030342718616841910978956265258666033514491190703113643220795392 32098951986269612646394697377949.5234375
section_temp 0
section h inf
198856684494516890240872141304268689973263321120170500859887616 - 17220739527150561419762046719531107029289083730637740717375488 ::== 181635944967366328821110094584737585419854315960293309940760576
            ----->  | *2 363271889934732657642220189169475170839708631920586619881521152
            ----->  /2 90817972483683164410555047292368792709927157980146654970380288
                 --> 45408986241841582205277523646184396354963578990073327485190144
                 --> 22704493120920791102638761823092198177481789495036663742595072
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 1319664660167525183770843698099494271063004751789010535158120448 36327188993473265764222018916947.53125
i insert 8247904126047032398567773113121930623443321159726898794456940544 90817972483683164410555047292368.828125
i insert 0 0
i insert 82479041260470323985677731131204774601005657803789268080918528 9081797248368316441055504729236.8828125
i insert 51549400787793952491048581957012972132874620318200486859796119552 227044931209207911026387618230922.0625
section_temp 0
section h inf
49714171123629222560218035326067172493315830280042625214971904 - 17220739527150561419762046719531107029289083730637740717375488 ::== 32493431596478661140455988606536067939906825120165434295844864
            ----->  | *2 64986863192957322280911977213072135879813650240330868591689728
            ----->  /2 16246715798239330570227994303268033969953412560082717147922432
                 --> 8123357899119665285113997151634016984976706280041358573961216
                 --> 4061678949559832642556998575817008492488353140020679286980608
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 4223292387660151173065476578229793193993973477874577762185904128 64986863192957322280911977213072.1640625
i insert 26395577422875944831659228613936207145549684179658760639486099456 162467157982393305702279943032680.40625
i insert 0 0
i insert 263955774228759448316592286139362074624623342367161110136619008 16246715798239330570227994303268.041015625
i insert 1649723588929746551978701788371012946596855261228672539967881216 40616789495598326425569985758170.1015625
section_temp 0
section h inf
5493415909161029092904092903530422768485325845888596269307265024 - 17220739527150561419762046719531107029289083730637740717375488 ::== 5476195169633878531484330856810891446054469926501790696142274560
            ----->  | *2 10952390339267757062968661713621782892108939853003581392284549120
            ----->  /2 2738097584816939265742165428405445723027234963250895348071137280
                 --> 1369048792408469632871082714202722861513617481625447674035568640
                 --> 684524396204234816435541357101361430756808740812723837017784320
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 11995485414368569466038566426882859220407323166692221315666935808 109523903392677570629686617136217.84375
i insert 74971783839803559162741040168018690931309417570363852338243829760 273809758481693926574216542840544.59375
i insert 0 0
i insert 749717838398035591627410401680164994803342730187860149125775360 27380975848169392657421654284054.4609375
i insert 4685736489987722447671315010501168183206838598147740771140239360 68452439620423481643554135710136.1484375
ending sqti reporting the results 
reporting size of xl vector 44 64
entering amfidromi loop of xl vector  with first 
 of 51702737968574391462626756739109.890625 ^2 ::== 2673173113447063991590824862888092190191477526243361436681109504 as intpart 2673173113447063991590824862887999968610310922554402551522918400  diafora 85221481433129401494874661593598764327154902611663137757393321984 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 129256844921435978656566891847774.71875 ^2 ::== 16707331959044149947442655393050572781885746425654492456867069952 as intpart 16707331959044149947442655393050387704898113104161873938199085056  diafora 71187322587532315539022831063436379126168300886514469364123566080 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 12925684492143597865656689184777.47265625 ^2 ::== 167073319590441499474426553930505761886967345390210089792569344 as intpart 167073319590441499474426553930493540942899520116136285638230016  diafora 87727581226986023986991059902556274438931870927393102123071700992 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 32314211230358994664141722961943.6796875 ^2 ::== 1044208247440259371715165962065660798867859151603405778554191872 as intpart 1044208247440259371715165962065616906465826249160378955205705728  diafora 86850446299136206114750320494421151984532813112388741779259654144 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 39771336898903378048174428260853.75 ^2 ::== 1581759238726073367805221812359816863587271876829820822753378304 as intpart 1581759238726073367805221812359757284009061150047950477702725632  diafora 86312895307850392118660264644127004001085976842124761276543401984 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 99428342247258445120436070652134.375 ^2 ::== 9885995242037958548782636327248855516262693001582886532524539904 as intpart 9885995242037958548782636327248780724877279536048198227035422720  diafora 78008659304538506937682850129237983570887933998169342081880817664 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 9942834224725844512043607065213.4375 ^2 ::== 98859952420379585487826363272488553974204492301863801422086144 as intpart 98859952420379585487826363272479858683368551790812909973536768  diafora 87795794594156085900977660093214288150901962838567552096315375616 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 248570855618146112801090176630335.9375 ^2 ::== 61787470262737240929891477045305348561205081545179792699157381120 as intpart 61787470262737240929891477045304882065784197556760041912377802752  diafora 26107184283839224556574009411181882229981015977457498396538437632 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 99428342247258445120436070652134.375 ^2 ::== 9885995242037958548782636327248855516262693001582886532524539904 as intpart 9885995242037958548782636327248780724877279536048198227035422720  diafora 78008659304538506937682850129237983570887933998169342081880817664 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 248570855618146112801090176630335.9375 ^2 ::== 61787470262737240929891477045305348561205081545179792699157381120 as intpart 61787470262737240929891477045304882065784197556760041912377802752  diafora 26107184283839224556574009411181882229981015977457498396538437632 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 24857085561814611280109017663033.59375 ^2 ::== 617874702627372409298914770453053469766418312598930408282783744 as intpart 617874702627372409298914770453023917661800492001008016389308416  diafora 87276779843949093077166571686033740219647088013687857105439031296 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 62142713904536528200272544157583.984375 ^2 ::== 3861716891421077558118217315331584285075317596573737043697336320 as intpart 3861716891421077558118217315331461956792395572436492611838017536  diafora 84032937655155387928347269141155302972798118075895748445429825536 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 109868318183220581858081858070608.4375 ^2 ::== 12071047340409398337027318521479022900544406923691793986527166464 as intpart 12071047340409398337027318521478927826749389806486681733786763264  diafora 75823607206167067149438167935007837736666423955960260071832682496 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 274670795458051454645204645176521.09375 ^2 ::== 75444045877558739606420740759243896931354343957761916905904406528 as intpart 75444045877558739606420740759243846225330334828585857037776191488  diafora 12450608669017725880044745697242918070434878705631683271140048896 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 27467079545805145464520464517652.109375 ^2 ::== 754440458775587396064207407592438931284025432730737124157947904 as intpart 754440458775587396064207407592432989171836862905417608361672704  diafora 87140214087800878090401279048894329484345638843232358049043709952 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 68667698864512863661301161294130.2734375 ^2 ::== 4715252867347421225401296297452743558209646497360119806619025408 as intpart 4715252867347421225401296297452706162516939764592775653874466816  diafora 83179401679229044261064190159034059400898873997854166151744978944 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 34441479054301122839524093439062.21875 ^2 ::== 1186215479447862966856390809984083476194735845966768276879966208 as intpart 1186215479447862966856390809984068422843858135742625503529402368  diafora 86708439067128602519609095646502698883591530940519743360056950784 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 86103697635752807098810233597655.546875 ^2 ::== 7413846746549143542852442562400521646988936523027964136955838464 as intpart 7413846746549143542852442562400427840844519634052253380918640640  diafora 80480807800027321943613043894086332651968893215477082437887983616 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 8610369763575280709881023359765.5546875 ^2 ::== 74138467465491435428524425624005217262170990372923017304997888 as intpart 74138467465491435428524425623995670268588021520242995258982400  diafora 87820516079110974051036962030862769714883860083831939224886575104 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 215259244089382017747025583994138.875 ^2 ::== 46336542165932147142827766015003265681195904238899732216962613248 as intpart 46336542165932147142827766015002890456618236682996889192813821952  diafora 41558112380644318343637720441483873839146976851220651116102418432 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 51358323178031380234231515804719.234375 ^2 ::== 2637677359659115292106128039062270903772250906177334298353336320 as intpart 2637677359659115292106128039062246818410846569818705860992434176  diafora 85256977186917350194359358417424512723664616108538578835286786048 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 128395807945078450585578789511798.09375 ^2 ::== 16485483497869470575663300244139194020086355820516052893691805696 as intpart 16485483497869470575663300244139171202375551712386825953034108928  diafora 71409171048706994910802186212347593093389661821830714355882131456 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 12839580794507845058557878951179.80859375 ^2 ::== 164854834978694705756633002441391931485765681636083393647083520 as intpart 164854834978694705756633002441371153900146315813549486746107904  diafora 87729799711597770780708853454045389418141429047980123925604466688 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 32098951986269612646394697377949.5234375 ^2 ::== 1030342718616841910978956265258699626255397238782253305855737856 as intpart 1030342718616841910978956265258666033514491190703113643220795392  diafora 86864311827959623575486530191228095251580546801469598111025332224 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 36327188993473265764222018916947.53125 ^2 ::== 1319664660167525183770843698099532934406311712785756184605884416 as intpart 1319664660167525183770843698099494271063004751789010535158120448  diafora 86574989886408940302694642758387274461479309581231435012219338752 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 90817972483683164410555047292368.828125 ^2 ::== 8247904126047032398567773113122080206214148090796275405435174912 as intpart 8247904126047032398567773113121930623443321159726898794456940544  diafora 79646750420529433087897713343364831137020691918031838521052889088 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 9081797248368316441055504729236.8828125 ^2 ::== 82479041260470323985677731131220808400394482049109761537867776 as intpart 82479041260470323985677731131204774601005657803789268080918528  diafora 87812175505315995162479808725355558857628346819449923694904737792 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 227044931209207911026387618230922.0625 ^2 ::== 51549400787793952491048581957013002556489025795706122780673048576 as intpart 51549400787793952491048581957012972132874620318200486859796119552  diafora 36345253758782512995416904499473792162890593216017053449120120832 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 64986863192957322280911977213072.1640625 ^2 ::== 4223292387660151173065476578229814744054177357774403206140395520 as intpart 4223292387660151173065476578229793193993973477874577762185904128  diafora 83671362158916314313400009878256972369421840284572364043433541632 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 162467157982393305702279943032680.40625 ^2 ::== 26395577422875944831659228613936338981212107915516516296619458560 as intpart 26395577422875944831659228613936207145549684179658760639486099456  diafora 61499077123700520654806257842550557150215529354558779669430140928 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 16246715798239330570227994303268.041015625 ^2 ::== 263955774228759448316592286139363421503386084860900200383774720 as intpart 263955774228759448316592286139362074624623342367161110136619008  diafora 87630698772347706038148894170347397863591651907311811553862352896 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 40616789495598326425569985758170.1015625 ^2 ::== 1649723588929746551978701788371021186325756744719782268538716160 as intpart 1649723588929746551978701788371012946596855261228672539967881216  diafora 86244930957646718934486784668115746912391257474185962530487140352 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 109523903392677570629686617136217.84375 ^2 ::== 11995485414368569466038566426883043029744356259955438337631715328 as intpart 11995485414368569466038566426882859220407323166692221315666935808  diafora 75899169132207896020426920029603907610659090823984121986655715328 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 273809758481693926574216542840544.59375 ^2 ::== 74971783839803559162741040168019015449863075997090635494264406016 as intpart 74971783839803559162741040168018690931309417570363852338243829760  diafora 12922870706772906323724446288468073364455795963853687970672410624 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 27380975848169392657421654284054.4609375 ^2 ::== 749717838398035591627410401680190189359022266247214896101982208 as intpart 749717838398035591627410401680164994803342730187860149125775360  diafora 87144936708178429894838076054806594626500282462433762140697395200 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 68452439620423481643554135710136.1484375 ^2 ::== 4685736489987722447671315010501188465616442249818164718391525376 as intpart 4685736489987722447671315010501168183206838598147740771140239360  diafora 83208918056588743038794171445985594844907774707840398041072795648 from 87894654546576465486465486456486764295765213534217540308916240384
the size of xpl vector is 44 64
 of 274670795458051454645204645176521.09375 ^2 ::== 75444045877558739606420740759243896931354343957761916905904406528 as intpart 75444045877558739606420740759243846225330334828585857037776191488  diafora 12450608669017725880044745697242918070434878705631683271140048896 from 87894654546576465486465486456486764295765213534217540308916240384

-------------------------------------------------------------------------

9 |25| 34 |16| 296470326586956195308983320045476.3125  and main 87894654546576465486465486456486764295765213534217540308916240384
-------------------------------------------------------------------------
section_temp 0
section h inf
87894654546576465486465486456486764295765213534217540308916240384 / 25 ::== 3515786181863058619458619458259470749301692573320817821895098368
            ----->  | *2 7031572363726117238917238916518941498603385146641635643790196736
            ----->  /2 1757893090931529309729309729129735374650846286660408910947549184
                 --> 878946545465764654864654864564867687325423143330204455473774592
                 --> 439473272732882327432327432282433843662711571665102227736887296
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 4944300990631689558846389666397751680946266335788933221179195392 70315723637261172389172389165189.421875
i insert 30901881191448059742789935414986126427736146721969093293346127872 175789309093152930972930972912973.5625
i insert 0 0
i insert 309018811914480597427899354149850685733102562645335442945212416 17578930909315293097293097291297.35546875
i insert 1931367574465503733924370963436610717848005176108542138528038912 43947327273288232743232743228243.390625
CDIS Start 
section_temp 0
section h inf
3515786181863058619458619458259470749301692573320817821895098368 / 13 ::== 270445090912542970727586112173805445301213371573306662974390272
            ----->  | *2 540890181825085941455172224347610890602426743146613325948780544
            ----->  /2 135222545456271485363793056086902722650606685786653331487195136
                 --> 67611272728135742681896528043451361325303342893326665743597568
                 --> 33805636364067871340948264021725680662651671446663332871798784
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 2925621887947745301092538264140706586624699099775749018951352320 54089018182508594145517222434761.1015625
i insert 18285136799673408131828364150879280290105657410259458440571125760 135222545456271485363793056086902.75
i insert 0 0
i insert 182851367996734081318283641508787387656148724135120065676705792 13522254545627148536379305608690.275390625
i insert 1142821049979588008239272759429921266934372511533401302812852224 33805636364067871340948264021725.6875
section_temp 0
section h inf
270445090912542970727586112173805445301213371573306662974390272 / 4 ::== 67611272728135742681896528043451361325303342893326665743597568
            ----->  | *2 135222545456271485363793056086902722650606685786653331487195136
            ----->  /2 33805636364067871340948264021725680662651671446663332871798784
                 --> 16902818182033935670474132010862840331325835723331666435899392
                 --> 8451409091016967835237066005431420165662917861665833217949696
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 18285136799673408131828364150879280290105657410259458440571125760 135222545456271485363793056086902.75
i insert 1142821049979588008239272759429921266934372511533401302812852224 33805636364067871340948264021725.6875
i insert 0 0
i insert 11428210499795880082392727594295830914262006884914254596538368 3380563636406787134094826402172.56884765625
i insert 7142631562372425051495454746437260933476817500245863125185724416 84514090910169678352370660054314.21875
CDIS End 
section_temp 0
section h inf
87894654546576465486465486456486764295765213534217540308916240384 / 16 ::== 5493415909161029092904092903530422768485325845888596269307265024
            ----->  | *2 10986831818322058185808185807060845536970651691777192538614530048
            ----->  /2 2746707954580514546452046451765211384242662922944298134653632512
                 --> 1373353977290257273226023225882605692121331461472149067326816256
                 --> 686676988645128636613011612941302846060665730736074533663408128
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 12071047340409398337027318521478927826749389806486681733786763264 109868318183220581858081858070608.4375
i insert 75444045877558739606420740759243846225330334828585857037776191488 274670795458051454645204645176521.09375
i insert 0 0
i insert 754440458775587396064207407592432989171836862905417608361672704 27467079545805145464520464517652.109375
i insert 4715252867347421225401296297452706162516939764592775653874466816 68667698864512863661301161294130.2734375
section_temp 0
section h inf
5493415909161029092904092903530422768485325845888596269307265024 / 319 ::== 17220739527150561419762046719531107029289083730637740717375488
            ----->  | *2 34441479054301122839524093439062214058578167461275481434750976
            ----->  /2 8610369763575280709881023359765553514644541865318870358687744
                 --> 4305184881787640354940511679882776757322270932659435179343872
                 --> 2152592440893820177470255839941388378661135466329717589671936
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 1186215479447862966856390809984068422843858135742625503529402368 34441479054301122839524093439062.21875
i insert 7413846746549143542852442562400427840844519634052253380918640640 86103697635752807098810233597655.546875
i insert 0 0
i insert 74138467465491435428524425623995670268588021520242995258982400 8610369763575280709881023359765.5546875
i insert 46336542165932147142827766015002890456618236682996889192813821952 215259244089382017747025583994138.875
removals 
reporing rt 4
section_temp 0
section h inf
3515786181863058619458619458259470749301692573320817821895098368 - 17220739527150561419762046719531107029289083730637740717375488 ::== 3498565442335908058038857411539939426870836653934012248730107904
            ----->  | *2 6997130884671816116077714823079878853741673307868024497460215808
            ----->  /2 1749282721167954029019428705769969713435418326967006124365053952
                 --> 874641360583977014509714352884984856717709163483503062182526976
                 --> 437320680291988507254857176442492428358854581741751531091263488
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 4895984061722819204480395155925427217496350582180355055825190912 69971308846718161160777148230798.7734375
i insert 30599900385767620028002469724534269505548879044356006627728424960 174928272116795402901942870576996.9375
i insert 0 0
i insert 305999003857676200280024697245321731283687516099832814548025344 17492827211679540290194287057699.693359375
i insert 1912493774110476251750154357783391844096804940272250414233026560 43732068029198850725485717644249.234375
section_temp 0
section h inf
270445090912542970727586112173805445301213371573306662974390272 - 17220739527150561419762046719531107029289083730637740717375488 ::== 253224351385392409307824065454274320940763737847345073669275648
            ----->  | *2 506448702770784818615648130908548641881527475694690147338551296
            ----->  /2 126612175692696204653912032727137160470381868923672536834637824
                 --> 63306087846348102326956016363568580235190934461836268417318912
                 --> 31653043923174051163478008181784290117595467230918134208659456
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 2564902885382107464125101021830699200441047866833322231489101824 50644870277078481861564813090854.8828125
i insert 16030643033638171650781881386442377300681128002261875408720887808 126612175692696204653912032727137.203125
i insert 0 0
i insert 160306430336381716507818813864406043328603837949152070822002688 12661217569269620465391203272713.720703125
i insert 1001915189602385728173867586652632735660067647273848504254988288 31653043923174051163478008181784.30078125
section_temp 0
section h inf
67611272728135742681896528043451361325303342893326665743597568 - 17220739527150561419762046719531107029289083730637740717375488 ::== 50390533200985181262134481323920256771894337733449474824470528
            ----->  | *2 100781066401970362524268962647840513543788675466898949648941056
            ----->  /2 25195266600492590631067240661960128385947168866724737412235264
                 --> 12597633300246295315533620330980064192973584433362368706117632
                 --> 6298816650123147657766810165490032096486792216681184353058816
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 10156823345118359432784726200619209063647110203552473846829285376 100781066401970362524268962647840.53125
i insert 63480145906989746454904538753870559588170079322218005359679766528 251952666004925906310672406619601.3125
i insert 0 0
i insert 634801459069897464549045387538700566477944387722029615426830336 25195266600492590631067240661960.1328125
i insert 3967509119186859153431533672116878916820924366018288665751453696 62988166501231476577668101654900.328125
section_temp 0
section h inf
5493415909161029092904092903530422768485325845888596269307265024 - 17220739527150561419762046719531107029289083730637740717375488 ::== 5476195169633878531484330856810891446054469926501790696142274560
            ----->  | *2 10952390339267757062968661713621782892108939853003581392284549120
            ----->  /2 2738097584816939265742165428405445723027234963250895348071137280
                 --> 1369048792408469632871082714202722861513617481625447674035568640
                 --> 684524396204234816435541357101361430756808740812723837017784320
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 11995485414368569466038566426882859220407323166692221315666935808 109523903392677570629686617136217.84375
i insert 74971783839803559162741040168018690931309417570363852338243829760 273809758481693926574216542840544.59375
i insert 0 0
i insert 749717838398035591627410401680164994803342730187860149125775360 27380975848169392657421654284054.4609375
i insert 4685736489987722447671315010501168183206838598147740771140239360 68452439620423481643554135710136.1484375
ending sqti reporting the results 
reporting size of xl vector 44 64
entering amfidromi loop of xl vector  with first 
 of 70315723637261172389172389165189.421875 ^2 ::== 4944300990631689558846389666397811260524477062570803566229848064 as intpart 4944300990631689558846389666397751680946266335788933221179195392  diafora 82950353555944775927619096790089008811867146513740402597627428864 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 175789309093152930972930972912973.5625 ^2 ::== 30901881191448059742789935414986324181229782325755726779046166528 as intpart 30901881191448059742789935414986126427736146721969093293346127872  diafora 56992773355128405743675551041500642938631467725166053002382934016 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 17578930909315293097293097291297.35546875 ^2 ::== 309018811914480597427899354149863203782779816410675222889365504 as intpart 309018811914480597427899354149850685733102562645335442945212416  diafora 87585635734661984889037587102336910282449285372470025937125113856 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 43947327273288232743232743228243.390625 ^2 ::== 1931367574465503733924370963436645261326861395359732923690385408 as intpart 1931367574465503733924370963436610717848005176108542138528038912  diafora 85963286972110961752541115493050153894829858415166348544564002816 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 54089018182508594145517222434761.1015625 ^2 ::== 2925621887947745301092538264140717361654801039725661740928598016 as intpart 2925621887947745301092538264140706586624699099775749018951352320  diafora 84969032658628720185372948192346061195179665062072645405898702848 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 135222545456271485363793056086902.75 ^2 ::== 18285136799673408131828364150879483114201693926963697913083985920 as intpart 18285136799673408131828364150879280290105657410259458440571125760  diafora 69609517746903057354637122305607478935057155211040475881532293120 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 13522254545627148536379305608690.275390625 ^2 ::== 182851367996734081318283641508794835103425064982853858808037376 as intpart 182851367996734081318283641508787387656148724135120065676705792  diafora 87711803178579731405147202814977979859358118466428995602751684608 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 33805636364067871340948264021725.6875 ^2 ::== 1142821049979588008239272759429967694637605870435231119567749120 as intpart 1142821049979588008239272759429921266934372511533401302812852224  diafora 86751833496596877478226213697056846356413666621786317934949302272 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 135222545456271485363793056086902.75 ^2 ::== 18285136799673408131828364150879483114201693926963697913083985920 as intpart 18285136799673408131828364150879280290105657410259458440571125760  diafora 69609517746903057354637122305607478935057155211040475881532293120 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 33805636364067871340948264021725.6875 ^2 ::== 1142821049979588008239272759429967694637605870435231119567749120 as intpart 1142821049979588008239272759429921266934372511533401302812852224  diafora 86751833496596877478226213697056846356413666621786317934949302272 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 3380563636406787134094826402172.56884765625 ^2 ::== 11428210499795880082392727594299677193964066561428366175502336 as intpart 11428210499795880082392727594295830914262006884914254596538368  diafora 87883226336076669606383093728892471606742771233627763748296982528 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 84514090910169678352370660054314.21875 ^2 ::== 7142631562372425051495454746437297695344224118898506529578680320 as intpart 7142631562372425051495454746437260933476817500245863125185724416  diafora 80752022984204040434970031710049503362288396033971677183730515968 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 109868318183220581858081858070608.4375 ^2 ::== 12071047340409398337027318521479022900544406923691793986527166464 as intpart 12071047340409398337027318521478927826749389806486681733786763264  diafora 75823607206167067149438167935007837736666423955960260071832682496 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 274670795458051454645204645176521.09375 ^2 ::== 75444045877558739606420740759243896931354343957761916905904406528 as intpart 75444045877558739606420740759243846225330334828585857037776191488  diafora 12450608669017725880044745697242918070434878705631683271140048896 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 27467079545805145464520464517652.109375 ^2 ::== 754440458775587396064207407592438931284025432730737124157947904 as intpart 754440458775587396064207407592432989171836862905417608361672704  diafora 87140214087800878090401279048894329484345638843232358049043709952 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 68667698864512863661301161294130.2734375 ^2 ::== 4715252867347421225401296297452743558209646497360119806619025408 as intpart 4715252867347421225401296297452706162516939764592775653874466816  diafora 83179401679229044261064190159034059400898873997854166151744978944 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 34441479054301122839524093439062.21875 ^2 ::== 1186215479447862966856390809984083476194735845966768276879966208 as intpart 1186215479447862966856390809984068422843858135742625503529402368  diafora 86708439067128602519609095646502698883591530940519743360056950784 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 86103697635752807098810233597655.546875 ^2 ::== 7413846746549143542852442562400521646988936523027964136955838464 as intpart 7413846746549143542852442562400427840844519634052253380918640640  diafora 80480807800027321943613043894086332651968893215477082437887983616 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 8610369763575280709881023359765.5546875 ^2 ::== 74138467465491435428524425624005217262170990372923017304997888 as intpart 74138467465491435428524425623995670268588021520242995258982400  diafora 87820516079110974051036962030862769714883860083831939224886575104 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 215259244089382017747025583994138.875 ^2 ::== 46336542165932147142827766015003265681195904238899732216962613248 as intpart 46336542165932147142827766015002890456618236682996889192813821952  diafora 41558112380644318343637720441483873839146976851220651116102418432 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 69971308846718161160777148230798.7734375 ^2 ::== 4895984061722819204480395155925535601622670095794183023949250560 as intpart 4895984061722819204480395155925427217496350582180355055825190912  diafora 82998670484853646281985091300561333909142362381463681511333036032 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 174928272116795402901942870576996.9375 ^2 ::== 30599900385767620028002469724534599094704938384000395770561822720 as intpart 30599900385767620028002469724534269505548879044356006627728424960  diafora 57294754160808845458463016731952499860818735402779139668000636928 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 17492827211679540290194287057699.693359375 ^2 ::== 305999003857676200280024697245345975101416880987136438996828160 as intpart 305999003857676200280024697245321731283687516099832814548025344  diafora 87588655542718789286185461759241442643709688532382045087912165376 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 43732068029198850725485717644249.234375 ^2 ::== 1912493774110476251750154357783412443419058649000024735660113920 as intpart 1912493774110476251750154357783391844096804940272250414233026560  diafora 85982160772465989234715332098703377205358159449805545507320233984 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 50644870277078481861564813090854.8828125 ^2 ::== 2564902885382107464125101021830788569808363957006127749065080832 as intpart 2564902885382107464125101021830699200441047866833322231489101824  diafora 85329751661194358022340385434656066679887415952670969948306145280 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 126612175692696204653912032727137.203125 ^2 ::== 16030643033638171650781881386442428006705137131437935276849102848 as intpart 16030643033638171650781881386442377300681128002261875408720887808  diafora 71864011512938293835683605070044389530385285988414467893601763328 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 12661217569269620465391203272713.720703125 ^2 ::== 160306430336381716507818813864424285613022747312882984316567552 as intpart 160306430336381716507818813864406043328603837949152070822002688  diafora 87734348116240083769957667642622359005104153581779595376761765888 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 31653043923174051163478008181784.30078125 ^2 ::== 1001915189602385728173867586652651750419071070714870954803068928 as intpart 1001915189602385728173867586652632735660067647273848504254988288  diafora 86892739356974079758291618869834132352386771029587067740100755456 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 100781066401970362524268962647840.53125 ^2 ::== 10156823345118359432784726200619316813948129603051601066601742336 as intpart 10156823345118359432784726200619209063647110203552473846829285376  diafora 77737831201458106053680760255867551429166302645976861971977338880 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 251952666004925906310672406619601.3125 ^2 ::== 63480145906989746454904538753870721847446908535581396937690054656 as intpart 63480145906989746454904538753870559588170079322218005359679766528  diafora 24414508639586719031560947702616204707595134211999534949236473856 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 25195266600492590631067240661960.1328125 ^2 ::== 634801459069897464549045387538707300871758100190725066662608896 as intpart 634801459069897464549045387538700566477944387722029615426830336  diafora 87259853087506568021916441068948062857777481489587797164505956352 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 62988166501231476577668101654900.328125 ^2 ::== 3967509119186859153431533672116920115465431783473837308605628416 as intpart 3967509119186859153431533672116878916820924366018288665751453696  diafora 83927145427389606333033952784369887914245489624658054636571197440 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 109523903392677570629686617136217.84375 ^2 ::== 11995485414368569466038566426883043029744356259955438337631715328 as intpart 11995485414368569466038566426882859220407323166692221315666935808  diafora 75899169132207896020426920029603907610659090823984121986655715328 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 273809758481693926574216542840544.59375 ^2 ::== 74971783839803559162741040168019015449863075997090635494264406016 as intpart 74971783839803559162741040168018690931309417570363852338243829760  diafora 12922870706772906323724446288468073364455795963853687970672410624 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 27380975848169392657421654284054.4609375 ^2 ::== 749717838398035591627410401680190189359022266247214896101982208 as intpart 749717838398035591627410401680164994803342730187860149125775360  diafora 87144936708178429894838076054806594626500282462433762140697395200 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 68452439620423481643554135710136.1484375 ^2 ::== 4685736489987722447671315010501188465616442249818164718391525376 as intpart 4685736489987722447671315010501168183206838598147740771140239360  diafora 83208918056588743038794171445985594844907774707840398041072795648 from 87894654546576465486465486456486764295765213534217540308916240384
the size of xpl vector is 44 64
 of 274670795458051454645204645176521.09375 ^2 ::== 75444045877558739606420740759243896931354343957761916905904406528 as intpart 75444045877558739606420740759243846225330334828585857037776191488  diafora 12450608669017725880044745697242918070434878705631683271140048896 from 87894654546576465486465486456486764295765213534217540308916240384

-------------------------------------------------------------------------

9 26 |35 17| 296470326586956195308983320045476.3125  and main 87894654546576465486465486456486764295765213534217540308916240384
-------------------------------------------------------------------------
section_temp 0
section h inf
87894654546576465486465486456486764295765213534217540308916240384 / 35 ::== 2511275844187899013899013898756764820929780409514869872782213120
            ----->  | *2 5022551688375798027798027797513529641859560819029739745564426240
            ----->  /2 1255637922093949506949506949378382410464890204757434936391106560
                 --> 627818961046974753474753474689191205232445102378717468195553280
                 --> 313909480523487376737376737344595602616222551189358734097776640
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 2522602546240657938186933503264158969150111386495194439511703552 50225516883757980277980277975135.28125
i insert 15766265914004112113668334395401119371510268817363063794741280768 125563792209394950694950694937838.203125
i insert 0 0
i insert 157662659140041121136683343953991099076244195309686787395289088 12556379220939495069495069493783.8203125
i insert 985391619625257007104270899712538586367036152407504443766996992 31390948052348737673737673734459.55078125
CDIS Start 
section_temp 0
section h inf
2511275844187899013899013898756764820929780409514869872782213120 / 13 ::== 193175064937530693376847222981289592468272049086027960189714432
            ----->  | *2 386350129875061386753694445962579184936544098172055920379428864
            ----->  /2 96587532468765346688423611490644796234136024543013980094857216
                 --> 48293766234382673344211805745322398117068012271506990047428608
                 --> 24146883117191336672105902872661199058534006135753495023714304
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 1492664228544768010761499114357437031998669741688509451303124992 38635012987506138675369444596257.9140625
i insert 9329151428404800067259369464734271781593219407218295612450537472 96587532468765346688423611490644.78125
i insert 0 0
i insert 93291514284048000672593694647334991485523803013980833718468608 9658753246876534668842361149064.478515625
i insert 58307196427530000420371059154589677173059207451713412583275888640 241468831171913366721059028726611.9375
section_temp 0
section h inf
193175064937530693376847222981289592468272049086027960189714432 / 4 ::== 48293766234382673344211805745322398117068012271506990047428608
            ----->  | *2 96587532468765346688423611490644796234136024543013980094857216
            ----->  /2 24146883117191336672105902872661199058534006135753495023714304
                 --> 12073441558595668336052951436330599529267003067876747511857152
                 --> 6036720779297834168026475718165299764633501533938373755928576
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 9329151428404800067259369464734271781593219407218295612450537472 96587532468765346688423611490644.78125
i insert 58307196427530000420371059154589677173059207451713412583275888640 241468831171913366721059028726611.9375
i insert 0 0
i insert 583071964275300004203710591545891986349576212951143475778158592 24146883117191336672105902872661.1953125
i insert 3644199776720625026273191197161764186298284147329881272175558656 60367207792978341680264757181652.984375
CDIS End 
section_temp 0
section h inf
87894654546576465486465486456486764295765213534217540308916240384 / 17 ::== 5170273796857439146262675673910986097761171377653108209444978688
            ----->  | *2 10340547593714878292525351347821972195522342755306216418889957376
            ----->  /2 2585136898428719573131337836955493048880585688826554104722489344
                 --> 1292568449214359786565668918477746524440292844413277052361244672
                 --> 646284224607179893282834459238873262220146422206638526180622336
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 10692692453788255966363299451552206501489080891610054168714149888 103405475937148782925253513478219.78125
i insert 66829327836176599789770621572202068021037345534243306407704133632 258513689842871957313133783695549.4375
i insert 0 0
i insert 668293278361765997897706215721974163771598080464545142552920064 25851368984287195731313378369554.9453125
i insert 4176832989761037486860663848262596926224528276040468484549771264 64628422460717989328283445923887.359375
section_temp 0
section h inf
5170273796857439146262675673910986097761171377653108209444978688 / 319 ::== 16207754849082881336246632206617510750474376284769250229354496
            ----->  | *2 32415509698165762672493264413235021500948752569538500458708992
            ----->  /2 8103877424541440668123316103308755375237188142384625114677248
                 --> 4051938712270720334061658051654377687618594071192312557338624
                 --> 2025969356135360167030829025827188843809297035596156278669312
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 1050765268991878614239571098117386977105211091735098006769238016 32415509698165762672493264413235.03125
i insert 6567282931199241338997319363233587437655073459530497956530618368 81038774245414406681233161033087.578125
i insert 0 0
i insert 65672829311992413389973193632324524546129753657623016426700800 8103877424541440668123316103308.7578125
i insert 41045518319995258368733246020210125418634520838470578010444529664 202596935613536016703082902582718.9375
removals 
reporing rt 4
section_temp 0
section h inf
2511275844187899013899013898756764820929780409514869872782213120 - 16207754849082881336246632206617510750474376284769250229354496 ::== 2495068089338816132562767266550147161626501318984467634657951744
            ----->  | *2 4990136178677632265125534533100294323253002637968935269315903488
            ----->  /2 1247534044669408066281383633275073580813250659492233817328975872
                 --> 623767022334704033140691816637536790406625329746116908664487936
                 --> 311883511167352016570345908318768395203312664873058454332243968
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 2490145908174740224762522065716245650689934931001034989987954688 49901361786776322651255345331002.953125
i insert 15563411926092126404765762910727034058095120612761620046592081920 124753404466940806628138363327507.375
i insert 0 0
i insert 155634119260921264047657629107252874732524936554393703702069248 12475340446694080662813836332750.73828125
i insert 972713245380757900297860181920392884015061622338421061981306880 31188351116735201657034590831876.84375
section_temp 0
section h inf
193175064937530693376847222981289592468272049086027960189714432 - 16207754849082881336246632206617510750474376284769250229354496 ::== 176967310088447812040600590774672091621317987084300909153353728
            ----->  | *2 353934620176895624081201181549344183242635974168601818306707456
            ----->  /2 88483655044223906020300295387336045810658993542150454576676864
                 --> 44241827522111953010150147693668022905329496771075227288338432
                 --> 22120913761055976505075073846834011452664748385537613644169216
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 1252697153597633710089776404895109784745384086688499701022457856 35393462017689562408120118154934.4140625
i insert 7829357209985210688061102530594612120407594722896918392504057856 88483655044223906020300295387336.03125
i insert 0 0
i insert 78293572099852106880611025305935507799425536378305152777453568 8848365504422390602030029538733.603515625
i insert 48933482562407566800381890816216329238586617645736594069084176384 221209137610559765050750738468340.0625
section_temp 0
section h inf
48293766234382673344211805745322398117068012271506990047428608 - 16207754849082881336246632206617510750474376284769250229354496 ::== 32086011385299792007965173538704887366593635986737739818074112
            ----->  | *2 64172022770599584015930347077409774733187271973475479636148224
            ----->  /2 16043005692649896003982586769352443683296817993368869909037056
                 --> 8021502846324948001991293384676221841648408996684434954518528
                 --> 4010751423162474000995646692338110920824204498342217477259264
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 4118048506470351511145980051763145591275040216849230844716384256 64172022770599584015930347077409.78125
i insert 25737803165439696944662375323520141969609738139537611900871245824 160430056926498960039825867693524.453125
i insert 0 0
i insert 257378031654396969446623753235188597410276072854979979855790080 16043005692649896003982586769352.4453125
i insert 1608612697839981059041398457720008873100608633721100743804452864 40107514231624740009956466923381.11328125
section_temp 0
section h inf
5170273796857439146262675673910986097761171377653108209444978688 - 16207754849082881336246632206617510750474376284769250229354496 ::== 5154066042008356264926429041704368755370542344180056345496518656
            ----->  | *2 10308132084016712529852858083408737510741084688360112690993037312
            ----->  /2 2577033021004178132463214520852184377685271172090028172748259328
                 --> 1288516510502089066231607260426092188842635586045014086374129664
                 --> 644258255251044533115803630213046094421317793022507043187064832
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 10625758706153473298636238772602202104961075198288740215324409856 103081320840167125298528580834087.375
i insert 66410991913459208116476492328764024925855667118676035414989471744 257703302100417813246321452085218.4375
i insert 0 0
i insert 664109919134592081164764923287598968216760238896300614010011648 25770330210041781324632145208521.84375
i insert 4150686994591200507279780770547686907685367555217775881573367808 64425825525104453311580363021304.609375
ending sqti reporting the results 
reporting size of xl vector 44 64
entering amfidromi loop of xl vector  with first 
 of 50225516883757980277980277975135.28125 ^2 ::== 2522602546240657938186933503264187174375966464599377741158023168 as intpart 2522602546240657938186933503264158969150111386495194439511703552  diafora 85372052000335807548278552953222609129566902832410550359514152960 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 125563792209394950694950694937838.203125 ^2 ::== 15766265914004112113668334395401170077534277946539123662869495808 as intpart 15766265914004112113668334395401119371510268817363063794741280768  diafora 72128388632572353372797152061085644924254944716854476514174959616 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 12556379220939495069495069493783.8203125 ^2 ::== 157662659140041121136683343954011698398497904037461108822376448 as intpart 157662659140041121136683343953991099076244195309686787395289088  diafora 87736991887436424365328803112532778049413923337598531126087909376 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 31390948052348737673737673734459.55078125 ^2 ::== 985391619625257007104270899712573129845892371658695228929343488 as intpart 985391619625257007104270899712538586367036152407504443766996992  diafora 86909262926951208479361215556774223491009626982408583245918633984 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 38635012987506138675369444596257.9140625 ^2 ::== 1492664228544768010761499114357507703519632465477642892506824704 as intpart 1492664228544768010761499114357437031998669741688509451303124992  diafora 86401990318031697475703987342129325837659618535770954173822009344 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 96587532468765346688423611490644.78125 ^2 ::== 9329151428404800067259369464734422632014646566517073720131977216 as intpart 9329151428404800067259369464734271781593219407218295612450537472  diafora 78565503118171665419206116991752495049473194583458047689872113664 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 9658753246876534668842361149064.478515625 ^2 ::== 93291514284048000672593694647344231469977029092352680781676544 as intpart 93291514284048000672593694647334991485523803013980833718468608  diafora 87801363032292417485792892761839428195085414531502833165582467072 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 241468831171913366721059028726611.9375 ^2 ::== 58307196427530000420371059154590133527275289614297951396429824000 as intpart 58307196427530000420371059154589677173059207451713412583275888640  diafora 29587458119046465066094427301897087122706006082504127725640351744 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 96587532468765346688423611490644.78125 ^2 ::== 9329151428404800067259369464734422632014646566517073720131977216 as intpart 9329151428404800067259369464734271781593219407218295612450537472  diafora 78565503118171665419206116991752495049473194583458047689872113664 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 241468831171913366721059028726611.9375 ^2 ::== 58307196427530000420371059154590133527275289614297951396429824000 as intpart 58307196427530000420371059154589677173059207451713412583275888640  diafora 29587458119046465066094427301897087122706006082504127725640351744 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 24146883117191336672105902872661.1953125 ^2 ::== 583071964275300004203710591545901414500915410407317107508248576 as intpart 583071964275300004203710591545891986349576212951143475778158592  diafora 87311582582301165482261775864940873101697262463909772768577585152 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 60367207792978341680264757181652.984375 ^2 ::== 3644199776720625026273191197161883345454705600893621962276864000 as intpart 3644199776720625026273191197161764186298284147329881272175558656  diafora 84250454769855840460192295259325002644768129843346462030147092480 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 103405475937148782925253513478219.78125 ^2 ::== 10692692453788255966363299451552368760765910104973445746724438016 as intpart 10692692453788255966363299451552206501489080891610054168714149888  diafora 77201962092788209520102187004934561597227933327295690630311706624 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 258513689842871957313133783695549.4375 ^2 ::== 66829327836176599789770621572202291127542985702617969827468279808 as intpart 66829327836176599789770621572202068021037345534243306407704133632  diafora 21065326710399865696694864884284696274727867999974233901212106752 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 25851368984287195731313378369554.9453125 ^2 ::== 668293278361765997897706215722023047547869381560840359170277376 as intpart 668293278361765997897706215721974163771598080464545142552920064  diafora 87226361268214699488567780240764794727227041281084575591912439808 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 64628422460717989328283445923887.359375 ^2 ::== 4176832989761037486860663848262643195471436606413623114216767488 as intpart 4176832989761037486860663848262596926224528276040468484549771264  diafora 83717821556815427999604822608224162932763584459374166585905250304 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 32415509698165762672493264413235.03125 ^2 ::== 1050765268991878614239571098117389037037436462607875438911946752 as intpart 1050765268991878614239571098117386977105211091735098006769238016  diafora 86843889277584586872225915358369376209465727242781715992531697664 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 81038774245414406681233161033087.578125 ^2 ::== 6567282931199241338997319363233681243799490348506208712567816192 as intpart 6567282931199241338997319363233587437655073459530497956530618368  diafora 81327371615377224147468167093253177491935440188801743100737224704 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 8103877424541440668123316103308.7578125 ^2 ::== 65672829311992413389973193632336814814839778912992214931996672 as intpart 65672829311992413389973193632324524546129753657623016426700800  diafora 87828981717264473073075513262854439583052197809182115507822657536 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 202596935613536016703082902582718.9375 ^2 ::== 41045518319995258368733246020210505713814589307291027021406142464 as intpart 41045518319995258368733246020210125418634520838470578010444529664  diafora 46849136226581207117732240436276638877130692695746962298471710720 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 49901361786776322651255345331002.953125 ^2 ::== 2490145908174740224762522065716340724484952048206147242728357888 as intpart 2490145908174740224762522065716245650689934931001034989987954688  diafora 85404508638401725261702964390770513891385527747356249706291265536 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 124753404466940806628138363327507.375 ^2 ::== 15563411926092126404765762910727127864239537501737330802629279744 as intpart 15563411926092126404765762910727034058095120612761620046592081920  diafora 72331242620484339081699723545759730237670092921455920262324158464 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 12475340446694080662813836332750.73828125 ^2 ::== 155634119260921264047657629107271295280309503012884202670522368 as intpart 155634119260921264047657629107252874732524936554393703702069248  diafora 87739020427315544222417828827379513223473385797176826858339041280 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 31188351116735201657034590831876.84375 ^2 ::== 972713245380757900297860181920445491514971093858583175164329984 as intpart 972713245380757900297860181920392884015061622338421061981306880  diafora 86921941301195707586167626274566371570206476940407794434022834176 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 35393462017689562408120118154934.4140625 ^2 ::== 1252697153597633710089776404895139099165514364493409312284082176 as intpart 1252697153597633710089776404895109784745384086688499701022457856  diafora 86641957392978831776375710051591652926456579162242288737014775808 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 88483655044223906020300295387336.03125 ^2 ::== 7829357209985210688061102530594618458660595864043925876020084736 as intpart 7829357209985210688061102530594612120407594722896918392504057856  diafora 80065297336591254798404383925892148372405818126632417426302566400 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 8848365504422390602030029538733.603515625 ^2 ::== 78293572099852106880611025305946193697844647780838082017755136 as intpart 78293572099852106880611025305935507799425536378305152777453568  diafora 87816360974476613379584875431180833145514726282377802801056055296 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 221209137610559765050750738468340.0625 ^2 ::== 48933482562407566800381890816216354591598622210324624003148283904 as intpart 48933482562407566800381890816216329238586617645736594069084176384  diafora 38961171984168898686083595640270435057178595888480946239832064000 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 64172022770599584015930347077409.78125 ^2 ::== 4118048506470351511145980051763245735672458246971949084269608960 as intpart 4118048506470351511145980051763145591275040216849230844716384256  diafora 83776606040106113975319506404723617436839573089138907967496650752 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 160430056926498960039825867693524.453125 ^2 ::== 25737803165439696944662375323520286481778164157689382525036658688 as intpart 25737803165439696944662375323520141969609738139537611900871245824  diafora 62156851381136768541803111132966622326155475394679928408044994560 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 16043005692649896003982586769352.4453125 ^2 ::== 257378031654396969446623753235202858479528640435746817766850560 as intpart 257378031654396969446623753235188597410276072854979979855790080  diafora 87637276514922068517018862703251570786208861576973629529335529472 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 40107514231624740009956466923381.11328125 ^2 ::== 1608612697839981059041398457720017905111135259855586407814791168 as intpart 1608612697839981059041398457720008873100608633721100743804452864  diafora 86286041848736484427424087998766756690315205128725841061814992896 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 103081320840167125298528580834087.375 ^2 ::== 10625758706153473298636238772602279431647689120282231514219937792 as intpart 10625758706153473298636238772602202104961075198288740215324409856  diafora 77268895840422992187829247683884559655502937879469997100185419776 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 257703302100417813246321452085218.4375 ^2 ::== 66410991913459208116476492328764248032361307287050698834753617920 as intpart 66410991913459208116476492328764024925855667118676035414989471744  diafora 21483662633117257369988994127722739369909546415541504893926768640 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 25770330210041781324632145208521.84375 ^2 ::== 664109919134592081164764923287642464477980570017639469638746112 as intpart 664109919134592081164764923287598968216760238896300614010011648  diafora 87230544627441873405300721533199168972043928951480768997927944192 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 64425825525104453311580363021304.609375 ^2 ::== 4150686994591200507279780770547765502022581705440668677172101120 as intpart 4150686994591200507279780770547686907685367555217775881573367808  diafora 83743967551985264979185705685939072951302745180196859188881653760 from 87894654546576465486465486456486764295765213534217540308916240384
the size of xpl vector is 44 64
 of 258513689842871957313133783695549.4375 ^2 ::== 66829327836176599789770621572202291127542985702617969827468279808 as intpart 66829327836176599789770621572202068021037345534243306407704133632  diafora 21065326710399865696694864884284696274727867999974233901212106752 from 87894654546576465486465486456486764295765213534217540308916240384

-------------------------------------------------------------------------

9 |26| 35 |17| 296470326586956195308983320045476.3125  and main 87894654546576465486465486456486764295765213534217540308916240384
-------------------------------------------------------------------------
section_temp 0
section h inf
87894654546576465486465486456486764295765213534217540308916240384 / 26 ::== 3380563636406787134094826402172567808773638973307236108162039808
            ----->  | *2 6761127272813574268189652804345135617547277946614472216324079616
            ----->  /2 1690281818203393567047413201086283904386819486653618054081019904
                 --> 845140909101696783523706600543141952193409743326809027040509952
                 --> 422570454550848391761853300271570976096704871663404513520254976
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 4571284199918352032957091037719820072526414352564864610142781440 67611272728135742681896528043451.375
i insert 28570526249489700205981818985749043733907270000983452500742897664 169028181820339356704741320108628.4375
i insert 0 0
i insert 285705262494897002059818189857463401520896332447274104069816320 16902818182033935670474132010862.84375
i insert 1785657890593106262873863686609315233369204375061465781296431104 42257045455084839176185330027157.109375
CDIS Start 
section_temp 0
section h inf
3380563636406787134094826402172567808773638973307236108162039808 / 13 ::== 260043356646675933391909723244043674550735208936543639337697280
            ----->  | *2 520086713293351866783819446488087349101470417873087278675394560
            ----->  /2 130021678323337966695954861622021837275367604468271819668848640
                 --> 65010839161668983347977430811010918637683802234135909834424320
                 --> 32505419580834491673988715405505459318841901117067954917212160
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 2704901893442811853820763927644815882530148951257287988994899968 52008671329335186678381944648808.75
i insert 16905636834017574086379774547780359134186477732385356755375226880 130021678323337966695954861622021.875
i insert 0 0
i insert 169056368340175740863797745477800992658134309453580499312181248 13002167832333796669595486162202.1875
i insert 1056602302126098380398735909236256283341501948349215714245083136 32505419580834491673988715405505.46875
section_temp 0
section h inf
260043356646675933391909723244043674550735208936543639337697280 / 4 ::== 65010839161668983347977430811010918637683802234135909834424320
            ----->  | *2 130021678323337966695954861622021837275367604468271819668848640
            ----->  /2 32505419580834491673988715405505459318841901117067954917212160
                 --> 16252709790417245836994357702752729659420950558533977458606080
                 --> 8126354895208622918497178851376364829710475279266988729303040
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 16905636834017574086379774547780359134186477732385356755375226880 130021678323337966695954861622021.875
i insert 1056602302126098380398735909236256283341501948349215714245083136 32505419580834491673988715405505.46875
i insert 0 0
i insert 10566023021260983803987359092359311210590230932246896106799104 3250541958083449167398871540550.546875
i insert 6603764388288114877492099432726682345925664184013930848229261312 81263548952086229184971788513763.671875
CDIS End 
section_temp 0
section h inf
87894654546576465486465486456486764295765213534217540308916240384 / 17 ::== 5170273796857439146262675673910986097761171377653108209444978688
            ----->  | *2 10340547593714878292525351347821972195522342755306216418889957376
            ----->  /2 2585136898428719573131337836955493048880585688826554104722489344
                 --> 1292568449214359786565668918477746524440292844413277052361244672
                 --> 646284224607179893282834459238873262220146422206638526180622336
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 10692692453788255966363299451552206501489080891610054168714149888 103405475937148782925253513478219.78125
i insert 66829327836176599789770621572202068021037345534243306407704133632 258513689842871957313133783695549.4375
i insert 0 0
i insert 668293278361765997897706215721974163771598080464545142552920064 25851368984287195731313378369554.9453125
i insert 4176832989761037486860663848262596926224528276040468484549771264 64628422460717989328283445923887.359375
section_temp 0
section h inf
5170273796857439146262675673910986097761171377653108209444978688 / 319 ::== 16207754849082881336246632206617510750474376284769250229354496
            ----->  | *2 32415509698165762672493264413235021500948752569538500458708992
            ----->  /2 8103877424541440668123316103308755375237188142384625114677248
                 --> 4051938712270720334061658051654377687618594071192312557338624
                 --> 2025969356135360167030829025827188843809297035596156278669312
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 1050765268991878614239571098117386977105211091735098006769238016 32415509698165762672493264413235.03125
i insert 6567282931199241338997319363233587437655073459530497956530618368 81038774245414406681233161033087.578125
i insert 0 0
i insert 65672829311992413389973193632324524546129753657623016426700800 8103877424541440668123316103308.7578125
i insert 41045518319995258368733246020210125418634520838470578010444529664 202596935613536016703082902582718.9375
removals 
reporing rt 4
section_temp 0
section h inf
3380563636406787134094826402172567808773638973307236108162039808 - 16207754849082881336246632206617510750474376284769250229354496 ::== 3364355881557704252758579769965950466383009939834184244213579776
            ----->  | *2 6728711763115408505517159539931900932766019879668368488427159552
            ----->  /2 1682177940778852126379289884982975233191504969917092122106789888
                 --> 841088970389426063189644942491487616595752484958546061053394944
                 --> 420544485194713031594822471245743808297876242479273030526697472
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 4527556199108766930626044271252058994044122065627436204817383424 67287117631154085055171595399319
i insert 28297226244429793316412776695325202016721832898005179463637139456 168217794077885212637928988498297.5
i insert 0 0
i insert 282972262444297933164127766953228452957996835910191219052904448 16821779407788521263792898849829.75
i insert 1768576640276862082275798543457804209810210790340199020874432512 42054448519471303159482247124574.375
section_temp 0
section h inf
260043356646675933391909723244043674550735208936543639337697280 - 16207754849082881336246632206617510750474376284769250229354496 ::== 243835601797593052055663091037426173703781146934816588301336576
            ----->  | *2 487671203595186104111326182074852347407562293869633176602673152
            ----->  /2 121917800898796526027831545518713086851890573467408294150668288
                 --> 60958900449398263013915772759356543425945286733704147075334144
                 --> 30479450224699131506957886379678271712972643366852073537667072
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 2378232028159774561559538688028966779771660214724907641505579008 48767120359518610411132618207485.2109375
i insert 14863950175998591009747116800181164226486823280581891630005485568 121917800898796526027831545518713.03125
i insert 0 0
i insert 148639501759985910097471168001804323167215165066312024709922816 12191780089879652602783154551871.302734375
i insert 928996885999911938109194800011307552348223716283550266436878336 30479450224699131506957886379678.2578125
section_temp 0
section h inf
65010839161668983347977430811010918637683802234135909834424320 - 16207754849082881336246632206617510750474376284769250229354496 ::== 48803084312586102011730798604393407887209425949366659605069824
            ----->  | *2 97606168625172204023461597208786815774418851898733319210139648
            ----->  /2 24401542156293051005865399302196703943604712974683329802534912
                 --> 12200771078146525502932699651098351971802356487341664901267456
                 --> 6100385539073262751466349825549175985901178243670832450633728
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 9526964153685550740528821880970887866065542727154299396731961344 97606168625172204023461597208786.796875
i insert 59543525960534692128305136756069027789173018237812326684449308672 244015421562930510058653993021967
i insert 0 0
i insert 595435259605346921283051367560656089355042027031164900759044096 24401542156293051005865399302196.69921875
i insert 3721470372533418258019071047254222332154797093231661906795692032 61003855390732627514663498255491.75
section_temp 0
section h inf
5170273796857439146262675673910986097761171377653108209444978688 - 16207754849082881336246632206617510750474376284769250229354496 ::== 5154066042008356264926429041704368755370542344180056345496518656
            ----->  | *2 10308132084016712529852858083408737510741084688360112690993037312
            ----->  /2 2577033021004178132463214520852184377685271172090028172748259328
                 --> 1288516510502089066231607260426092188842635586045014086374129664
                 --> 644258255251044533115803630213046094421317793022507043187064832
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 10625758706153473298636238772602202104961075198288740215324409856 103081320840167125298528580834087.375
i insert 66410991913459208116476492328764024925855667118676035414989471744 257703302100417813246321452085218.4375
i insert 0 0
i insert 664109919134592081164764923287598968216760238896300614010011648 25770330210041781324632145208521.84375
i insert 4150686994591200507279780770547686907685367555217775881573367808 64425825525104453311580363021304.609375
ending sqti reporting the results 
reporting size of xl vector 44 64
entering amfidromi loop of xl vector  with first 
 of 67611272728135742681896528043451.375 ^2 ::== 4571284199918352032957091037719870778550423481740924478270996480 as intpart 4571284199918352032957091037719820072526414352564864610142781440  diafora 83323370346658113453508395418766940420286998496964471208663842816 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 169028181820339356704741320108628.4375 ^2 ::== 28570526249489700205981818985749190781376896475594026118314721280 as intpart 28570526249489700205981818985749043733907270000983452500742897664  diafora 59324128297086765280483667470737720561857943533234087808173342720 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 16902818182033935670474132010862.84375 ^2 ::== 285705262494897002059818189857491923659401467608807779891937280 as intpart 285705262494897002059818189857463401520896332447274104069816320  diafora 87608949284081568484405668266629305093336930457780158662675791872 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 42257045455084839176185330027157.109375 ^2 ::== 1785657890593106262873863686609324423836056029724626632394670080 as intpart 1785657890593106262873863686609315233369204375061465781296431104  diafora 86108996655983359223591622769877443991793608246238468540806987776 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 52008671329335186678381944648808.75 ^2 ::== 2704901893442811853820763927644893843042062987365480036242030592 as intpart 2704901893442811853820763927644815882530148951257287988994899968  diafora 85189752653133653632644722528841953483837465495877858306734161920 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 130021678323337966695954861622021.875 ^2 ::== 16905636834017574086379774547780587311294518813677626161952194560 as intpart 16905636834017574086379774547780359134186477732385356755375226880  diafora 70989017712558891400085711908706405161578735801832183553541013504 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 13002167832333796669595486162202.1875 ^2 ::== 169056368340175740863797745477805865190128936710342502265126912 as intpart 169056368340175740863797745477800992658134309453580499312181248  diafora 87725598178236289745601688711008959183242628483018404945318641664 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 32505419580834491673988715405505.46875 ^2 ::== 1056602302126098380398735909236286706955907425854851635122012160 as intpart 1056602302126098380398735909236256283341501948349215714245083136  diafora 86838052244450367106066750547250507695511061528810974220495355904 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 130021678323337966695954861622021.875 ^2 ::== 16905636834017574086379774547780587311294518813677626161952194560 as intpart 16905636834017574086379774547780359134186477732385356755375226880  diafora 70989017712558891400085711908706405161578735801832183553541013504 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 32505419580834491673988715405505.46875 ^2 ::== 1056602302126098380398735909236286706955907425854851635122012160 as intpart 1056602302126098380398735909236256283341501948349215714245083136  diafora 86838052244450367106066750547250507695511061528810974220495355904 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 3250541958083449167398871540550.546875 ^2 ::== 10566023021260983803987359092362866574383058544396406391570432 as intpart 10566023021260983803987359092359311210590230932246896106799104  diafora 87884088523555204502661499097394407814485553109664601832207417344 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 81263548952086229184971788513763.671875 ^2 ::== 6603764388288114877492099432726791363877283811742459564704923648 as intpart 6603764388288114877492099432726682345925664184013930848229261312  diafora 81290890158288350608973387023760079414538348893744806467280568320 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 103405475937148782925253513478219.78125 ^2 ::== 10692692453788255966363299451552368760765910104973445746724438016 as intpart 10692692453788255966363299451552206501489080891610054168714149888  diafora 77201962092788209520102187004934561597227933327295690630311706624 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 258513689842871957313133783695549.4375 ^2 ::== 66829327836176599789770621572202291127542985702617969827468279808 as intpart 66829327836176599789770621572202068021037345534243306407704133632  diafora 21065326710399865696694864884284696274727867999974233901212106752 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 25851368984287195731313378369554.9453125 ^2 ::== 668293278361765997897706215722023047547869381560840359170277376 as intpart 668293278361765997897706215721974163771598080464545142552920064  diafora 87226361268214699488567780240764794727227041281084575591912439808 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 64628422460717989328283445923887.359375 ^2 ::== 4176832989761037486860663848262643195471436606413623114216767488 as intpart 4176832989761037486860663848262596926224528276040468484549771264  diafora 83717821556815427999604822608224162932763584459374166585905250304 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 32415509698165762672493264413235.03125 ^2 ::== 1050765268991878614239571098117389037037436462607875438911946752 as intpart 1050765268991878614239571098117386977105211091735098006769238016  diafora 86843889277584586872225915358369376209465727242781715992531697664 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 81038774245414406681233161033087.578125 ^2 ::== 6567282931199241338997319363233681243799490348506208712567816192 as intpart 6567282931199241338997319363233587437655073459530497956530618368  diafora 81327371615377224147468167093253177491935440188801743100737224704 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 8103877424541440668123316103308.7578125 ^2 ::== 65672829311992413389973193632336814814839778912992214931996672 as intpart 65672829311992413389973193632324524546129753657623016426700800  diafora 87828981717264473073075513262854439583052197809182115507822657536 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 202596935613536016703082902582718.9375 ^2 ::== 41045518319995258368733246020210505713814589307291027021406142464 as intpart 41045518319995258368733246020210125418634520838470578010444529664  diafora 46849136226581207117732240436276638877130692695746962298471710720 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 67287117631154085055171595399319 ^2 ::== 4527556199108766930626044271252058994044122065627436204817383424 as intpart 4527556199108766930626044271252058994044122065627436204817383424  diafora 83367098347467698555839442185234702766419891012131301110692446208 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 168217794077885212637928988498297.5 ^2 ::== 28297226244429793316412776695325369346601063024286177028460249088 as intpart 28297226244429793316412776695325202016721832898005179463637139456  diafora 59597428302146672170052709761161557208440979723294754858466279424 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 16821779407788521263792898849829.75 ^2 ::== 282972262444297933164127766953253687127757629101714762801086464 as intpart 282972262444297933164127766953228452957996835910191219052904448  diafora 87611682284132167553301358689533532000241334756486975802981744640 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 42054448519471303159482247124574.375 ^2 ::== 1768576640276862082275798543457835584162566439017886064278765568 as intpart 1768576640276862082275798543457804209810210790340199020874432512  diafora 86126077906299603404189687913028961036692952915049392410569211904 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 48767120359518610411132618207485.2109375 ^2 ::== 2378232028159774561559538688028987379093913923452681962932666368 as intpart 2378232028159774561559538688028966779771660214724907641505579008  diafora 85516422518416690924905947768457801952770654118295537905871880192 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 121917800898796526027831545518713.03125 ^2 ::== 14863950175998591009747116800181171832390424649958300610224717824 as intpart 14863950175998591009747116800181164226486823280581891630005485568  diafora 73030704370577874476718369656305597533977189797176845685504344064 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 12191780089879652602783154551871.302734375 ^2 ::== 148639501759985910097471168001811711193369620215792622683291648 as intpart 148639501759985910097471168001804323167215165066312024709922816  diafora 87746015044816479576368015288484964290532855396557627132351610880 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 30479450224699131506957886379678.2578125 ^2 ::== 928996885999911938109194800011323239524401540622393788139044864 as intpart 928996885999911938109194800011307552348223716283550266436878336  diafora 86965657660576553548356291656475455951135364675290614107039858688 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 97606168625172204023461597208786.796875 ^2 ::== 9526964153685550740528821880971043787089370799370683491226222592 as intpart 9526964153685550740528821880970887866065542727154299396731961344  diafora 78367690392890914745936664575515876429699670807063240912184279040 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 244015421562930510058653993021967 ^2 ::== 59543525960534692128305136756069027789173018237812326684449308672 as intpart 59543525960534692128305136756069027789173018237812326684449308672  diafora 28351128586041773358160349700417736506592195296405213624466931712 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 24401542156293051005865399302196.69921875 ^2 ::== 595435259605346921283051367560690236693085674960667718201638912 as intpart 595435259605346921283051367560656089355042027031164900759044096  diafora 87299219286971118565182435088926107889497521450129025033981394944 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 61003855390732627514663498255491.75 ^2 ::== 3721470372533418258019071047254314236823313639863270417778081792 as intpart 3721470372533418258019071047254222332154797093231661906795692032  diafora 84173184174043047228446415409232545132736917011559382143878561792 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 103081320840167125298528580834087.375 ^2 ::== 10625758706153473298636238772602279431647689120282231514219937792 as intpart 10625758706153473298636238772602202104961075198288740215324409856  diafora 77268895840422992187829247683884559655502937879469997100185419776 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 257703302100417813246321452085218.4375 ^2 ::== 66410991913459208116476492328764248032361307287050698834753617920 as intpart 66410991913459208116476492328764024925855667118676035414989471744  diafora 21483662633117257369988994127722739369909546415541504893926768640 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 25770330210041781324632145208521.84375 ^2 ::== 664109919134592081164764923287642464477980570017639469638746112 as intpart 664109919134592081164764923287598968216760238896300614010011648  diafora 87230544627441873405300721533199168972043928951480768997927944192 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 64425825525104453311580363021304.609375 ^2 ::== 4150686994591200507279780770547765502022581705440668677172101120 as intpart 4150686994591200507279780770547686907685367555217775881573367808  diafora 83743967551985264979185705685939072951302745180196859188881653760 from 87894654546576465486465486456486764295765213534217540308916240384
the size of xpl vector is 44 64
 of 258513689842871957313133783695549.4375 ^2 ::== 66829327836176599789770621572202291127542985702617969827468279808 as intpart 66829327836176599789770621572202068021037345534243306407704133632  diafora 21065326710399865696694864884284696274727867999974233901212106752 from 87894654546576465486465486456486764295765213534217540308916240384

-------------------------------------------------------------------------

10 25 |35 15| 296470326586956195308983320045476.3125  and main 87894654546576465486465486456486764295765213534217540308916240384
-------------------------------------------------------------------------
section_temp 0
section h inf
87894654546576465486465486456486764295765213534217540308916240384 / 35 ::== 2511275844187899013899013898756764820929780409514869872782213120
            ----->  | *2 5022551688375798027798027797513529641859560819029739745564426240
            ----->  /2 1255637922093949506949506949378382410464890204757434936391106560
                 --> 627818961046974753474753474689191205232445102378717468195553280
                 --> 313909480523487376737376737344595602616222551189358734097776640
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 2522602546240657938186933503264158969150111386495194439511703552 50225516883757980277980277975135.28125
i insert 15766265914004112113668334395401119371510268817363063794741280768 125563792209394950694950694937838.203125
i insert 0 0
i insert 157662659140041121136683343953991099076244195309686787395289088 12556379220939495069495069493783.8203125
i insert 985391619625257007104270899712538586367036152407504443766996992 31390948052348737673737673734459.55078125
CDIS Start 
section_temp 0
section h inf
2511275844187899013899013898756764820929780409514869872782213120 / 13 ::== 193175064937530693376847222981289592468272049086027960189714432
            ----->  | *2 386350129875061386753694445962579184936544098172055920379428864
            ----->  /2 96587532468765346688423611490644796234136024543013980094857216
                 --> 48293766234382673344211805745322398117068012271506990047428608
                 --> 24146883117191336672105902872661199058534006135753495023714304
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 1492664228544768010761499114357437031998669741688509451303124992 38635012987506138675369444596257.9140625
i insert 9329151428404800067259369464734271781593219407218295612450537472 96587532468765346688423611490644.78125
i insert 0 0
i insert 93291514284048000672593694647334991485523803013980833718468608 9658753246876534668842361149064.478515625
i insert 58307196427530000420371059154589677173059207451713412583275888640 241468831171913366721059028726611.9375
section_temp 0
section h inf
193175064937530693376847222981289592468272049086027960189714432 / 4 ::== 48293766234382673344211805745322398117068012271506990047428608
            ----->  | *2 96587532468765346688423611490644796234136024543013980094857216
            ----->  /2 24146883117191336672105902872661199058534006135753495023714304
                 --> 12073441558595668336052951436330599529267003067876747511857152
                 --> 6036720779297834168026475718165299764633501533938373755928576
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 9329151428404800067259369464734271781593219407218295612450537472 96587532468765346688423611490644.78125
i insert 58307196427530000420371059154589677173059207451713412583275888640 241468831171913366721059028726611.9375
i insert 0 0
i insert 583071964275300004203710591545891986349576212951143475778158592 24146883117191336672105902872661.1953125
i insert 3644199776720625026273191197161764186298284147329881272175558656 60367207792978341680264757181652.984375
CDIS End 
section_temp 0
section h inf
87894654546576465486465486456486764295765213534217540308916240384 / 15 ::== 5859643636438431032431032430432451248836154288868029703158497280
            ----->  | *2 11719287272876862064862064860864902497672308577736059406316994560
            ----->  /2 2929821818219215516215516215216225624418077144434014851579248640
                 --> 1464910909109607758107758107608112812209038572217007425789624320
                 --> 732455454554803879053879053804056406104519286108503712894812160
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 13734169418421359885684415739993910026918745570194797932568379392 117192872728768620648620648608649
i insert 85838558865133499285527598374961649911555908005643347326924750848 292982181821921551621551621521622.5
i insert 0 0
i insert 858385588651334992855275983749604798700518973499057658698661888 29298218182192155162155162152162.25
i insert 5364909929070843705345474898435030229562731127162123147498487808 73245545455480387905387905380405.625
section_temp 0
section h inf
5859643636438431032431032430432451248836154288868029703158497280 / 319 ::== 18368788828960598847746183167499846507556324551042703512567808
            ----->  | *2 36737577657921197695492366334999693015112649102085407025135616
            ----->  /2 9184394414480299423873091583749923253778162275521351756283904
                 --> 4592197207240149711936545791874961626889081137760675878141952
                 --> 2296098603620074855968272895937480813444540568880337939070976
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 1349649612171790753401049099359616964505114984756948726620094464 36737577657921197695492366334999.7109375
i insert 8435310076073692208756556870997881306407624466171898309831032832 91843944144802994238730915837499.28125
i insert 0 0
i insert 84353100760736922087565568709962284484812518835610217959391232 9184394414480299423873091583749.927734375
i insert 52720687975460576304728480443736987609806294223096035339724128256 229609860362007485596827289593748.1875
removals 
reporing rt 4
section_temp 0
section h inf
2511275844187899013899013898756764820929780409514869872782213120 - 18368788828960598847746183167499846507556324551042703512567808 ::== 2492907055358938415051267715589264870435260784991884077743210496
            ----->  | *2 4985814110717876830102535431178529740870521569983768155486420992
            ----->  /2 1246453527679469207525633857794632435217630392495942038871605248
                 --> 623226763839734603762816928897316217608815196247971019435802624
                 --> 311613381919867301881408464448658108804407598123985509717901312
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 2485834234663349295804993494228746454812167344839195507795427328 49858141107178768301025354311785.296875
i insert 15536463966645933098781209338929789730791193300254993787723448320 124645352767946920752563385779463.234375
i insert 0 0
i insert 155364639666459330987812093389290414207962460735864227651125248 12464535276794692075256338577946.32421875
i insert 971028997915370818673825583683065113558566165306756920802017280 31161338191986730188140846444865.80859375
section_temp 0
section h inf
193175064937530693376847222981289592468272049086027960189714432 - 18368788828960598847746183167499846507556324551042703512567808 ::== 174806276108570094529101039813789741008955567393464157080649728
            ----->  | *2 349612552217140189058202079627579482017911134786928314161299456
            ----->  /2 87403138054285047264550519906894870504477783696732078540324864
                 --> 43701569027142523632275259953447435252238891848366039270162432
                 --> 21850784513571261816137629976723717626119445924183019635081216
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 1222289366677825753239508728848356621564543665223314077854466048 34961255221714018905820207962757.94921875
i insert 7639308541736410957746929555302490258486532465695434088082571264 87403138054285047264550519906894.875
i insert 0 0
i insert 76393085417364109577469295553017911491805065971805086562648064 8740313805428504726455051990689.4873046875
i insert 47745678385852568485918309720641438794454985388883495775727779840 218507845135712618161376299767237.1875
section_temp 0
section h inf
48293766234382673344211805745322398117068012271506990047428608 - 18368788828960598847746183167499846507556324551042703512567808 ::== 29924977405422074496465622577822551609511687720464286534860800
            ----->  | *2 59849954810844148992931245155645103219023375440928573069721600
            ----->  /2 14962488702711037248232811288911275804755843860232143267430400
                 --> 7481244351355518624116405644455637902377921930116071633715200
                 --> 3740622175677759312058202822227818951188960965058035816857600
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 3582017090860086694260396651527036160927908631735952175796322304 59849954810844148992931245155645.109375
i insert 22387606817875541839127479072043827690679202245509725984451985408 149624887027110372482328112889112.78125
i insert 0 0
i insert 223876068178755418391274790720432272996636691503594421083963392 14962488702711037248232811288911.27734375
i insert 1399225426117221364945467442002739230667450140344357874028249088 37406221756777593120582028222278.1953125
section_temp 0
section h inf
5859643636438431032431032430432451248836154288868029703158497280 - 18368788828960598847746183167499846507556324551042703512567808 ::== 5841274847609470433583286247264951298341634664345043908119494656
            ----->  | *2 11682549695218940867166572494529902596683269328690087816238989312
            ----->  /2 2920637423804735216791643123632475649170817332172521954059747328
                 --> 1460318711902367608395821561816237824585408666086260977029873664
                 --> 730159355951183804197910780908118912292704333043130488514936832
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 13648196738126016814692768912364699873849440553623027517552066560 116825496952189408671665724945299.03125
i insert 85301229613287605091829805702279075679842649712119869511095549952 292063742380473521679164312363247.59375
i insert 0 0
i insert 853012296132876050918298057022749849713557132158412396498518016 29206374238047352167916431236324.7578125
i insert 5331326850830475318239362856392333212038545979278963127967809536 73015935595118380419791078090811.8984375
ending sqti reporting the results 
reporting size of xl vector 44 64
entering amfidromi loop of xl vector  with first 
 of 50225516883757980277980277975135.28125 ^2 ::== 2522602546240657938186933503264187174375966464599377741158023168 as intpart 2522602546240657938186933503264158969150111386495194439511703552  diafora 85372052000335807548278552953222609129566902832410550359514152960 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 125563792209394950694950694937838.203125 ^2 ::== 15766265914004112113668334395401170077534277946539123662869495808 as intpart 15766265914004112113668334395401119371510268817363063794741280768  diafora 72128388632572353372797152061085644924254944716854476514174959616 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 12556379220939495069495069493783.8203125 ^2 ::== 157662659140041121136683343954011698398497904037461108822376448 as intpart 157662659140041121136683343953991099076244195309686787395289088  diafora 87736991887436424365328803112532778049413923337598531126087909376 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 31390948052348737673737673734459.55078125 ^2 ::== 985391619625257007104270899712573129845892371658695228929343488 as intpart 985391619625257007104270899712538586367036152407504443766996992  diafora 86909262926951208479361215556774223491009626982408583245918633984 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 38635012987506138675369444596257.9140625 ^2 ::== 1492664228544768010761499114357507703519632465477642892506824704 as intpart 1492664228544768010761499114357437031998669741688509451303124992  diafora 86401990318031697475703987342129325837659618535770954173822009344 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 96587532468765346688423611490644.78125 ^2 ::== 9329151428404800067259369464734422632014646566517073720131977216 as intpart 9329151428404800067259369464734271781593219407218295612450537472  diafora 78565503118171665419206116991752495049473194583458047689872113664 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 9658753246876534668842361149064.478515625 ^2 ::== 93291514284048000672593694647344231469977029092352680781676544 as intpart 93291514284048000672593694647334991485523803013980833718468608  diafora 87801363032292417485792892761839428195085414531502833165582467072 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 241468831171913366721059028726611.9375 ^2 ::== 58307196427530000420371059154590133527275289614297951396429824000 as intpart 58307196427530000420371059154589677173059207451713412583275888640  diafora 29587458119046465066094427301897087122706006082504127725640351744 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 96587532468765346688423611490644.78125 ^2 ::== 9329151428404800067259369464734422632014646566517073720131977216 as intpart 9329151428404800067259369464734271781593219407218295612450537472  diafora 78565503118171665419206116991752495049473194583458047689872113664 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 241468831171913366721059028726611.9375 ^2 ::== 58307196427530000420371059154590133527275289614297951396429824000 as intpart 58307196427530000420371059154589677173059207451713412583275888640  diafora 29587458119046465066094427301897087122706006082504127725640351744 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 24146883117191336672105902872661.1953125 ^2 ::== 583071964275300004203710591545901414500915410407317107508248576 as intpart 583071964275300004203710591545891986349576212951143475778158592  diafora 87311582582301165482261775864940873101697262463909772768577585152 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 60367207792978341680264757181652.984375 ^2 ::== 3644199776720625026273191197161883345454705600893621962276864000 as intpart 3644199776720625026273191197161764186298284147329881272175558656  diafora 84250454769855840460192295259325002644768129843346462030147092480 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 117192872728768620648620648608649 ^2 ::== 13734169418421359885684415739993910026918745570194797932568379392 as intpart 13734169418421359885684415739993910026918745570194797932568379392  diafora 74160485128155105600781070716492859339448868876940348363160682496 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 292982181821921551621551621521622.5 ^2 ::== 85838558865133499285527598374961944006495160954864494562068398080 as intpart 85838558865133499285527598374961649911555908005643347326924750848  diafora 2056095681442966200937888081525114384209305528574192981991489536 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 29298218182192155162155162152162.25 ^2 ::== 858385588651334992855275983749619376682421598137174870785523712 as intpart 858385588651334992855275983749604798700518973499057658698661888  diafora 87036268957925130493610210472737158546326744389546431527690174464 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 73245545455480387905387905380405.625 ^2 ::== 5364909929070843705345474898435121500405947559679030910129274880 as intpart 5364909929070843705345474898435030229562731127162123147498487808  diafora 82529744617505621781120011558051730897075981836481913419659739136 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 36737577657921197695492366334999.7109375 ^2 ::== 1349649612171790753401049099359669096636049370691085278539415552 as intpart 1349649612171790753401049099359616964505114984756948726620094464  diafora 86545004934404674733064437357127150341930274091505420136966258688 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 91843944144802994238730915837499.28125 ^2 ::== 8435310076073692208756556870997933280082233823577359674662453248 as intpart 8435310076073692208756556870997881306407624466171898309831032832  diafora 79459344470502773277708929585488888059959989980963247985898029056 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 9184394414480299423873091583749.927734375 ^2 ::== 84353100760736922087565568709979318539753085668192829908713472 as intpart 84353100760736922087565568709962284484812518835610217959391232  diafora 87810301445815728564377920887776799832505931873112646268498214912 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 229609860362007485596827289593748.1875 ^2 ::== 52720687975460576304728480443737078880649510655612943102354915328 as intpart 52720687975460576304728480443736987609806294223096035339724128256  diafora 35173966571115889181737006012749776685958919311121504969192112128 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 49858141107178768301025354311785.296875 ^2 ::== 2485834234663349295804993494228775927688622651172780306144952320 as intpart 2485834234663349295804993494228746454812167344839195507795427328  diafora 85408820311913116190660492962258022277730146988181250039582031872 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 124645352767946920752563385779463.234375 ^2 ::== 15536463966645933098781209338929848042718803798807462636070895616 as intpart 15536463966645933098781209338929789730791193300254993787723448320  diafora 72358190579930532387684277117556974564974020233962546521192792064 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 12464535276794692075256338577946.32421875 ^2 ::== 155364639666459330987812093389298495480538915698298769134059520 as intpart 155364639666459330987812093389290414207962460735864227651125248  diafora 87739289906910006155477674363097470454939222331549075160489263104 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 31161338191986730188140846444865.80859375 ^2 ::== 971028997915370818673825583683115502669925237425466414754430976 as intpart 971028997915370818673825583683065113558566165306756920802017280  diafora 86923625548661094667791660872803703143614773082127663065311739904 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 34961255221714018905820207962757.94921875 ^2 ::== 1222289366677825753239508728848423014764730618738217467684847616 as intpart 1222289366677825753239508728848356621564543665223314077854466048  diafora 86672365179898639733225977727638409258763920154280978101940781056 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 87403138054285047264550519906894.875 ^2 ::== 7639308541736410957746929555302643644209160081453015189170421760 as intpart 7639308541736410957746929555302490258486532465695434088082571264  diafora 80255346004840054528718556901184274037278681068522106220833669120 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 8740313805428504726455051990689.4873046875 ^2 ::== 76393085417364109577469295553026438422795663671138591730302976 as intpart 76393085417364109577469295553017911491805065971805086562648064  diafora 87818261461159101376888017160933747810380333725003811906144698368 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 218507845135712618161376299767237.1875 ^2 ::== 47745678385852568485918309720641524994695800908482797551545745408 as intpart 47745678385852568485918309720641438794454985388883495775727779840  diafora 40148976160723897000547176735845325501310228145334044533188460544 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 59849954810844148992931245155645.109375 ^2 ::== 3582017090860086694260396651527049471259211028144667891179978752 as intpart 3582017090860086694260396651527036160927908631735952175796322304  diafora 84312637455716378792205089804959733205439705815399194119932739584 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 149624887027110372482328112889112.78125 ^2 ::== 22387606817875541839127479072044060938389644239719601377841774592 as intpart 22387606817875541839127479072043827690679202245509725984451985408  diafora 65507047728700923647338007384442939140387211745166617317870665728 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 14962488702711037248232811288911.27734375 ^2 ::== 223876068178755418391274790720440591953700689259041743198748672 as intpart 223876068178755418391274790720432272996636691503594421083963392  diafora 87670778478397710068074211665766329289396970100594298910565990400 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 37406221756777593120582028222278.1953125 ^2 ::== 1399225426117221364945467442002753808649352764982475086115110912 as intpart 1399225426117221364945467442002739230667450140344357874028249088  diafora 86495429120459244121520019014484020152951687509484251635163070464 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 116825496952189408671665724945299.03125 ^2 ::== 13648196738126016814692768912364707479753041922999436497771298816 as intpart 13648196738126016814692768912364699873849440553623027517552066560  diafora 74246457808450448671772717544122061886614572524135709797957763072 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 292063742380473521679164312363247.59375 ^2 ::== 85301229613287605091829805702279430622010713616352288587993055232 as intpart 85301229613287605091829805702279075679842649712119869511095549952  diafora 2593424933288860394635680754207688615922563822097670797820690432 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 29206374238047352167916431236324.7578125 ^2 ::== 853012296132876050918298057022794217484565120187464781110706176 as intpart 853012296132876050918298057022749849713557132158412396498518016  diafora 87041642250443589435547188399464010960012505774428273796483907584 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 73015935595118380419791078090811.8984375 ^2 ::== 5331326850830475318239362856392464413875669601022018036749565952 as intpart 5331326850830475318239362856392333212038545979278963127967809536  diafora 82563327695745990168226123600094434252853168125512080922706444288 from 87894654546576465486465486456486764295765213534217540308916240384
the size of xpl vector is 44 64
 of 292982181821921551621551621521622.5 ^2 ::== 85838558865133499285527598374961944006495160954864494562068398080 as intpart 85838558865133499285527598374961649911555908005643347326924750848  diafora 2056095681442966200937888081525114384209305528574192981991489536 from 87894654546576465486465486456486764295765213534217540308916240384

-------------------------------------------------------------------------

10 |25| 35 |15| 296470326586956195308983320045476.3125  and main 87894654546576465486465486456486764295765213534217540308916240384
-------------------------------------------------------------------------
section_temp 0
section h inf
87894654546576465486465486456486764295765213534217540308916240384 / 25 ::== 3515786181863058619458619458259470749301692573320817821895098368
            ----->  | *2 7031572363726117238917238916518941498603385146641635643790196736
            ----->  /2 1757893090931529309729309729129735374650846286660408910947549184
                 --> 878946545465764654864654864564867687325423143330204455473774592
                 --> 439473272732882327432327432282433843662711571665102227736887296
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 4944300990631689558846389666397751680946266335788933221179195392 70315723637261172389172389165189.421875
i insert 30901881191448059742789935414986126427736146721969093293346127872 175789309093152930972930972912973.5625
i insert 0 0
i insert 309018811914480597427899354149850685733102562645335442945212416 17578930909315293097293097291297.35546875
i insert 1931367574465503733924370963436610717848005176108542138528038912 43947327273288232743232743228243.390625
CDIS Start 
section_temp 0
section h inf
3515786181863058619458619458259470749301692573320817821895098368 / 13 ::== 270445090912542970727586112173805445301213371573306662974390272
            ----->  | *2 540890181825085941455172224347610890602426743146613325948780544
            ----->  /2 135222545456271485363793056086902722650606685786653331487195136
                 --> 67611272728135742681896528043451361325303342893326665743597568
                 --> 33805636364067871340948264021725680662651671446663332871798784
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 2925621887947745301092538264140706586624699099775749018951352320 54089018182508594145517222434761.1015625
i insert 18285136799673408131828364150879280290105657410259458440571125760 135222545456271485363793056086902.75
i insert 0 0
i insert 182851367996734081318283641508787387656148724135120065676705792 13522254545627148536379305608690.275390625
i insert 1142821049979588008239272759429921266934372511533401302812852224 33805636364067871340948264021725.6875
section_temp 0
section h inf
270445090912542970727586112173805445301213371573306662974390272 / 4 ::== 67611272728135742681896528043451361325303342893326665743597568
            ----->  | *2 135222545456271485363793056086902722650606685786653331487195136
            ----->  /2 33805636364067871340948264021725680662651671446663332871798784
                 --> 16902818182033935670474132010862840331325835723331666435899392
                 --> 8451409091016967835237066005431420165662917861665833217949696
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 18285136799673408131828364150879280290105657410259458440571125760 135222545456271485363793056086902.75
i insert 1142821049979588008239272759429921266934372511533401302812852224 33805636364067871340948264021725.6875
i insert 0 0
i insert 11428210499795880082392727594295830914262006884914254596538368 3380563636406787134094826402172.56884765625
i insert 7142631562372425051495454746437260933476817500245863125185724416 84514090910169678352370660054314.21875
CDIS End 
section_temp 0
section h inf
87894654546576465486465486456486764295765213534217540308916240384 / 15 ::== 5859643636438431032431032430432451248836154288868029703158497280
            ----->  | *2 11719287272876862064862064860864902497672308577736059406316994560
            ----->  /2 2929821818219215516215516215216225624418077144434014851579248640
                 --> 1464910909109607758107758107608112812209038572217007425789624320
                 --> 732455454554803879053879053804056406104519286108503712894812160
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 13734169418421359885684415739993910026918745570194797932568379392 117192872728768620648620648608649
i insert 85838558865133499285527598374961649911555908005643347326924750848 292982181821921551621551621521622.5
i insert 0 0
i insert 858385588651334992855275983749604798700518973499057658698661888 29298218182192155162155162152162.25
i insert 5364909929070843705345474898435030229562731127162123147498487808 73245545455480387905387905380405.625
section_temp 0
section h inf
5859643636438431032431032430432451248836154288868029703158497280 / 319 ::== 18368788828960598847746183167499846507556324551042703512567808
            ----->  | *2 36737577657921197695492366334999693015112649102085407025135616
            ----->  /2 9184394414480299423873091583749923253778162275521351756283904
                 --> 4592197207240149711936545791874961626889081137760675878141952
                 --> 2296098603620074855968272895937480813444540568880337939070976
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 1349649612171790753401049099359616964505114984756948726620094464 36737577657921197695492366334999.7109375
i insert 8435310076073692208756556870997881306407624466171898309831032832 91843944144802994238730915837499.28125
i insert 0 0
i insert 84353100760736922087565568709962284484812518835610217959391232 9184394414480299423873091583749.927734375
i insert 52720687975460576304728480443736987609806294223096035339724128256 229609860362007485596827289593748.1875
removals 
reporing rt 4
section_temp 0
section h inf
3515786181863058619458619458259470749301692573320817821895098368 - 18368788828960598847746183167499846507556324551042703512567808 ::== 3497417393034098020610873275091970798807172948797832026856095744
            ----->  | *2 6994834786068196041221746550183941597614345897595664053712191488
            ----->  /2 1748708696517049010305436637545985399403586474398916013428047872
                 --> 874354348258524505152718318772992699701793237199458006714023936
                 --> 437177174129262252576359159386496349850896618599729003357011968
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 4892771368438970587881537611784199431311203921777912320626786304 69948347860681960412217465501839.4375
i insert 30579821052743566174259610073651421381477856006769358548959756288 174870869651704901030543663754598.59375
i insert 0 0
i insert 305798210527435661742596100736486239935158023615376056991612928 17487086965170490103054366375459.859375
i insert 1911238815796472885891225629603170102396658126508733273049399296 43717717412926225257635915938649.6484375
section_temp 0
section h inf
270445090912542970727586112173805445301213371573306662974390272 - 18368788828960598847746183167499846507556324551042703512567808 ::== 252076302083582371879839929006305613648937518446827258251313152
            ----->  | *2 504152604167164743759679858012611227297875036893654516502626304
            ----->  /2 126038151041791185939919964503152806824468759223413629125656576
                 --> 63019075520895592969959982251576403412234379611706814562828288
                 --> 31509537760447796484979991125788201706117189805853407281414144
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 2541698482885338977548147528030546060230936525287180403631718400 50415260416716474375967985801261.1328125
i insert 15885615518033368609675922050190787695946580745391479723256709120 126038151041791185939919964503152.828125
i insert 0 0
i insert 158856155180333686096759220501902830125513648815610088482930688 12603815104179118593991996450315.283203125
i insert 992850969877085538104745128136924230996661296586967482703544320 31509537760447796484979991125788.20703125
section_temp 0
section h inf
67611272728135742681896528043451361325303342893326665743597568 - 18368788828960598847746183167499846507556324551042703512567808 ::== 49242483899175143834150344875951514817747018342283962231029760
            ----->  | *2 98484967798350287668300689751903029635494036684567924462059520
            ----->  /2 24621241949587571917075172437975757408873509171141981115514880
                 --> 12310620974793785958537586218987878704436754585570990557757440
                 --> 6155310487396892979268793109493939352218377292785495278878720
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 9699288882242093108269382572645275176616201206931334537620226048 98484967798350287668300689751903.0625
i insert 60620555514013081926683641079032716006818561840383191145309536256 246212419495875719170751724379757.65625
i insert 0 0
i insert 606205555140130819266836410790292698986618413987552223576457216 24621241949587571917075172437975.765625
i insert 3788784719625817620417727567439514326811754637518313525704916992 61553104873968929792687931094939.4140625
section_temp 0
section h inf
5859643636438431032431032430432451248836154288868029703158497280 - 18368788828960598847746183167499846507556324551042703512567808 ::== 5841274847609470433583286247264951298341634664345043908119494656
            ----->  | *2 11682549695218940867166572494529902596683269328690087816238989312
            ----->  /2 2920637423804735216791643123632475649170817332172521954059747328
                 --> 1460318711902367608395821561816237824585408666086260977029873664
                 --> 730159355951183804197910780908118912292704333043130488514936832
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 13648196738126016814692768912364699873849440553623027517552066560 116825496952189408671665724945299.03125
i insert 85301229613287605091829805702279075679842649712119869511095549952 292063742380473521679164312363247.59375
i insert 0 0
i insert 853012296132876050918298057022749849713557132158412396498518016 29206374238047352167916431236324.7578125
i insert 5331326850830475318239362856392333212038545979278963127967809536 73015935595118380419791078090811.8984375
ending sqti reporting the results 
reporting size of xl vector 44 64
entering amfidromi loop of xl vector  with first 
 of 70315723637261172389172389165189.421875 ^2 ::== 4944300990631689558846389666397811260524477062570803566229848064 as intpart 4944300990631689558846389666397751680946266335788933221179195392  diafora 82950353555944775927619096790089008811867146513740402597627428864 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 175789309093152930972930972912973.5625 ^2 ::== 30901881191448059742789935414986324181229782325755726779046166528 as intpart 30901881191448059742789935414986126427736146721969093293346127872  diafora 56992773355128405743675551041500642938631467725166053002382934016 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 17578930909315293097293097291297.35546875 ^2 ::== 309018811914480597427899354149863203782779816410675222889365504 as intpart 309018811914480597427899354149850685733102562645335442945212416  diafora 87585635734661984889037587102336910282449285372470025937125113856 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 43947327273288232743232743228243.390625 ^2 ::== 1931367574465503733924370963436645261326861395359732923690385408 as intpart 1931367574465503733924370963436610717848005176108542138528038912  diafora 85963286972110961752541115493050153894829858415166348544564002816 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 54089018182508594145517222434761.1015625 ^2 ::== 2925621887947745301092538264140717361654801039725661740928598016 as intpart 2925621887947745301092538264140706586624699099775749018951352320  diafora 84969032658628720185372948192346061195179665062072645405898702848 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 135222545456271485363793056086902.75 ^2 ::== 18285136799673408131828364150879483114201693926963697913083985920 as intpart 18285136799673408131828364150879280290105657410259458440571125760  diafora 69609517746903057354637122305607478935057155211040475881532293120 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 13522254545627148536379305608690.275390625 ^2 ::== 182851367996734081318283641508794835103425064982853858808037376 as intpart 182851367996734081318283641508787387656148724135120065676705792  diafora 87711803178579731405147202814977979859358118466428995602751684608 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 33805636364067871340948264021725.6875 ^2 ::== 1142821049979588008239272759429967694637605870435231119567749120 as intpart 1142821049979588008239272759429921266934372511533401302812852224  diafora 86751833496596877478226213697056846356413666621786317934949302272 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 135222545456271485363793056086902.75 ^2 ::== 18285136799673408131828364150879483114201693926963697913083985920 as intpart 18285136799673408131828364150879280290105657410259458440571125760  diafora 69609517746903057354637122305607478935057155211040475881532293120 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 33805636364067871340948264021725.6875 ^2 ::== 1142821049979588008239272759429967694637605870435231119567749120 as intpart 1142821049979588008239272759429921266934372511533401302812852224  diafora 86751833496596877478226213697056846356413666621786317934949302272 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 3380563636406787134094826402172.56884765625 ^2 ::== 11428210499795880082392727594299677193964066561428366175502336 as intpart 11428210499795880082392727594295830914262006884914254596538368  diafora 87883226336076669606383093728892471606742771233627763748296982528 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 84514090910169678352370660054314.21875 ^2 ::== 7142631562372425051495454746437297695344224118898506529578680320 as intpart 7142631562372425051495454746437260933476817500245863125185724416  diafora 80752022984204040434970031710049503362288396033971677183730515968 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 117192872728768620648620648608649 ^2 ::== 13734169418421359885684415739993910026918745570194797932568379392 as intpart 13734169418421359885684415739993910026918745570194797932568379392  diafora 74160485128155105600781070716492859339448868876940348363160682496 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 292982181821921551621551621521622.5 ^2 ::== 85838558865133499285527598374961944006495160954864494562068398080 as intpart 85838558865133499285527598374961649911555908005643347326924750848  diafora 2056095681442966200937888081525114384209305528574192981991489536 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 29298218182192155162155162152162.25 ^2 ::== 858385588651334992855275983749619376682421598137174870785523712 as intpart 858385588651334992855275983749604798700518973499057658698661888  diafora 87036268957925130493610210472737158546326744389546431527690174464 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 73245545455480387905387905380405.625 ^2 ::== 5364909929070843705345474898435121500405947559679030910129274880 as intpart 5364909929070843705345474898435030229562731127162123147498487808  diafora 82529744617505621781120011558051730897075981836481913419659739136 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 36737577657921197695492366334999.7109375 ^2 ::== 1349649612171790753401049099359669096636049370691085278539415552 as intpart 1349649612171790753401049099359616964505114984756948726620094464  diafora 86545004934404674733064437357127150341930274091505420136966258688 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 91843944144802994238730915837499.28125 ^2 ::== 8435310076073692208756556870997933280082233823577359674662453248 as intpart 8435310076073692208756556870997881306407624466171898309831032832  diafora 79459344470502773277708929585488888059959989980963247985898029056 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 9184394414480299423873091583749.927734375 ^2 ::== 84353100760736922087565568709979318539753085668192829908713472 as intpart 84353100760736922087565568709962284484812518835610217959391232  diafora 87810301445815728564377920887776799832505931873112646268498214912 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 229609860362007485596827289593748.1875 ^2 ::== 52720687975460576304728480443737078880649510655612943102354915328 as intpart 52720687975460576304728480443736987609806294223096035339724128256  diafora 35173966571115889181737006012749776685958919311121504969192112128 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 69948347860681960412217465501839.4375 ^2 ::== 4892771368438970587881537611784260912365314990903884910732247040 as intpart 4892771368438970587881537611784199431311203921777912320626786304  diafora 83001883178137494898583948844702564864454009612439627988289454080 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 174870869651704901030543663754598.59375 ^2 ::== 30579821052743566174259610073651629276176293436391204008285437952 as intpart 30579821052743566174259610073651421381477856006769358548959756288  diafora 57314833493832899312205876382835342914287357527448181759956484096 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 17487086965170490103054366375459.859375 ^2 ::== 305798210527435661742596100736516307022832186931492806920765440 as intpart 305798210527435661742596100736486239935158023615376056991612928  diafora 87588856336049029824722890355750274015193767283120946981183160320 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 43717717412926225257635915938649.6484375 ^2 ::== 1911238815796472885891225629603226829761018339774450250517839872 as intpart 1911238815796472885891225629603170102396658126508733273049399296  diafora 85983415730779992600574260826883593559543255293594106287515238400 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 50415260416716474375967985801261.1328125 ^2 ::== 2541698482885338977548147528030559687474888978753246493191176192 as intpart 2541698482885338977548147528030546060230936525287180403631718400  diafora 85352956063691126508917338928456222038486077693618564395394138112 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 126038151041791185939919964503152.828125 ^2 ::== 15885615518033368609675922050190995590645018175013325182582390784 as intpart 15885615518033368609675922050190787695946580745391479723256709120  diafora 72009039028543096876789564406295971529216231875908454598846709760 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 12603815104179118593991996450315.283203125 ^2 ::== 158856155180333686096759220501909980467180561172077905824448512 as intpart 158856155180333686096759220501902830125513648815610088482930688  diafora 87735798391396131800368727235984861742938268685327111797837135872 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 31509537760447796484979991125788.20703125 ^2 ::== 992850969877085538104745128136937224415313635938332823911399424 as intpart 992850969877085538104745128136924230996661296586967482703544320  diafora 86901803576699379948360741328349835311078801381770317213575675904 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 98484967798350287668300689751903.0625 ^2 ::== 9699288882242093108269382572645286585471603260995948007949074432 as intpart 9699288882242093108269382572645275176616201206931334537620226048  diafora 78195365664334372378196103883841490386799612555515607267999219712 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 246212419495875719170751724379757.65625 ^2 ::== 60620555514013081926683641079033040525372220267109974301330112512 as intpart 60620555514013081926683641079032716006818561840383191145309536256  diafora 27274099032563383559781845377454048288946651693834349163606704128 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 24621241949587571917075172437975.765625 ^2 ::== 606205555140130819266836410790330411591975203812246750496817152 as intpart 606205555140130819266836410790292698986618413987552223576457216  diafora 87288448991436334667198650045696470804496969977586612149900279808 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 61553104873968929792687931094939.4140625 ^2 ::== 3788784719625817620417727567439565032835763766694373393833132032 as intpart 3788784719625817620417727567439514326811754637518313525704916992  diafora 84105869826950647866047758889047249968953458896699226783211323392 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 116825496952189408671665724945299.03125 ^2 ::== 13648196738126016814692768912364707479753041922999436497771298816 as intpart 13648196738126016814692768912364699873849440553623027517552066560  diafora 74246457808450448671772717544122061886614572524135709797957763072 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 292063742380473521679164312363247.59375 ^2 ::== 85301229613287605091829805702279430622010713616352288587993055232 as intpart 85301229613287605091829805702279075679842649712119869511095549952  diafora 2593424933288860394635680754207688615922563822097670797820690432 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 29206374238047352167916431236324.7578125 ^2 ::== 853012296132876050918298057022794217484565120187464781110706176 as intpart 853012296132876050918298057022749849713557132158412396498518016  diafora 87041642250443589435547188399464010960012505774428273796483907584 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 73015935595118380419791078090811.8984375 ^2 ::== 5331326850830475318239362856392464413875669601022018036749565952 as intpart 5331326850830475318239362856392333212038545979278963127967809536  diafora 82563327695745990168226123600094434252853168125512080922706444288 from 87894654546576465486465486456486764295765213534217540308916240384
the size of xpl vector is 44 64
 of 292982181821921551621551621521622.5 ^2 ::== 85838558865133499285527598374961944006495160954864494562068398080 as intpart 85838558865133499285527598374961649911555908005643347326924750848  diafora 2056095681442966200937888081525114384209305528574192981991489536 from 87894654546576465486465486456486764295765213534217540308916240384

-------------------------------------------------------------------------

10 26 |36 16| 296470326586956195308983320045476.3125  and main 87894654546576465486465486456486764295765213534217540308916240384
-------------------------------------------------------------------------
section_temp 0
section h inf
87894654546576465486465486456486764295765213534217540308916240384 / 36 ::== 2441518181849346263512930179346854634196289277518787313953406976
            ----->  | *2 4883036363698692527025860358693709268392578555037574627906813952
            ----->  /2 1220759090924673131756465089673427317098144638759393656976703488
                 --> 610379545462336565878232544836713658549072319379696828488351744
                 --> 305189772731168282939116272418356829274536159689848414244175872
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 2384404412920374980153544399304490240108480771594831828617265152 48830363636986925270258603586937.109375
i insert 14902527580752343625959652495652942385448545426709492838894141440 122075909092467313175646508967342.765625
i insert 0 0
i insert 149025275807523436259596524956524539438266449870682286404403200 12207590909246731317564650896734.27734375
i insert 931407973797021476622478280978278317019803583135032194466054144 30518977273116828293911627241835.69140625
CDIS Start 
section_temp 0
section h inf
2441518181849346263512930179346854634196289277518787313953406976 / 13 ::== 187809090911488174116379244565142662645326819150207916582109184
            ----->  | *2 375618181822976348232758489130285325290653638300415833164218368
            ----->  /2 93904545455744087058189622282571331322663409575103958291054592
                 --> 46952272727872043529094811141285665661331704787551979145527296
                 --> 23476136363936021764547405570642832830665852393775989572763648
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 1410890185159985195357126863493746507104823055276586887133790208 37561818182297634823275848913028.5234375
i insert 8818063657249907470982042896836103638220709187619608727608360960 93904545455744087058189622282571.3125
i insert 0 0
i insert 88180636572499074709820428968359156694051440954786680445861888 9390454545574408705818962228257.130859375
i insert 55112897857811921693637768105225879718939274188603028444238839808 234761363639360217645474055706428.28125
section_temp 0
section h inf
187809090911488174116379244565142662645326819150207916582109184 / 4 ::== 46952272727872043529094811141285665661331704787551979145527296
            ----->  | *2 93904545455744087058189622282571331322663409575103958291054592
            ----->  /2 23476136363936021764547405570642832830665852393775989572763648
                 --> 11738068181968010882273702785321416415332926196887994786381824
                 --> 5869034090984005441136851392660708207666463098443997393190912
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 8818063657249907470982042896836103638220709187619608727608360960 93904545455744087058189622282571.3125
i insert 55112897857811921693637768105225879718939274188603028444238839808 234761363639360217645474055706428.28125
i insert 0 0
i insert 551128978578119216936377681052221300084637990860334011961573376 23476136363936021764547405570642.828125
i insert 3444556116113245105852360506576617482433704636787689277764927488 58690340909840054411368513926607.0703125
CDIS End 
section_temp 0
section h inf
87894654546576465486465486456486764295765213534217540308916240384 / 16 ::== 5493415909161029092904092903530422768485325845888596269307265024
            ----->  | *2 10986831818322058185808185807060845536970651691777192538614530048
            ----->  /2 2746707954580514546452046451765211384242662922944298134653632512
                 --> 1373353977290257273226023225882605692121331461472149067326816256
                 --> 686676988645128636613011612941302846060665730736074533663408128
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 12071047340409398337027318521478927826749389806486681733786763264 109868318183220581858081858070608.4375
i insert 75444045877558739606420740759243846225330334828585857037776191488 274670795458051454645204645176521.09375
i insert 0 0
i insert 754440458775587396064207407592432989171836862905417608361672704 27467079545805145464520464517652.109375
i insert 4715252867347421225401296297452706162516939764592775653874466816 68667698864512863661301161294130.2734375
section_temp 0
section h inf
5493415909161029092904092903530422768485325845888596269307265024 / 319 ::== 17220739527150561419762046719531107029289083730637740717375488
            ----->  | *2 34441479054301122839524093439062214058578167461275481434750976
            ----->  /2 8610369763575280709881023359765553514644541865318870358687744
                 --> 4305184881787640354940511679882776757322270932659435179343872
                 --> 2152592440893820177470255839941388378661135466329717589671936
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 1186215479447862966856390809984068422843858135742625503529402368 34441479054301122839524093439062.21875
i insert 7413846746549143542852442562400427840844519634052253380918640640 86103697635752807098810233597655.546875
i insert 0 0
i insert 74138467465491435428524425623995670268588021520242995258982400 8610369763575280709881023359765.5546875
i insert 46336542165932147142827766015002890456618236682996889192813821952 215259244089382017747025583994138.875
removals 
reporing rt 4
section_temp 0
section h inf
2441518181849346263512930179346854634196289277518787313953406976 - 17220739527150561419762046719531107029289083730637740717375488 ::== 2424297442322195702093168132627323628678083415189332114964217856
            ----->  | *2 4848594884644391404186336265254647257356166830378664229928435712
            ----->  /2 1212148721161097851046584066313661814339041707594666057482108928
                 --> 606074360580548925523292033156830907169520853797333028741054464
                 --> 303037180290274462761646016578415453584760426898666514370527232
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 2350887235539975918767813267862347850629951931803674970138083328 48485948846443914041863362652546.46875
i insert 14693045222124849492298832924139917851493255965139743898098204672 121214872116109785104658406631366.171875
i insert 0 0
i insert 146930452221248494922988329241384618755507313294077873409228800 12121487211610978510465840663136.6171875
i insert 918315326382803093268677057758714442103923020315598072754208768 30303718029027446276164601657841.54296875
section_temp 0
section h inf
187809090911488174116379244565142662645326819150207916582109184 - 17220739527150561419762046719531107029289083730637740717375488 ::== 170588351384337612696617197845611558091917813990330725662982144
            ----->  | *2 341176702768675225393234395691223116183835627980661451325964288
            ----->  /2 85294175692168806348308598922805779045958906995165362831491072
                 --> 42647087846084403174154299461402889522979453497582681415745536
                 --> 21323543923042201587077149730701444761489726748791340707872768
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 1164015425121049612084023306031266001251975817369920334741897216 34117670276867522539323439569122.3125
i insert 7275096407006560075525145662695412983193823944148027653400559616 85294175692168806348308598922805.78125
i insert 0 0
i insert 72750964070065600755251456626945598147257890886286515753713664 8529417569216880634830859892280.578125
i insert 45469352543791000472032160391846967188650064165027373804586795008 213235439230422015870771497307014.46875
section_temp 0
section h inf
46952272727872043529094811141285665661331704787551979145527296 - 17220739527150561419762046719531107029289083730637740717375488 ::== 29731533200721482109332764421754556156162542486153688629903360
            ----->  | *2 59463066401442964218665528843509112312325084972307377259806720
            ----->  /2 14865766600360741054666382210877278078081271243076844314951680
                 --> 7432883300180370527333191105438639039040635621538422157475840
                 --> 3716441650090185263666595552719319519520317810769211078737920
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 3535856265862415114296747067761731075254891552715634755583868928 59463066401442964218665528843509.1015625
i insert 22099101661640094464354669173510667419183694874001887992190337024 148657666003607410546663822108772.75
i insert 0 0
i insert 220991016616400944643546691735100744756154381196993379092660224 14865766600360741054666382210877.275390625
i insert 1381193853852505904022166823344416713698980929625117999511896064 37164416500901852636665955527193.1875
section_temp 0
section h inf
5493415909161029092904092903530422768485325845888596269307265024 - 17220739527150561419762046719531107029289083730637740717375488 ::== 5476195169633878531484330856810891446054469926501790696142274560
            ----->  | *2 10952390339267757062968661713621782892108939853003581392284549120
            ----->  /2 2738097584816939265742165428405445723027234963250895348071137280
                 --> 1369048792408469632871082714202722861513617481625447674035568640
                 --> 684524396204234816435541357101361430756808740812723837017784320
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 11995485414368569466038566426882859220407323166692221315666935808 109523903392677570629686617136217.84375
i insert 74971783839803559162741040168018690931309417570363852338243829760 273809758481693926574216542840544.59375
i insert 0 0
i insert 749717838398035591627410401680164994803342730187860149125775360 27380975848169392657421654284054.4609375
i insert 4685736489987722447671315010501168183206838598147740771140239360 68452439620423481643554135710136.1484375
ending sqti reporting the results 
reporting size of xl vector 44 64
entering amfidromi loop of xl vector  with first 
 of 48830363636986925270258603586937.109375 ^2 ::== 2384404412920374980153544399304501015138582711544744550594510848 as intpart 2384404412920374980153544399304490240108480771594831828617265152  diafora 85510250133656090506311942057182271203442882249106555112716763136 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 122075909092467313175646508967342.765625 ^2 ::== 14902527580752343625959652495653129997737379204660914350968537088 as intpart 14902527580752343625959652495652942385448545426709492838894141440  diafora 72992126965824121860505833960833819375015467651049244476615688192 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 12207590909246731317564650896734.27734375 ^2 ::== 149025275807523436259596524956531313446161419471546534412156928 as intpart 149025275807523436259596524956524539438266449870682286404403200  diafora 87745629270768942050205889931530242351049269426503914211076210688 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 30518977273116828293911627241835.69140625 ^2 ::== 931407973797021476622478280978320624858586200291307146935533568 as intpart 931407973797021476622478280978278317019803583135032194466054144  diafora 86963246572779444009843008175508484394182159665795756243571179520 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 37561818182297634823275848913028.5234375 ^2 ::== 1410890185159985195357126863493785962729755158916708472021057536 as intpart 1410890185159985195357126863493746507104823055276586887133790208  diafora 86483764361416480291108359592993020165505265906871081228100960256 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 93904545455744087058189622282571.3125 ^2 ::== 8818063657249907470982042896836163217798919914401479072659013632 as intpart 8818063657249907470982042896836103638220709187619608727608360960  diafora 79076590889326558015483443559650655586942103433680325594495057920 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 9390454545574408705818962228257.130859375 ^2 ::== 88180636572499074709820428968361622670609697432294279501316096 as intpart 88180636572499074709820428968359156694051440954786680445861888  diafora 87806473910003966411755666027518406555274567035737788113068490752 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 234761363639360217645474055706428.28125 ^2 ::== 55112897857811921693637768105226011554601697924460784101372198912 as intpart 55112897857811921693637768105225879718939274188603028444238839808  diafora 32781756688764543792827718351260884576825939345614511864677400576 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 93904545455744087058189622282571.3125 ^2 ::== 8818063657249907470982042896836163217798919914401479072659013632 as intpart 8818063657249907470982042896836103638220709187619608727608360960  diafora 79076590889326558015483443559650655586942103433680325594495057920 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 234761363639360217645474055706428.28125 ^2 ::== 55112897857811921693637768105226011554601697924460784101372198912 as intpart 55112897857811921693637768105225879718939274188603028444238839808  diafora 32781756688764543792827718351260884576825939345614511864677400576 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 23476136363936021764547405570642.828125 ^2 ::== 551128978578119216936377681052260201112432494650092442041188352 as intpart 551128978578119216936377681052221300084637990860334011961573376  diafora 87343525567998346269529108775434543629505875657471907045306269696 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 58690340909840054411368513926607.0703125 ^2 ::== 3444556116113245105852360506576625722162606120278799006335762432 as intpart 3444556116113245105852360506576617482433704636787689277764927488  diafora 84450098430463220380613125949910146813331508897429851031151312896 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 109868318183220581858081858070608.4375 ^2 ::== 12071047340409398337027318521479022900544406923691793986527166464 as intpart 12071047340409398337027318521478927826749389806486681733786763264  diafora 75823607206167067149438167935007837736666423955960260071832682496 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 274670795458051454645204645176521.09375 ^2 ::== 75444045877558739606420740759243896931354343957761916905904406528 as intpart 75444045877558739606420740759243846225330334828585857037776191488  diafora 12450608669017725880044745697242918070434878705631683271140048896 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 27467079545805145464520464517652.109375 ^2 ::== 754440458775587396064207407592438931284025432730737124157947904 as intpart 754440458775587396064207407592432989171836862905417608361672704  diafora 87140214087800878090401279048894329484345638843232358049043709952 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 68667698864512863661301161294130.2734375 ^2 ::== 4715252867347421225401296297452743558209646497360119806619025408 as intpart 4715252867347421225401296297452706162516939764592775653874466816  diafora 83179401679229044261064190159034059400898873997854166151744978944 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 34441479054301122839524093439062.21875 ^2 ::== 1186215479447862966856390809984083476194735845966768276879966208 as intpart 1186215479447862966856390809984068422843858135742625503529402368  diafora 86708439067128602519609095646502698883591530940519743360056950784 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 86103697635752807098810233597655.546875 ^2 ::== 7413846746549143542852442562400521646988936523027964136955838464 as intpart 7413846746549143542852442562400427840844519634052253380918640640  diafora 80480807800027321943613043894086332651968893215477082437887983616 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 8610369763575280709881023359765.5546875 ^2 ::== 74138467465491435428524425624005217262170990372923017304997888 as intpart 74138467465491435428524425623995670268588021520242995258982400  diafora 87820516079110974051036962030862769714883860083831939224886575104 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 215259244089382017747025583994138.875 ^2 ::== 46336542165932147142827766015003265681195904238899732216962613248 as intpart 46336542165932147142827766015002890456618236682996889192813821952  diafora 41558112380644318343637720441483873839146976851220651116102418432 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 48485948846443914041863362652546.46875 ^2 ::== 2350887235539975918767813267862393486051560148062128851453476864 as intpart 2350887235539975918767813267862347850629951931803674970138083328  diafora 85543767311036489567697673188624412325270810860668310474492739584 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 121214872116109785104658406631366.171875 ^2 ::== 14693045222124849492298832924139958416312463268480591792600776704 as intpart 14693045222124849492298832924139917851493255965139743898098204672  diafora 73201609324451615994166653532346846444271957569077796410818035712 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 12121487211610978510465840663136.6171875 ^2 ::== 146930452221248494922988329241399592878222509253883053215842304 as intpart 146930452221248494922988329241384618755507313294077873409228800  diafora 87747724094355216991542498127245381241765915877644129908000030720 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 30303718029027446276164601657841.54296875 ^2 ::== 918315326382803093268677057758747401019528954280036987037548544 as intpart 918315326382803093268677057758714442103923020315598072754208768  diafora 86976339220193662393196809398728054290438391312704847474623250432 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 34117670276867522539323439569122.3125 ^2 ::== 1164015425121049612084023306031287392855854668741070591608487936 as intpart 1164015425121049612084023306031266001251975817369920334741897216  diafora 86730639121455415874381463150455496393037337374503517729119535104 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 85294175692168806348308598922805.78125 ^2 ::== 7275096407006560075525145662695546086506847908235184807237124096 as intpart 7275096407006560075525145662695412983193823944148027653400559616  diafora 80619558139569905410940340793791352580221989818298914152218886144 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 8529417569216880634830859892280.578125 ^2 ::== 72750964070065600755251456626955462053490916796316911975530496 as intpart 72750964070065600755251456626945598147257890886286515753713664  diafora 87821903582506399885710234999859818291573622757726523626249781248 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 213235439230422015870771497307014.46875 ^2 ::== 45469352543791000472032160391847170012746100681731613277099655168 as intpart 45469352543791000472032160391846967188650064165027373804586795008  diafora 42425302002785465014433326064639797107115149369190166504329445376 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 59463066401442964218665528843509.1015625 ^2 ::== 3535856265862415114296747067761743117935593720894948974264320000 as intpart 3535856265862415114296747067761731075254891552715634755583868928  diafora 84358798280714050372168739388725031952859721753272504056629166080 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 148657666003607410546663822108772.75 ^2 ::== 22099101661640094464354669173510890525689335042376551411954483200 as intpart 22099101661640094464354669173510667419183694874001887992190337024  diafora 65795552884936371022110817282976099411882719116674455310132314112 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 14865766600360741054666382210877.275390625 ^2 ::== 220991016616400944643546691735108944870974607555934310891520000 as intpart 220991016616400944643546691735100744756154381196993379092660224  diafora 87673663529960064541821939764751666165538422123743687516773941248 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 37164416500901852636665955527193.1875 ^2 ::== 1381193853852505904022166823344430657855583440148534463247155200 as intpart 1381193853852505904022166823344416713698980929625117999511896064  diafora 86513460692723959582443319633142350275823758089579900489898655744 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 109523903392677570629686617136217.84375 ^2 ::== 11995485414368569466038566426883043029744356259955438337631715328 as intpart 11995485414368569466038566426882859220407323166692221315666935808  diafora 75899169132207896020426920029603907610659090823984121986655715328 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 273809758481693926574216542840544.59375 ^2 ::== 74971783839803559162741040168019015449863075997090635494264406016 as intpart 74971783839803559162741040168018690931309417570363852338243829760  diafora 12922870706772906323724446288468073364455795963853687970672410624 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 27380975848169392657421654284054.4609375 ^2 ::== 749717838398035591627410401680190189359022266247214896101982208 as intpart 749717838398035591627410401680164994803342730187860149125775360  diafora 87144936708178429894838076054806594626500282462433762140697395200 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 68452439620423481643554135710136.1484375 ^2 ::== 4685736489987722447671315010501188465616442249818164718391525376 as intpart 4685736489987722447671315010501168183206838598147740771140239360  diafora 83208918056588743038794171445985594844907774707840398041072795648 from 87894654546576465486465486456486764295765213534217540308916240384
the size of xpl vector is 44 64
 of 274670795458051454645204645176521.09375 ^2 ::== 75444045877558739606420740759243896931354343957761916905904406528 as intpart 75444045877558739606420740759243846225330334828585857037776191488  diafora 12450608669017725880044745697242918070434878705631683271140048896 from 87894654546576465486465486456486764295765213534217540308916240384

-------------------------------------------------------------------------

10 |26| 36 |16| 296470326586956195308983320045476.3125  and main 87894654546576465486465486456486764295765213534217540308916240384
-------------------------------------------------------------------------
section_temp 0
section h inf
87894654546576465486465486456486764295765213534217540308916240384 / 26 ::== 3380563636406787134094826402172567808773638973307236108162039808
            ----->  | *2 6761127272813574268189652804345135617547277946614472216324079616
            ----->  /2 1690281818203393567047413201086283904386819486653618054081019904
                 --> 845140909101696783523706600543141952193409743326809027040509952
                 --> 422570454550848391761853300271570976096704871663404513520254976
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 4571284199918352032957091037719820072526414352564864610142781440 67611272728135742681896528043451.375
i insert 28570526249489700205981818985749043733907270000983452500742897664 169028181820339356704741320108628.4375
i insert 0 0
i insert 285705262494897002059818189857463401520896332447274104069816320 16902818182033935670474132010862.84375
i insert 1785657890593106262873863686609315233369204375061465781296431104 42257045455084839176185330027157.109375
CDIS Start 
section_temp 0
section h inf
3380563636406787134094826402172567808773638973307236108162039808 / 13 ::== 260043356646675933391909723244043674550735208936543639337697280
            ----->  | *2 520086713293351866783819446488087349101470417873087278675394560
            ----->  /2 130021678323337966695954861622021837275367604468271819668848640
                 --> 65010839161668983347977430811010918637683802234135909834424320
                 --> 32505419580834491673988715405505459318841901117067954917212160
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 2704901893442811853820763927644815882530148951257287988994899968 52008671329335186678381944648808.75
i insert 16905636834017574086379774547780359134186477732385356755375226880 130021678323337966695954861622021.875
i insert 0 0
i insert 169056368340175740863797745477800992658134309453580499312181248 13002167832333796669595486162202.1875
i insert 1056602302126098380398735909236256283341501948349215714245083136 32505419580834491673988715405505.46875
section_temp 0
section h inf
260043356646675933391909723244043674550735208936543639337697280 / 4 ::== 65010839161668983347977430811010918637683802234135909834424320
            ----->  | *2 130021678323337966695954861622021837275367604468271819668848640
            ----->  /2 32505419580834491673988715405505459318841901117067954917212160
                 --> 16252709790417245836994357702752729659420950558533977458606080
                 --> 8126354895208622918497178851376364829710475279266988729303040
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 16905636834017574086379774547780359134186477732385356755375226880 130021678323337966695954861622021.875
i insert 1056602302126098380398735909236256283341501948349215714245083136 32505419580834491673988715405505.46875
i insert 0 0
i insert 10566023021260983803987359092359311210590230932246896106799104 3250541958083449167398871540550.546875
i insert 6603764388288114877492099432726682345925664184013930848229261312 81263548952086229184971788513763.671875
CDIS End 
section_temp 0
section h inf
87894654546576465486465486456486764295765213534217540308916240384 / 16 ::== 5493415909161029092904092903530422768485325845888596269307265024
            ----->  | *2 10986831818322058185808185807060845536970651691777192538614530048
            ----->  /2 2746707954580514546452046451765211384242662922944298134653632512
                 --> 1373353977290257273226023225882605692121331461472149067326816256
                 --> 686676988645128636613011612941302846060665730736074533663408128
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 12071047340409398337027318521478927826749389806486681733786763264 109868318183220581858081858070608.4375
i insert 75444045877558739606420740759243846225330334828585857037776191488 274670795458051454645204645176521.09375
i insert 0 0
i insert 754440458775587396064207407592432989171836862905417608361672704 27467079545805145464520464517652.109375
i insert 4715252867347421225401296297452706162516939764592775653874466816 68667698864512863661301161294130.2734375
section_temp 0
section h inf
5493415909161029092904092903530422768485325845888596269307265024 / 319 ::== 17220739527150561419762046719531107029289083730637740717375488
            ----->  | *2 34441479054301122839524093439062214058578167461275481434750976
            ----->  /2 8610369763575280709881023359765553514644541865318870358687744
                 --> 4305184881787640354940511679882776757322270932659435179343872
                 --> 2152592440893820177470255839941388378661135466329717589671936
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 1186215479447862966856390809984068422843858135742625503529402368 34441479054301122839524093439062.21875
i insert 7413846746549143542852442562400427840844519634052253380918640640 86103697635752807098810233597655.546875
i insert 0 0
i insert 74138467465491435428524425623995670268588021520242995258982400 8610369763575280709881023359765.5546875
i insert 46336542165932147142827766015002890456618236682996889192813821952 215259244089382017747025583994138.875
removals 
reporing rt 4
section_temp 0
section h inf
3380563636406787134094826402172567808773638973307236108162039808 - 17220739527150561419762046719531107029289083730637740717375488 ::== 3363342896879636572675064355453036486342783053920430534997049344
            ----->  | *2 6726685793759273145350128710906072972685566107840861069994098688
            ----->  /2 1681671448439818286337532177726518243171391526960215267498524672
                 --> 840835724219909143168766088863259121585695763480107633749262336
                 --> 420417862109954571584383044431629560792847881740053816874631168
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 4524830176796282260924276532999546880688112404988299367040417792 67266857937592731453501287109060.7265625
i insert 28280188604976764130776728331247502188690187698152840612385128448 168167144843981828633753217772651.8125
i insert 0 0
i insert 282801886049767641307767283312471680043007025311768710440026112 16816714484398182863375321777265.181640625
i insert 1767511787811047758173545520702905821175775376721828077289603072 42041786210995457158438304443162.953125
section_temp 0
section h inf
260043356646675933391909723244043674550735208936543639337697280 - 17220739527150561419762046719531107029289083730637740717375488 ::== 242822617119525371972147676524512550190285575210582050032582656
            ----->  | *2 485645234239050743944295353049025100380571150421164100065165312
            ----->  /2 121411308559762685986073838262256275095142787605291025016291328
                 --> 60705654279881342993036919131128137547571393802645512508145664
                 --> 30352827139940671496518459565564068773785696901322756254072832
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 2358512935391024650185480575735289264245000238114374119227129856 48564523423905074394429535304902.515625
i insert 14740705846193904063659253598345799626655082508708836147762036736 121411308559762685986073838262256.296875
i insert 0 0
i insert 147407058461939040636592535983443437299407203872412171841306624 12141130855976268598607383826225.62890625
i insert 921294115387119003978703349896612476665942656794302259235127296 30352827139940671496518459565564.07421875
section_temp 0
section h inf
65010839161668983347977430811010918637683802234135909834424320 - 17220739527150561419762046719531107029289083730637740717375488 ::== 47790099634518421928215384091479814084274797074258718915297280
            ----->  | *2 95580199269036843856430768182959628168549594148517437830594560
            ----->  /2 23895049817259210964107692045739907042137398537129359457648640
                 --> 11947524908629605482053846022869953521068699268564679728824320
                 --> 5973762454314802741026923011434976760534349634282339864412160
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 9135574492308791220639983857529689723613672284009454786052096000 95580199269036843856430768182959.65625
i insert 57097340576929945128999899109561276044436630553498886927609233408 238950498172592109641076920457399.125
i insert 0 0
i insert 570973405769299451289998991095569717368235556005661048718753792 23895049817259210964107692045739.9140625
i insert 3568583786058121570562493694347489749584673205306174167047995392 59737624543148027410269230114349.78125
section_temp 0
section h inf
5493415909161029092904092903530422768485325845888596269307265024 - 17220739527150561419762046719531107029289083730637740717375488 ::== 5476195169633878531484330856810891446054469926501790696142274560
            ----->  | *2 10952390339267757062968661713621782892108939853003581392284549120
            ----->  /2 2738097584816939265742165428405445723027234963250895348071137280
                 --> 1369048792408469632871082714202722861513617481625447674035568640
                 --> 684524396204234816435541357101361430756808740812723837017784320
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 11995485414368569466038566426882859220407323166692221315666935808 109523903392677570629686617136217.84375
i insert 74971783839803559162741040168018690931309417570363852338243829760 273809758481693926574216542840544.59375
i insert 0 0
i insert 749717838398035591627410401680164994803342730187860149125775360 27380975848169392657421654284054.4609375
i insert 4685736489987722447671315010501168183206838598147740771140239360 68452439620423481643554135710136.1484375
ending sqti reporting the results 
reporting size of xl vector 44 64
entering amfidromi loop of xl vector  with first 
 of 67611272728135742681896528043451.375 ^2 ::== 4571284199918352032957091037719870778550423481740924478270996480 as intpart 4571284199918352032957091037719820072526414352564864610142781440  diafora 83323370346658113453508395418766940420286998496964471208663842816 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 169028181820339356704741320108628.4375 ^2 ::== 28570526249489700205981818985749190781376896475594026118314721280 as intpart 28570526249489700205981818985749043733907270000983452500742897664  diafora 59324128297086765280483667470737720561857943533234087808173342720 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 16902818182033935670474132010862.84375 ^2 ::== 285705262494897002059818189857491923659401467608807779891937280 as intpart 285705262494897002059818189857463401520896332447274104069816320  diafora 87608949284081568484405668266629305093336930457780158662675791872 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 42257045455084839176185330027157.109375 ^2 ::== 1785657890593106262873863686609324423836056029724626632394670080 as intpart 1785657890593106262873863686609315233369204375061465781296431104  diafora 86108996655983359223591622769877443991793608246238468540806987776 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 52008671329335186678381944648808.75 ^2 ::== 2704901893442811853820763927644893843042062987365480036242030592 as intpart 2704901893442811853820763927644815882530148951257287988994899968  diafora 85189752653133653632644722528841953483837465495877858306734161920 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 130021678323337966695954861622021.875 ^2 ::== 16905636834017574086379774547780587311294518813677626161952194560 as intpart 16905636834017574086379774547780359134186477732385356755375226880  diafora 70989017712558891400085711908706405161578735801832183553541013504 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 13002167832333796669595486162202.1875 ^2 ::== 169056368340175740863797745477805865190128936710342502265126912 as intpart 169056368340175740863797745477800992658134309453580499312181248  diafora 87725598178236289745601688711008959183242628483018404945318641664 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 32505419580834491673988715405505.46875 ^2 ::== 1056602302126098380398735909236286706955907425854851635122012160 as intpart 1056602302126098380398735909236256283341501948349215714245083136  diafora 86838052244450367106066750547250507695511061528810974220495355904 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 130021678323337966695954861622021.875 ^2 ::== 16905636834017574086379774547780587311294518813677626161952194560 as intpart 16905636834017574086379774547780359134186477732385356755375226880  diafora 70989017712558891400085711908706405161578735801832183553541013504 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 32505419580834491673988715405505.46875 ^2 ::== 1056602302126098380398735909236286706955907425854851635122012160 as intpart 1056602302126098380398735909236256283341501948349215714245083136  diafora 86838052244450367106066750547250507695511061528810974220495355904 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 3250541958083449167398871540550.546875 ^2 ::== 10566023021260983803987359092362866574383058544396406391570432 as intpart 10566023021260983803987359092359311210590230932246896106799104  diafora 87884088523555204502661499097394407814485553109664601832207417344 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 81263548952086229184971788513763.671875 ^2 ::== 6603764388288114877492099432726791363877283811742459564704923648 as intpart 6603764388288114877492099432726682345925664184013930848229261312  diafora 81290890158288350608973387023760079414538348893744806467280568320 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 109868318183220581858081858070608.4375 ^2 ::== 12071047340409398337027318521479022900544406923691793986527166464 as intpart 12071047340409398337027318521478927826749389806486681733786763264  diafora 75823607206167067149438167935007837736666423955960260071832682496 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 274670795458051454645204645176521.09375 ^2 ::== 75444045877558739606420740759243896931354343957761916905904406528 as intpart 75444045877558739606420740759243846225330334828585857037776191488  diafora 12450608669017725880044745697242918070434878705631683271140048896 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 27467079545805145464520464517652.109375 ^2 ::== 754440458775587396064207407592438931284025432730737124157947904 as intpart 754440458775587396064207407592432989171836862905417608361672704  diafora 87140214087800878090401279048894329484345638843232358049043709952 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 68667698864512863661301161294130.2734375 ^2 ::== 4715252867347421225401296297452743558209646497360119806619025408 as intpart 4715252867347421225401296297452706162516939764592775653874466816  diafora 83179401679229044261064190159034059400898873997854166151744978944 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 34441479054301122839524093439062.21875 ^2 ::== 1186215479447862966856390809984083476194735845966768276879966208 as intpart 1186215479447862966856390809984068422843858135742625503529402368  diafora 86708439067128602519609095646502698883591530940519743360056950784 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 86103697635752807098810233597655.546875 ^2 ::== 7413846746549143542852442562400521646988936523027964136955838464 as intpart 7413846746549143542852442562400427840844519634052253380918640640  diafora 80480807800027321943613043894086332651968893215477082437887983616 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 8610369763575280709881023359765.5546875 ^2 ::== 74138467465491435428524425624005217262170990372923017304997888 as intpart 74138467465491435428524425623995670268588021520242995258982400  diafora 87820516079110974051036962030862769714883860083831939224886575104 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 215259244089382017747025583994138.875 ^2 ::== 46336542165932147142827766015003265681195904238899732216962613248 as intpart 46336542165932147142827766015002890456618236682996889192813821952  diafora 41558112380644318343637720441483873839146976851220651116102418432 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 67266857937592731453501287109060.7265625 ^2 ::== 4524830176796282260924276532999644489784329978652214613187231744 as intpart 4524830176796282260924276532999546880688112404988299367040417792  diafora 83369824369780183225541209923487214245950600558655737200117809152 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 168167144843981828633753217772651.8125 ^2 ::== 28280188604976764130776728331247776001219836995703563900277489664 as intpart 28280188604976764130776728331247502188690187698152840612385128448  diafora 59614465941599701355688758125239257036472624923147093709718290432 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 16816714484398182863375321777265.181640625 ^2 ::== 282801886049767641307767283312477780611520623665763413324201984 as intpart 282801886049767641307767283312471680043007025311768710440026112  diafora 87611852660526697845157719173174296220603600907933132104725954560 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 42041786210995457158438304443162.953125 ^2 ::== 1767511787811047758173545520702986000076239812231472743767343104 as intpart 1767511787811047758173545520702905821175775376721828077289603072  diafora 86127142758765417728291940935783859108414738271610412979978240000 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 48564523423905074394429535304902.515625 ^2 ::== 2358512935391024650185480575735339336443709253175733239003742208 as intpart 2358512935391024650185480575735289264245000238114374119227129856  diafora 85536141611185440836280005880751474080782263124931115067161706496 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 121411308559762685986073838262256.296875 ^2 ::== 14740705846193904063659253598345873150389895746014122956547948544 as intpart 14740705846193904063659253598345799626655082508708836147762036736  diafora 73153948700382561422806232858140964669110131025508704161154203648 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 12141130855976268598607383826225.62890625 ^2 ::== 147407058461939040636592535983458708527731828323483327437733888 as intpart 147407058461939040636592535983443437299407203872412171841306624  diafora 87747247488114526445828893920503320700009481301816452949987033088 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 30352827139940671496518459565564.07421875 ^2 ::== 921294115387119003978703349896617071899368484125882684784246784 as intpart 921294115387119003978703349896612476665942656794302259235127296  diafora 86973360431189346482486783106590153086749871105652639546384318464 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 95580199269036843856430768182959.65625 ^2 ::== 9135574492308791220639983857529815221023094878720202959669428224 as intpart 9135574492308791220639983857529689723613672284009454786052096000  diafora 78759080054267674265825502598957073304500941021978684026160939008 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 238950498172592109641076920457399.125 ^2 ::== 57097340576929945128999899109561336891665441508510158769363091456 as intpart 57097340576929945128999899109561276044436630553498886927609233408  diafora 30797313969646520357465587346925488251328582980718653381307006976 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 23895049817259210964107692045739.9140625 ^2 ::== 570973405769299451289998991095613451313943429920012684979339264 as intpart 570973405769299451289998991095569717368235556005661048718753792  diafora 87323681140807166035175487465391192201552102550281751453878976512 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 59737624543148027410269230114349.78125 ^2 ::== 3568583786058121570562493694347583555729090094281884923085193216 as intpart 3568583786058121570562493694347489749584673205306174167047995392  diafora 84326070760518343915902992762139276447656440671255468386923053056 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 109523903392677570629686617136217.84375 ^2 ::== 11995485414368569466038566426883043029744356259955438337631715328 as intpart 11995485414368569466038566426882859220407323166692221315666935808  diafora 75899169132207896020426920029603907610659090823984121986655715328 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 273809758481693926574216542840544.59375 ^2 ::== 74971783839803559162741040168019015449863075997090635494264406016 as intpart 74971783839803559162741040168018690931309417570363852338243829760  diafora 12922870706772906323724446288468073364455795963853687970672410624 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 87894654546576465486465486456486764295765213534217540308916240384 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 27380975848169392657421654284054.4609375 ^2 ::== 749717838398035591627410401680190189359022266247214896101982208 as intpart 749717838398035591627410401680164994803342730187860149125775360  diafora 87144936708178429894838076054806594626500282462433762140697395200 from 87894654546576465486465486456486764295765213534217540308916240384
entering amfidromi loop of xl vector  with first 
 of 68452439620423481643554135710136.1484375 ^2 ::== 4685736489987722447671315010501188465616442249818164718391525376 as intpart 4685736489987722447671315010501168183206838598147740771140239360  diafora 83208918056588743038794171445985594844907774707840398041072795648 from 87894654546576465486465486456486764295765213534217540308916240384
the size of xpl vector is 44 64
 of 274670795458051454645204645176521.09375 ^2 ::== 75444045877558739606420740759243896931354343957761916905904406528 as intpart 75444045877558739606420740759243846225330334828585857037776191488  diafora 12450608669017725880044745697242918070434878705631683271140048896 from 87894654546576465486465486456486764295765213534217540308916240384

-------------------------------------------------------------------------


 274670795458051454645204645176521.093750 ^2 ::== 75444045877558739606420740759243896931354343957761916905904406528.000000 as intpart 75444045877558739606420740759243846225330334828585857037776191488.000000 diafora 12450608669017725880044745697242918070434878705631683271140048896.000000 from 87894654546576465486465486456486764295765213534217540308916240384.000000 
 274670795458051454645204645176521.093750 ^2 ::== 75444045877558739606420740759243896931354343957761916905904406528.000000 as intpart 75444045877558739606420740759243846225330334828585857037776191488.000000 diafora 12450608669017725880044745697242918070434878705631683271140048896.000000 from 87894654546576465486465486456486764295765213534217540308916240384.000000 
 258513689842871957313133783695549.437500 ^2 ::== 66829327836176599789770621572202291127542985702617969827468279808.000000 as intpart 66829327836176599789770621572202068021037345534243306407704133632.000000 diafora 21065326710399865696694864884284696274727867999974233901212106752.000000 from 87894654546576465486465486456486764295765213534217540308916240384.000000 
 258513689842871957313133783695549.437500 ^2 ::== 66829327836176599789770621572202291127542985702617969827468279808.000000 as intpart 66829327836176599789770621572202068021037345534243306407704133632.000000 diafora 21065326710399865696694864884284696274727867999974233901212106752.000000 from 87894654546576465486465486456486764295765213534217540308916240384.000000 
 292982181821921551621551621521622.500000 ^2 ::== 85838558865133499285527598374961944006495160954864494562068398080.000000 as intpart 85838558865133499285527598374961649911555908005643347326924750848.000000 diafora 2056095681442966200937888081525114384209305528574192981991489536.000000 from 87894654546576465486465486456486764295765213534217540308916240384.000000 
 292982181821921551621551621521622.500000 ^2 ::== 85838558865133499285527598374961944006495160954864494562068398080.000000 as intpart 85838558865133499285527598374961649911555908005643347326924750848.000000 diafora 2056095681442966200937888081525114384209305528574192981991489536.000000 from 87894654546576465486465486456486764295765213534217540308916240384.000000 
 274670795458051454645204645176521.093750 ^2 ::== 75444045877558739606420740759243896931354343957761916905904406528.000000 as intpart 75444045877558739606420740759243846225330334828585857037776191488.000000 diafora 12450608669017725880044745697242918070434878705631683271140048896.000000 from 87894654546576465486465486456486764295765213534217540308916240384.000000 
 274670795458051454645204645176521.093750 ^2 ::== 75444045877558739606420740759243896931354343957761916905904406528.000000 as intpart 75444045877558739606420740759243846225330334828585857037776191488.000000 diafora 12450608669017725880044745697242918070434878705631683271140048896.000000 from 87894654546576465486465486456486764295765213534217540308916240384.000000 

---------order of near approximation numbers--------
|----------bigger value is the nearest-------------|

the size of fnl_weirdo vector is 7 8
 292982181821921551621551621521622  292982181821921551621551621521622  274670795458051454645204645176521  274670795458051454645204645176521  274670795458051454645204645176521  274670795458051454645204645176521  258513689842871957313133783695549 
----------------------------------------------------

auto value is 292982181821921551621551621521622
lenght of 292982181821921551621551621521622 33
lenght of 87894654546576465486465486456486764295765213534217540308916240384 is 65
moving with ps_ask 34
-------------------------------------------------------
times 1 8 2
main 2.828427124746190097603377448419395968694492778317254832511024748099349480912056975512314238585531712 second 1.414213562373095048801688724209697984347246389158627416255512374049674740456028487756157119292765856
main 7.999999999999999999999999999999999229628022245105658777608822966029072584759340713844721904024481773 second 1.999999999999999999999999999999999807407005561276414694402205741507268146189835178461180476006120443
times of 1.414213562373095048801688724209698176940240827882212721853306632542406594266193309294976643286645412
new times of 1.414213562373095048801688724209698176940240827882212721853306632542406594266193309294976643286645412
using 292982181821921551621551621521622 * 1.414213562373095048801688724209698176940240827882212721853306632542406594266193309294976643286645412
414339375066221528628156454954436.3125  with length of 37 and dot length 33 will move 4

 trying to reach the main number 87894654546576465486465486456486764295765213534217540308916240384  main number intpart lenght 65 
 fract 0 int 87894654546576465486465486456486764295765213534217540308916240384
    -----------------> 414339375066221528628156454954436.3125 ^2 ::== 171677117730266998571055196749923340387931023314627542548352073728
 temp fract 0 temp int 171677117730266998571055196749923340387931023314627542548352073728
before loop xstp is 0entering tens with lap of value 4
using t_rst as 4143393750662215286281564549544363
using for fract 17167711773026699857105519674992332740718887697755847122211125067776
getting the part of 17167711773026699857105519674992332740718887697755847122211125067776 :: ad 68 and mad 65
have to exit bigger lenght with ad 68 and mad 65
    -----------------> 4143393750662215286281564549544363 ^2 ::== 17167711773026699857105519674992332740718887697755847122211125067776
t_ten increased 
breaking with xbrk of value 1

increasing the digits 2
-------------------------------------------------------
-------------------------------------------------------
times 2 87 29
main 9.327379053088815045554475542320557471527647726584875648712282054562071331726968992370530031621456146 second 5.385164807134504031250710491540329415288892282132364959513666214486289282592501592716871527954936028
main 87.00000000000000000000000000000001232595164407830945955825883254353483864385054857848444953560829163 second 29
times of 0.3216337604513384498467060531834675106401857929086603425347731726525638646860261182780504896072670817
new times of 0.3216337604513384498467060531834675106401857929086603425347731726525638646860261182780504896072670817
using 292982181821921551621551621521622 * 0.3216337604513384498467060531834675106401857929086603425347731726525638646860261182780504896072670817
94232960884622402849285599196161  with length of 31 and dot length 32767 will move -32736

 trying to reach the main number 87894654546576465486465486456486764295765213534217540308916240384  main number intpart lenght 65 
 fract 0 int 87894654546576465486465486456486764295765213534217540308916240384
    -----------------> 94232960884622402849285599196161 ^2 ::== 8879850917082775788158027418099480937909190467602456516805787648
 temp fract 0 temp int 8879850917082775788158027418099480937909190467602456516805787648
before loop xstp is 0entering tens with lap of value -32736
using t_rst as 942329608846224028492855991961610
using for fract 887985091708277578815802741809948144496943055889421711548706979840
getting the part of 887985091708277578815802741809948144496943055889421711548706979840 :: ad 66 and mad 65
have to exit bigger lenght with ad 66 and mad 65
i push_back a near value of 942329608846224028492855991961610
stopping with ad 66 and mad of 65
    -----------------> 942329608846224028492855991961610 ^2 ::== 887985091708277578815802741809948144496943055889421711548706979840
t_ten increased 
breaking with xbrk of value 1

increasing the digits 3
-------------------------------------------------------
-------------------------------------------------------
times 3 878 292
main 29.6310647800581071187546542085948978899151365306819798276977635028296004238157479449000675231218338 second 17.08800749063506233574329665247941270348631833650356961665371018175424433493958531471434980630874634
main 878.000000000000000000000000000000098607613152626475676466070660348278709150804388627875596284866333 second 292
times of 0.1014762492467743394477899116732701982531340292146643144784169982973616452870402326880139298737049103
new times of 0.1014762492467743394477899116732701982531340292146643144784169982973616452870402326880139298737049103
using 292982181821921551621551621521622 * 0.1014762492467743394477899116732701982531340292146643144784169982973616452870402326880139298737049103
29730732907425069419891898043024.89453125  with length of 40 and dot length 32 will move 8

 trying to reach the main number 87894654546576465486465486456486764295765213534217540308916240384  main number intpart lenght 65 
 fract 0 int 87894654546576465486465486456486764295765213534217540308916240384
    -----------------> 29730732907425069419891898043024.89453125 ^2 ::== 883916479212647921428659591072625468749604899036662680459935744
 temp fract 0 temp int 883916479212647921428659591072625468749604899036662680459935744
before loop xstp is 0entering tens with lap of value 8
using t_rst as 297307329074250694198918980430248.9375
using for fract 88391647921264792142865959107262543072008689218978063555883958272
getting the part of 88391647921264792142865959107262543072008689218978063555883958272 :: ad 65 and mad 65
i push_back a near value of 297307329074250694198918980430248
stopping with ad 65 and mad of 65
    -----------------> 297307329074250694198918980430248.9375 ^2 ::== 88391647921264792142865959107262543072008689218978063555883958272
t_ten increased 
breaking with xbrk of value 1

increasing the digits 4
-------------------------------------------------------
-------------------------------------------------------
times 4 8789 2929
main 93.74966666607407196706882482764269786085029109606588594281784853528075029949206964374752715229988098 second 54.12023651093923296030250331814636068815957718088187600516748197937780262556373145343968644738197327
main 8789.000000000000000000000000000001577721810442023610823457130565572459346412870218046009540557861328 second 2929.000000000000000000000000000000394430452610505902705864282641393114836603217554511502385139465332
times of 0.03200739729125096345751752298656288627334868961201845375748148618110141812396346461255802751111332327
new times of 0.03200739729125096345751752298656288627334868961201845375748148618110141812396346461255802751111332327
using 292982181821921551621551621521622 * 0.03200739729125096345751752298656288627334868961201845375748148618110141812396346461255802751111332327
9377597092831769137127225032631.76171875  with length of 39 and dot length 31 will move 8

 trying to reach the main number 87894654546576465486465486456486764295765213534217540308916240384  main number intpart lenght 65 
 fract 0 int 87894654546576465486465486456486764295765213534217540308916240384
    -----------------> 9377597092831769137127225032631.76171875 ^2 ::== 87939327235486848147771069297551797749555941078215065237192704
 temp fract 0 temp int 87939327235486848147771069297551797749555941078215065237192704
before loop xstp is 0entering tens with lap of value 8
using t_rst as 93775970928317691371272250326317.625
using for fract 8793932723548684814777106929755180527623137993332713662386798592
getting the part of 8793932723548684814777106929755180527623137993332713662386798592 :: ad 64 and mad 65
i push_back a near value of 93775970928317691371272250326317
stopping with ad 64 and mad of 65
    -----------------> 93775970928317691371272250326317.625 ^2 ::== 8793932723548684814777106929755180527623137993332713662386798592
t_ten increased 
breaking with xbrk of value 1

increasing the digits 5
-------------------------------------------------------
-------------------------------------------------------
times 5 87894 29298
main 296.4692226859307566326379017943671893234291320392629396225253363573309828282731359649915248155593872 second 171.1665855241612278624797217450403879100196527591486517239579320630304959394152319873683154582977295
main 87894.00000000000000000000000000001262177448353618888658765704452457967477130296174436807632446289062 second 29297.99999999999999999999999999999684455637911595277835308573886885508130717425956390798091888427734
times of 0.01011909422779475584110307535648737854315251047477711530623979216063618153222461448770275183051126078
new times of 0.01011909422779475584110307535648737854315251047477711530623979216063618153222461448770275183051126078
using 292982181821921551621551621521622 * 0.01011909422779475584110307535648737854315251047477711530623979216063618153222461448770275183051126078
2964714304920920015402620919952.68994140625  with length of 42 and dot length 31 will move 11
lap for tens is more than ten will lower it 

 trying to reach the main number 87894654546576465486465486456486764295765213534217540308916240384  main number intpart lenght 65 
 fract 0 int 87894654546576465486465486456486764295765213534217540308916240384
    -----------------> 2964714304920920015402620919952.68994140625 ^2 ::== 8789530909802733901856194795715921569785351402295042049572864
 temp fract 0 temp int 8789530909802733901856194795715921569785351402295042049572864
before loop xstp is 0entering tens with lap of value 10
using t_rst as 29647143049209200154026209199526.8984375
using for fract 878953090980273390185619479571592018329250740266913416255373312
getting the part of 878953090980273390185619479571592018329250740266913416255373312 :: ad 63 and mad 65
    -----------------> 29647143049209200154026209199526.8984375 ^2 ::== 878953090980273390185619479571592018329250740266913416255373312
t_ten increased 
using t_rst as 296471430492092001540262091995269
using for fract 87895309098027339018561947957159215143256376423100057340920987648
getting the part of 87895309098027339018561947957159215143256376423100057340920987648 :: ad 65 and mad 65
i push_back a near value of 296471430492092001540262091995269
stopping with ad 65 and mad of 65
    -----------------> 296471430492092001540262091995269 ^2 ::== 87895309098027339018561947957159215143256376423100057340920987648
t_ten increased 
breaking with xbrk of value 1

increasing the digits 6
-------------------------------------------------------
-------------------------------------------------------
times 6 878946 292982
main 937.5211997603040869596046837510080805810404728036896793480609014169446790987194617628119885921478271 second 541.2781170525924743760092112120328435622373700115361026485535402008597571921200142242014408111572266
main 878945.999999999999999999999999999899025804131710488907298743643803362601829576306045055389404296875 second 292982.0000000000000000000000000000504870979341447555463506281780983186990852118469774723052978515625
times of 0.003199927639787782481379759451949293530189789920480108384967450772123860724808520894502095188727253117
new times of 0.003199927639787782481379759451949293530189789920480108384967450772123860724808520894502095188727253117
using 292982181821921551621551621521622 * 0.003199927639787782481379759451949293530189789920480108384967450772123860724808520894502095188727253117
937521781577296379319297514695.7021484375  with length of 40 and dot length 30 will move 10

 trying to reach the main number 87894654546576465486465486456486764295765213534217540308916240384  main number intpart lenght 65 
 fract 0 int 87894654546576465486465486456486764295765213534217540308916240384
    -----------------> 937521781577296379319297514695.7021484375 ^2 ::== 878947090931867820741829856867946960957149623712790752526336
 temp fract 0 temp int 878947090931867820741829856867946960957149623712790752526336
before loop xstp is 0entering tens with lap of value 10
using t_rst as 9375217815772963793192975146957.021484375
using for fract 87894709093186782074182985686794691143954805229757975656136704
getting the part of 87894709093186782074182985686794691143954805229757975656136704 :: ad 62 and mad 65
    -----------------> 9375217815772963793192975146957.021484375 ^2 ::== 87894709093186782074182985686794691143954805229757975656136704
t_ten increased 
using t_rst as 93752178157729637931929751469570.21875
using for fract 8789470909318678207418298568679470302817918236940861468772925440
getting the part of 8789470909318678207418298568679470302817918236940861468772925440 :: ad 64 and mad 65
i push_back a near value of 93752178157729637931929751469570
stopping with ad 64 and mad of 65
    -----------------> 93752178157729637931929751469570.21875 ^2 ::== 8789470909318678207418298568679470302817918236940861468772925440
t_ten increased 
breaking with xbrk of value 1

increasing the digits 7
-------------------------------------------------------
-------------------------------------------------------
times 7 8789465 2929821
main 2964.703189191120359563837776166703541032780873505232619241557719125257364112258073873817920684814453 second 1711.671989605485131483736559397573349728553080534617598466512532022487658167619883897714316844940186
main 8789464.99999999999999999999999999838441286610736782251677989830085380162927322089672088623046875 second 2929820.9999999999999999999999999995961032165268419556291949745752134504073183052241802215576171875
times of 0.001011905911381999227790311345357516371401356277113171096134392861631465255752102688768800931029545609
new times of 0.001011905911381999227790311345357516371401356277113171096134392861631465255752102688768800931029545609
using 292982181821921551621551621521622 * 0.001011905911381999227790311345357516371401356277113171096134392861631465255752102688768800931029545609
296470401715198134676434347464.900726318359375  with length of 45 and dot length 30 will move 15
lap for tens is more than ten will lower it 

 trying to reach the main number 87894654546576465486465486456486764295765213534217540308916240384  main number intpart lenght 65 
 fract 0 int 87894654546576465486465486456486764295765213534217540308916240384
    -----------------> 296470401715198134676434347464.900726318359375 ^2 ::== 87894699093170957075457364330836029699603378351290449920000
 temp fract 0 temp int 87894699093170957075457364330836029699603378351290449920000
before loop xstp is 0entering tens with lap of value 10
using t_rst as 2964704017151981346764343474649.00732421875
using for fract 8789469909317095707545736433083602467047196875443308314230784
getting the part of 8789469909317095707545736433083602467047196875443308314230784 :: ad 61 and mad 65
    -----------------> 2964704017151981346764343474649.00732421875 ^2 ::== 8789469909317095707545736433083602467047196875443308314230784
t_ten increased 
using t_rst as 29647040171519813467643434746490.07421875
using for fract 878946990931709570754573643308360320981122044667147325370531840
getting the part of 878946990931709570754573643308360320981122044667147325370531840 :: ad 63 and mad 65
    -----------------> 29647040171519813467643434746490.07421875 ^2 ::== 878946990931709570754573643308360320981122044667147325370531840
t_ten increased 
using t_rst as 296470401715198134676434347464900.71875
using for fract 87894699093170957075457364330836018153955601956191316073317924864
getting the part of 87894699093170957075457364330836018153955601956191316073317924864 :: ad 65 and mad 65
i push_back a near value of 296470401715198134676434347464900
stopping with ad 65 and mad of 65
    -----------------> 296470401715198134676434347464900.71875 ^2 ::== 87894699093170957075457364330836018153955601956191316073317924864
t_ten increased 
breaking with xbrk of value 1

increasing the digits 8
-------------------------------------------------------
-------------------------------------------------------
times 8 87894654 29298218
main 9375.214877537474340744708743012260967695356648055455136777942143355701887230679858475923538208007812 second 5412.782833256845156800144485440906212246841254950927547375644742488898231158600538037717342376708984
main 87894654 second 29298218.0000000000000000000000000032311742677852643549664402033982923967414535582065582275390625
times of 0.0003199926656814921078389378064909019215937635061010817859669139860187511920094709759465612108897403232
new times of 0.0003199926656814921078389378064909019215937635061010817859669139860187511920094709759465612108897403232
using 292982181821921551621551621521622 * 0.0003199926656814921078389378064909019215937635061010817859669139860187511920094709759465612108897403232
93752149358376277373387620767.6571197509765625  with length of 45 and dot length 29 will move 16
lap for tens is more than ten will lower it 

 trying to reach the main number 87894654546576465486465486456486764295765213534217540308916240384  main number intpart lenght 65 
 fract 0 int 87894654546576465486465486456486764295765213534217540308916240384
    -----------------> 93752149358376277373387620767.6571197509765625 ^2 ::== 8789465509315293437183885897937029638141357800631520198656
 temp fract 0 temp int 8789465509315293437183885897937029638141357800631520198656
before loop xstp is 0entering tens with lap of value 10
using t_rst as 937521493583762773733876207676.5711669921875
using for fract 878946550931529343718388589793702804235927590932100958650368
getting the part of 878946550931529343718388589793702804235927590932100958650368 :: ad 60 and mad 65
    -----------------> 937521493583762773733876207676.5711669921875 ^2 ::== 878946550931529343718388589793702804235927590932100958650368
t_ten increased 
using t_rst as 9375214935837627737338762076765.7119140625
using for fract 87894655093152934371838858979370287232262975162801607810220032
getting the part of 87894655093152934371838858979370287232262975162801607810220032 :: ad 62 and mad 65
    -----------------> 9375214935837627737338762076765.7119140625 ^2 ::== 87894655093152934371838858979370287232262975162801607810220032
t_ten increased 
using t_rst as 93752149358376277373387620767657.125
using for fract 8789465509315293437183885897937030545474035344359925432532860928
getting the part of 8789465509315293437183885897937030545474035344359925432532860928 :: ad 64 and mad 65
i push_back a near value of 93752149358376277373387620767657
stopping with ad 64 and mad of 65
    -----------------> 93752149358376277373387620767657.125 ^2 ::== 8789465509315293437183885897937030545474035344359925432532860928
t_ten increased 
breaking with xbrk of value 1

increasing the digits 9
-------------------------------------------------------
-------------------------------------------------------
times 9 878946545 292982181
main 29647.03265084045472758795028768039383049128697748282144778294439069199484038108494132757186889648438 second 17116.72226216222741921515447279315076639880506730385204163099807650461059438384836539626121520996094
main 878946545 second 292982181
times of 0.0001011905657526675819495928671774082817065270192816785756446979117022598350316521043437689719723948656
new times of 0.0001011905657526675819495928671774082817065270192816785756446979117022598350316521043437689719723948656
using 292982181821921551621551621521622 * 0.0001011905657526675819495928671774082817065270192816785756446979117022598350316521043437689719723948656
29647032734011161540483131857.370212554931640625  with length of 47 and dot length 29 will move 18
lap for tens is more than ten will lower it 

 trying to reach the main number 87894654546576465486465486456486764295765213534217540308916240384  main number intpart lenght 65 
 fract 0 int 87894654546576465486465486456486764295765213534217540308916240384
    -----------------> 29647032734011161540483131857.370212554931640625 ^2 ::== 878946549931529327868130677280571849154073806654545068032
 temp fract 0 temp int 878946549931529327868130677280571849154073806654545068032
before loop xstp is 0entering tens with lap of value 10
using t_rst as 296470327340111615404831318573.702117919921875
using for fract 87894654993152932786813067728057171012760455097218997682176
getting the part of 87894654993152932786813067728057171012760455097218997682176 :: ad 59 and mad 65
    -----------------> 296470327340111615404831318573.702117919921875 ^2 ::== 87894654993152932786813067728057171012760455097218997682176
t_ten increased 
using t_rst as 2964703273401116154048313185737.021484375
using for fract 8789465499315293278681306772805719422413619169809915204075520
getting the part of 8789465499315293278681306772805719422413619169809915204075520 :: ad 61 and mad 65
    -----------------> 2964703273401116154048313185737.021484375 ^2 ::== 8789465499315293278681306772805719422413619169809915204075520
t_ten increased 
using t_rst as 29647032734011161540483131857370.2109375
using for fract 878946549931529327868130677280571709508634531329499839372197888
getting the part of 878946549931529327868130677280571709508634531329499839372197888 :: ad 63 and mad 65
    -----------------> 29647032734011161540483131857370.2109375 ^2 ::== 878946549931529327868130677280571709508634531329499839372197888
t_ten increased 
using t_rst as 296470327340111615404831318573702.125
using for fract 87894654993152932786813067728057178556767054502326392917439021056
getting the part of 87894654993152932786813067728057178556767054502326392917439021056 :: ad 65 and mad 65
i push_back a near value of 296470327340111615404831318573702
stopping with ad 65 and mad of 65
    -----------------> 296470327340111615404831318573702.125 ^2 ::== 87894654993152932786813067728057178556767054502326392917439021056
t_ten increased 
breaking with xbrk of value 1

increasing the digits 10
-------------------------------------------------------
-------------------------------------------------------
times 10 8789465454 2929821818
main 93752.14906336814207845240203253937714699402539928552753471010378083505543145292904227972030639648438 second 54127.82849884151781554157413712146694245178154941586778361398840653251340881979558616876602172851562
main 8789465453.9999999999999999999999983456387748939446502571826158600742928683757781982421875 second 2929821818
times of 3.199926646985197038984314165979747575157539909520423035918924435496802707817014113991782586765566521e-05
new times of 3.199926646985197038984314165979747575157539909520423035918924435496802707817014113991782586765566521e-05
using 292982181821921551621551621521622 * 3.199926646985197038984314165979747575157539909520423035918924435496802707817014113991782586765566521e-05
9375214907038287779615886096.44433498382568359375  with length of 48 and dot length 28 will move 20
lap for tens is more than ten will lower it 

 trying to reach the main number 87894654546576465486465486456486764295765213534217540308916240384  main number intpart lenght 65 
 fract 0 int 87894654546576465486465486456486764295765213534217540308916240384
    -----------------> 9375214907038287779615886096.44433498382568359375 ^2 ::== 87894654553152930973423038084865856845876466191247081472
 temp fract 0 temp int 87894654553152930973423038084865856845876466191247081472
before loop xstp is 0entering tens with lap of value 10
using t_rst as 93752149070382877796158860964.4433441162109375
using for fract 8789465455315293097342303808486583644525326019437975830528
getting the part of 8789465455315293097342303808486583644525326019437975830528 :: ad 58 and mad 65
    -----------------> 93752149070382877796158860964.4433441162109375 ^2 ::== 8789465455315293097342303808486583644525326019437975830528
t_ten increased 
using t_rst as 937521490703828777961588609644.4334716796875
using for fract 878946545531529309734230380848658514359334234157815246618624
getting the part of 878946545531529309734230380848658514359334234157815246618624 :: ad 60 and mad 65
    -----------------> 937521490703828777961588609644.4334716796875 ^2 ::== 878946545531529309734230380848658514359334234157815246618624
t_ten increased 
using t_rst as 9375214907038287779615886096444.3349609375
using for fract 87894654553152930973423038084865855149753541271922349359235072
getting the part of 87894654553152930973423038084865855149753541271922349359235072 :: ad 62 and mad 65
    -----------------> 9375214907038287779615886096444.3349609375 ^2 ::== 87894654553152930973423038084865855149753541271922349359235072
t_ten increased 
using t_rst as 93752149070382877796158860964443.34375
using for fract 8789465455315293097342303808486584445395160184623677423080177664
getting the part of 8789465455315293097342303808486584445395160184623677423080177664 :: ad 64 and mad 65
i push_back a near value of 93752149070382877796158860964443
stopping with ad 64 and mad of 65
    -----------------> 93752149070382877796158860964443.34375 ^2 ::== 8789465455315293097342303808486584445395160184623677423080177664
t_ten increased 
breaking with xbrk of value 1

increasing the digits 11
-------------------------------------------------------
-------------------------------------------------------
times 11 87894654546 29298218182
main 296470.32658598398083291272497742756366654003228393470296096745553171558640315197408199310302734375 second 171167.2228611541152967172351127140469946814852289177401464207589620869498503452632576227188110351562
main 87894654546.0000000000000000000000132348898008484427979425390731194056570529937744140625 second 29298218182.000000000000000000000003308722450212110699485634768279851414263248443603515625
times of 1.011905654959341516289185797344771598827380472038846705500165837729789773966136267463467035554458562e-05
new times of 1.011905654959341516289185797344771598827380472038846705500165837729789773966136267463467035554458562e-05
using 292982181821921551621551621521622 * 1.011905654959341516289185797344771598827380472038846705500165837729789773966136267463467035554458562e-05
2964703265879284097850571032.942721843719482421875  with length of 49 and dot length 28 will move 21
lap for tens is more than ten will lower it 

 trying to reach the main number 87894654546576465486465486456486764295765213534217540308916240384  main number intpart lenght 65 
 fract 0 int 87894654546576465486465486456486764295765213534217540308916240384
    -----------------> 2964703265879284097850571032.942721843719482421875 ^2 ::== 8789465454715293097293475371692312779452050909140353024
 temp fract 0 temp int 8789465454715293097293475371692312779452050909140353024
before loop xstp is 0entering tens with lap of value 10
using t_rst as 29647032658792840978505710329.427219390869140625
using for fract 878946545471529309729347537169231306279403988131906584576
getting the part of 878946545471529309729347537169231306279403988131906584576 :: ad 57 and mad 65
    -----------------> 29647032658792840978505710329.427219390869140625 ^2 ::== 878946545471529309729347537169231306279403988131906584576
t_ten increased 
using t_rst as 296470326587928409785057103294.272186279296875
using for fract 87894654547152930972934753716923127605625849776617721692160
getting the part of 87894654547152930972934753716923127605625849776617721692160 :: ad 59 and mad 65
    -----------------> 296470326587928409785057103294.272186279296875 ^2 ::== 87894654547152930972934753716923127605625849776617721692160
t_ten increased 
using t_rst as 2964703265879284097850571032942.7216796875
using for fract 8789465454715293097293475371692312218963817790307901900849152
getting the part of 8789465454715293097293475371692312218963817790307901900849152 :: ad 61 and mad 65
    -----------------> 2964703265879284097850571032942.7216796875 ^2 ::== 8789465454715293097293475371692312218963817790307901900849152
t_ten increased 
using t_rst as 29647032658792840978505710329427.21875
using for fract 878946545471529309729347537169231340738625550427296580400840704
getting the part of 878946545471529309729347537169231340738625550427296580400840704 :: ad 63 and mad 65
    -----------------> 29647032658792840978505710329427.21875 ^2 ::== 878946545471529309729347537169231340738625550427296580400840704
t_ten increased 
using t_rst as 296470326587928409785057103294272.1875
using for fract 87894654547152930972934753716923128369434854015697351304919646208
getting the part of 87894654547152930972934753716923128369434854015697351304919646208 :: ad 65 and mad 65
i push_back a near value of 296470326587928409785057103294272
stopping with ad 65 and mad of 65
    -----------------> 296470326587928409785057103294272.1875 ^2 ::== 87894654547152930972934753716923128369434854015697351304919646208
t_ten increased 
breaking with xbrk of value 1

increasing the digits 12
-------------------------------------------------------
-------------------------------------------------------
times 12 878946545465 292982181821
main 937521.490668347292792889417508933962014530607032781659403164464805513489409349858760833740234375 second 541278.285007813702520819716657316246914067098663090040421529136605016674366197548806667327880859375
main 878946545465 second 292982181821
times of 3.199926646874157564241785944198523344218615856853316796112364297047603446963105918148667639044901989e-06
new times of 3.199926646874157564241785944198523344218615856853316796112364297047603446963105918148667639044901989e-06
using 292982181821921551621551621521622 * 3.199926646874157564241785944198523344218615856853316796112364297047603446963105918148667639044901989e-06
937521490671296190383162540.4012978076934814453125  with length of 49 and dot length 27 will move 22
lap for tens is more than ten will lower it 

 trying to reach the main number 87894654546576465486465486456486764295765213534217540308916240384  main number intpart lenght 65 
 fract 0 int 87894654546576465486465486456486764295765213534217540308916240384
    -----------------> 937521490671296190383162540.4012978076934814453125 ^2 ::== 878946545470529309729331006801366999554665049806077952
 temp fract 0 temp int 878946545470529309729331006801366999554665049806077952
before loop xstp is 0entering tens with lap of value 10
using t_rst as 9375214906712961903831625404.01297760009765625
using for fract 87894654547052930972933100680136695233100022110962581504
getting the part of 87894654547052930972933100680136695233100022110962581504 :: ad 56 and mad 65
    -----------------> 9375214906712961903831625404.01297760009765625 ^2 ::== 87894654547052930972933100680136695233100022110962581504
t_ten increased 
using t_rst as 93752149067129619038316254040.1297760009765625
using for fract 8789465454705293097293310068013670089993980155453683793920
getting the part of 8789465454705293097293310068013670089993980155453683793920 :: ad 58 and mad 65
    -----------------> 93752149067129619038316254040.1297760009765625 ^2 ::== 8789465454705293097293310068013670089993980155453683793920
t_ten increased 
using t_rst as 937521490671296190383162540401.2978515625
using for fract 878946545470529309729331006801367197591825875427519633555456
getting the part of 878946545470529309729331006801367197591825875427519633555456 :: ad 60 and mad 65
    -----------------> 937521490671296190383162540401.2978515625 ^2 ::== 878946545470529309729331006801367197591825875427519633555456
t_ten increased 
using t_rst as 9375214906712961903831625404012.978515625
using for fract 87894654547052930972933100680136707998752214331639351813865472
getting the part of 87894654547052930972933100680136707998752214331639351813865472 :: ad 62 and mad 65
    -----------------> 9375214906712961903831625404012.978515625 ^2 ::== 87894654547052930972933100680136707998752214331639351813865472
t_ten increased 
using t_rst as 93752149067129619038316254040129.78125
using for fract 8789465454705293097293310068013670047207677547652728042719019008
getting the part of 8789465454705293097293310068013670047207677547652728042719019008 :: ad 64 and mad 65
i push_back a near value of 93752149067129619038316254040129
stopping with ad 64 and mad of 65
    -----------------> 93752149067129619038316254040129.78125 ^2 ::== 8789465454705293097293310068013670047207677547652728042719019008
t_ten increased 
breaking with xbrk of value 1

increasing the digits 13
-------------------------------------------------------
-------------------------------------------------------
times 13 8789465454657 2929821818219
main 2964703.2658694529120512254088480664740294246765950740844959565567506842853617854416370391845703125 second 1711672.22861709128098887351665540704246439638854191466290667611449549667668179608881473541259765625
main 8789465454657.0000000000000000000008470329472543003390683225006796419620513916015625 second 2929821818219
times of 1.011905654956060393982583203824677380924143379930579309177325273040486013198626839100155438977424183e-06
new times of 1.011905654956060393982583203824677380924143379930579309177325273040486013198626839100155438977424183e-06
using 292982181821921551621551621521622 * 1.011905654956060393982583203824677380924143379930579309177325273040486013198626839100155438977424183e-06
296470326586967099412844099.6071956455707550048828125  with length of 52 and dot length 27 will move 25
lap for tens is more than ten will lower it 

 trying to reach the main number 87894654546576465486465486456486764295765213534217540308916240384  main number intpart lenght 65 
 fract 0 int 87894654546576465486465486456486764295765213534217540308916240384
    -----------------> 296470326586967099412844099.6071956455707550048828125 ^2 ::== 87894654546582930972930973388571139086894825954344960
 temp fract 0 temp int 87894654546582930972930973388571139086894825954344960
before loop xstp is 0entering tens with lap of value 10
using t_rst as 2964703265869670994128440996.071956634521484375
using for fract 8789465454658293097293097338857114831026686280912076800
getting the part of 8789465454658293097293097338857114831026686280912076800 :: ad 55 and mad 65
    -----------------> 2964703265869670994128440996.071956634521484375 ^2 ::== 8789465454658293097293097338857114831026686280912076800
t_ten increased 
using t_rst as 29647032658696709941284409960.71956634521484375
using for fract 878946545465829309729309733885711450046103248003691184128
getting the part of 878946545465829309729309733885711450046103248003691184128 :: ad 57 and mad 65
    -----------------> 29647032658696709941284409960.71956634521484375 ^2 ::== 878946545465829309729309733885711450046103248003691184128
t_ten increased 
using t_rst as 296470326586967099412844099607.195648193359375
using for fract 87894654546582930972930973388571139564444136534537832235008
getting the part of 87894654546582930972930973388571139564444136534537832235008 :: ad 59 and mad 65
    -----------------> 296470326586967099412844099607.195648193359375 ^2 ::== 87894654546582930972930973388571139564444136534537832235008
t_ten increased 
using t_rst as 2964703265869670994128440996071.95654296875
using for fract 8789465454658293097293097338857114459357554613139519901270016
getting the part of 8789465454658293097293097338857114459357554613139519901270016 :: ad 61 and mad 65
    -----------------> 2964703265869670994128440996071.95654296875 ^2 ::== 8789465454658293097293097338857114459357554613139519901270016
t_ten increased 
using t_rst as 29647032658696709941284409960719.56640625
using for fract 878946545465829309729309733885711520212157818436768484074455040
getting the part of 878946545465829309729309733885711520212157818436768484074455040 :: ad 63 and mad 65
    -----------------> 29647032658696709941284409960719.56640625 ^2 ::== 878946545465829309729309733885711520212157818436768484074455040
t_ten increased 
using t_rst as 296470326586967099412844099607195.65625
using for fract 87894654546582930972930973388571144415312180474300439427226271744
getting the part of 87894654546582930972930973388571144415312180474300439427226271744 :: ad 65 and mad 65
i push_back a near value of 296470326586967099412844099607195
stopping with ad 65 and mad of 65
    -----------------> 296470326586967099412844099607195.65625 ^2 ::== 87894654546582930972930973388571144415312180474300439427226271744
t_ten increased 
breaking with xbrk of value 1

increasing the digits 14
-------------------------------------------------------
-------------------------------------------------------
times 14 87894654546576 29298218182192
main 9375214.90668752616834825800887280262320472882957004992325600323255230250651948153972625732421875 second 5412782.85008663542635859614273087470598932454884659091175203027290763202472589910030364990234375
main 87894654546576 second 29298218182191.99999999999999999999661186821098279864372670999728143215179443359375
times of 3.199926646865492844573847725145931257086744516087911846070743704305282659900152540937302153567500795e-07
new times of 3.199926646865492844573847725145931257086744516087911846070743704305282659900152540937302153567500795e-07
using 292982181821921551621551621521622 * 3.199926646865492844573847725145931257086744516087911846070743704305282659900152540937302153567500795e-07
93752149066875758190997468.53761760890483856201171875  with length of 52 and dot length 26 will move 26
lap for tens is more than ten will lower it 

 trying to reach the main number 87894654546576465486465486456486764295765213534217540308916240384  main number intpart lenght 65 
 fract 0 int 87894654546576465486465486456486764295765213534217540308916240384
    -----------------> 93752149066875758190997468.53761760890483856201171875 ^2 ::== 8789465454657693097293097291543841227523267074457600
 temp fract 0 temp int 8789465454657693097293097291543841227523267074457600
before loop xstp is 0entering tens with lap of value 10
using t_rst as 937521490668757581909974685.3761761188507080078125
using for fract 878946545465769309729309729154384131975698744300535808
getting the part of 878946545465769309729309729154384131975698744300535808 :: ad 54 and mad 65
    -----------------> 937521490668757581909974685.3761761188507080078125 ^2 ::== 878946545465769309729309729154384131975698744300535808
t_ten increased 
using t_rst as 9375214906687575819099746853.761760711669921875
using for fract 87894654546576930972930972915438407294611770842997063680
getting the part of 87894654546576930972930972915438407294611770842997063680 :: ad 56 and mad 65
    -----------------> 9375214906687575819099746853.761760711669921875 ^2 ::== 87894654546576930972930972915438407294611770842997063680
t_ten increased 
using t_rst as 93752149066875758190997468537.61761474609375
using for fract 8789465454657693097293097291543842391734179054414821588992
getting the part of 8789465454657693097293097291543842391734179054414821588992 :: ad 58 and mad 65
    -----------------> 93752149066875758190997468537.61761474609375 ^2 ::== 8789465454657693097293097291543842391734179054414821588992
t_ten increased 
using t_rst as 937521490668757581909974685376.1761474609375
using for fract 878946545465769309729309729154384273023340854651099050672128
getting the part of 878946545465769309729309729154384273023340854651099050672128 :: ad 60 and mad 65
    -----------------> 937521490668757581909974685376.1761474609375 ^2 ::== 878946545465769309729309729154384273023340854651099050672128
t_ten increased 
using t_rst as 9375214906687575819099746853761.7607421875
using for fract 87894654546576930972930972915438413684993653325926881176846336
getting the part of 87894654546576930972930972915438413684993653325926881176846336 :: ad 62 and mad 65
    -----------------> 9375214906687575819099746853761.7607421875 ^2 ::== 87894654546576930972930972915438413684993653325926881176846336
t_ten increased 
using t_rst as 93752149066875758190997468537617.609375
using for fract 8789465454657693097293097291543841447727527846857025711228583936
getting the part of 8789465454657693097293097291543841447727527846857025711228583936 :: ad 64 and mad 65
i push_back a near value of 93752149066875758190997468537617
stopping with ad 64 and mad of 65
    -----------------> 93752149066875758190997468537617.609375 ^2 ::== 8789465454657693097293097291543841447727527846857025711228583936
t_ten increased 
breaking with xbrk of value 1

increasing the digits 15
-------------------------------------------------------
-------------------------------------------------------
times 15 878946545465764 292982181821921
main 29647032.65869560848654420719991921919208754642176446847390280936451745219528675079345703125 second 17116722.28617152624509113271089864630025120548236622873561341151571468799374997615814208984375
main 878946545465764 second 292982181821920.9999999999999999999457898913757247782996273599565029144287109375
times of 1.011905654956024704582055421262649038184313072388729451014482157865681012867569440007772113565565064e-07
new times of 1.011905654956024704582055421262649038184313072388729451014482157865681012867569440007772113565565064e-07
using 292982181821921551621551621521622 * 1.011905654956024704582055421262649038184313072388729451014482157865681012867569440007772113565565064e-07
29647032658695664305440955.3433620594441890716552734375  with length of 54 and dot length 26 will move 28
lap for tens is more than ten will lower it 

 trying to reach the main number 87894654546576465486465486456486764295765213534217540308916240384  main number intpart lenght 65 
 fract 0 int 87894654546576465486465486456486764295765213534217540308916240384
    -----------------> 29647032658695664305440955.3433620594441890716552734375 ^2 ::== 878946545465767309729309729136613753827285790621696
 temp fract 0 temp int 878946545465767309729309729136613753827285790621696
before loop xstp is 0entering tens with lap of value 10
using t_rst as 296470326586956643054409553.4336206018924713134765625
using for fract 87894654546576730972930972913661388064865129737486336
getting the part of 87894654546576730972930972913661388064865129737486336 :: ad 53 and mad 65
    -----------------> 296470326586956643054409553.4336206018924713134765625 ^2 ::== 87894654546576730972930972913661388064865129737486336
t_ten increased 
using t_rst as 2964703265869566430544095534.336205959320068359375
using for fract 8789465454657673097293097291366138511338607794395807744
getting the part of 8789465454657673097293097291366138511338607794395807744 :: ad 55 and mad 65
    -----------------> 2964703265869566430544095534.336205959320068359375 ^2 ::== 8789465454657673097293097291366138511338607794395807744
t_ten increased 
using t_rst as 29647032658695664305440955343.362060546875
using for fract 878946545465767309729309729136613836966761330830645133312
getting the part of 878946545465767309729309729136613836966761330830645133312 :: ad 57 and mad 65
    -----------------> 29647032658695664305440955343.362060546875 ^2 ::== 878946545465767309729309729136613836966761330830645133312
t_ten increased 
using t_rst as 296470326586956643054409553433.62060546875
using for fract 87894654546576730972930972913661385510064862505008275390464
getting the part of 87894654546576730972930972913661385510064862505008275390464 :: ad 59 and mad 65
    -----------------> 296470326586956643054409553433.62060546875 ^2 ::== 87894654546576730972930972913661385510064862505008275390464
t_ten increased 
using t_rst as 2964703265869566430544095534336.2060546875
using for fract 8789465454657673097293097291366139324719010803863499350999040
getting the part of 8789465454657673097293097291366139324719010803863499350999040 :: ad 61 and mad 65
    -----------------> 2964703265869566430544095534336.2060546875 ^2 ::== 8789465454657673097293097291366139324719010803863499350999040
t_ten increased 
using t_rst as 29647032658695664305440955343362.05859375
using for fract 878946545465767309729309729136613709642694009017900453257543680
getting the part of 878946545465767309729309729136613709642694009017900453257543680 :: ad 63 and mad 65
    -----------------> 29647032658695664305440955343362.05859375 ^2 ::== 878946545465767309729309729136613709642694009017900453257543680
t_ten increased 
using t_rst as 296470326586956643054409553433620.59375
using for fract 87894654546576730972930972913661384274600703298198761041138024448
getting the part of 87894654546576730972930972913661384274600703298198761041138024448 :: ad 65 and mad 65
i push_back a near value of 296470326586956643054409553433620
stopping with ad 65 and mad of 65
    -----------------> 296470326586956643054409553433620.59375 ^2 ::== 87894654546576730972930972913661384274600703298198761041138024448
t_ten increased 
breaking with xbrk of value 1

increasing the digits 16
-------------------------------------------------------
-------------------------------------------------------
times 16 8789465454657646 2929821818219215
main 93752149.06687550701119217310952513122915767011390894732081324747241524164564907550811767578125 second 54127828.500866492824474283040794206440121118209906465011671539144799680798314511775970458984375
main 8789465454657646 second 2929821818219215
times of 3.199926646865484835169112681108075371089217323164233739078763962419393842402100025905918069535349701e-08
new times of 3.199926646865484835169112681108075371089217323164233739078763962419393842402100025905918069535349701e-08
using 292982181821921551621551621521622 * 3.199926646865484835169112681108075371089217323164233739078763962419393842402100025905918069535349701e-08
9375214906687552352971003.173444666899740695953369140625  with length of 55 and dot length 25 will move 30
lap for tens is more than ten will lower it 

 trying to reach the main number 87894654546576465486465486456486764295765213534217540308916240384  main number intpart lenght 65 
 fract 0 int 87894654546576465486465486456486764295765213534217540308916240384
    -----------------> 9375214906687552352971003.173444666899740695953369140625 ^2 ::== 87894654546576490972930972912979452641434979532800
 temp fract 0 temp int 87894654546576490972930972912979452641434979532800
before loop xstp is 0entering tens with lap of value 10
using t_rst as 93752149066875523529710031.7344466745853424072265625
using for fract 8789465454657649097293097291297946200892220446343168
getting the part of 8789465454657649097293097291297946200892220446343168 :: ad 52 and mad 65
    -----------------> 93752149066875523529710031.7344466745853424072265625 ^2 ::== 8789465454657649097293097291297946200892220446343168
t_ten increased 
using t_rst as 937521490668755235297100317.344466686248779296875
using for fract 878946545465764909729309729129794504797071583949619200
getting the part of 878946545465764909729309729129794504797071583949619200 :: ad 54 and mad 65
    -----------------> 937521490668755235297100317.344466686248779296875 ^2 ::== 878946545465764909729309729129794504797071583949619200
t_ten increased 
using t_rst as 9375214906687552352971003173.44466686248779296875
using for fract 87894654546576490972930972912979449889411348036256268288
getting the part of 87894654546576490972930972912979449889411348036256268288 :: ad 56 and mad 65
    -----------------> 9375214906687552352971003173.44466686248779296875 ^2 ::== 87894654546576490972930972912979449889411348036256268288
t_ten increased 
using t_rst as 93752149066875523529710031734.4466705322265625
using for fract 8789465454657649097293097291297944875604339214754141700096
getting the part of 8789465454657649097293097291297944875604339214754141700096 :: ad 58 and mad 65
    -----------------> 93752149066875523529710031734.4466705322265625 ^2 ::== 8789465454657649097293097291297944875604339214754141700096
t_ten increased 
using t_rst as 937521490668755235297100317344.4666748046875
using for fract 878946545465764909729309729129794560095983098353164652380160
getting the part of 878946545465764909729309729129794560095983098353164652380160 :: ad 60 and mad 65
    -----------------> 937521490668755235297100317344.4666748046875 ^2 ::== 878946545465764909729309729129794560095983098353164652380160
t_ten increased 
using t_rst as 9375214906687552352971003173444.6669921875
using for fract 87894654546576490972930972912979456628568329478006602687578112
getting the part of 87894654546576490972930972912979456628568329478006602687578112 :: ad 62 and mad 65
    -----------------> 9375214906687552352971003173444.6669921875 ^2 ::== 87894654546576490972930972912979456628568329478006602687578112
t_ten increased 
using t_rst as 93752149066875523529710031734446.671875
using for fract 8789465454657649097293097291297945266716020376478972301038059520
getting the part of 8789465454657649097293097291297945266716020376478972301038059520 :: ad 64 and mad 65
i push_back a near value of 93752149066875523529710031734446
stopping with ad 64 and mad of 65
    -----------------> 93752149066875523529710031734446.671875 ^2 ::== 8789465454657649097293097291297945266716020376478972301038059520
t_ten increased 
breaking with xbrk of value 1

increasing the digits 17
-------------------------------------------------------
-------------------------------------------------------
times 17 87894654546576465 29298218182192155
main 296470326.586956194488554692235056886446225509637131083351402338621483067981898784637451171875 second 171167222.8617154231125119550343128713758026668883736008675011674995403154753148555755615234375
main 87894654546576465.00000000000000001387778780781445675529539585113525390625 second 29298218182192155
times of 1.011905654956023179148000604834751198223622016970026527648826654261781527769620601029228407555238256e-08
new times of 1.011905654956023179148000604834751198223622016970026527648826654261781527769620601029228407555238256e-08
using 292982181821921551621551621521622 * 1.011905654956023179148000604834751198223622016970026527648826654261781527769620601029228407555238256e-08
2964703265869561961294119.47855895198881626129150390625  with length of 54 and dot length 25 will move 29
lap for tens is more than ten will lower it 

 trying to reach the main number 87894654546576465486465486456486764295765213534217540308916240384  main number intpart lenght 65 
 fract 0 int 87894654546576465486465486456486764295765213534217540308916240384
    -----------------> 2964703265869561961294119.47855895198881626129150390625 ^2 ::== 8789465454657646597293097291297320217729004732416
 temp fract 0 temp int 8789465454657646597293097291297320217729004732416
before loop xstp is 0entering tens with lap of value 10
using t_rst as 29647032658695619612941194.7855895198881626129150390625
using for fract 878946545465764659729309729129732075816096001687552
getting the part of 878946545465764659729309729129732075816096001687552 :: ad 51 and mad 65
    -----------------> 29647032658695619612941194.7855895198881626129150390625 ^2 ::== 878946545465764659729309729129732075816096001687552
t_ten increased 
using t_rst as 296470326586956196129411947.8558951914310455322265625
using for fract 87894654546576465972930972912973206428688095561908224
getting the part of 87894654546576465972930972912973206428688095561908224 :: ad 53 and mad 65
    -----------------> 296470326586956196129411947.8558951914310455322265625 ^2 ::== 87894654546576465972930972912973206428688095561908224
t_ten increased 
using t_rst as 2964703265869561961294119478.558951854705810546875
using for fract 8789465454657646597293097291297319831212070312970551296
getting the part of 8789465454657646597293097291297319831212070312970551296 :: ad 55 and mad 65
    -----------------> 2964703265869561961294119478.558951854705810546875 ^2 ::== 8789465454657646597293097291297319831212070312970551296
t_ten increased 
using t_rst as 29647032658695619612941194785.589519500732421875
using for fract 878946545465764659729309729129732068123803722950668976128
getting the part of 878946545465764659729309729129732068123803722950668976128 :: ad 57 and mad 65
    -----------------> 29647032658695619612941194785.589519500732421875 ^2 ::== 878946545465764659729309729129732068123803722950668976128
t_ten increased 
using t_rst as 296470326586956196129411947855.89520263671875
using for fract 87894654546576465972930972912973208021306191909696072318976
getting the part of 87894654546576465972930972912973208021306191909696072318976 :: ad 59 and mad 65
    -----------------> 296470326586956196129411947855.89520263671875 ^2 ::== 87894654546576465972930972912973208021306191909696072318976
t_ten increased 
using t_rst as 2964703265869561961294119478558.9521484375
using for fract 8789465454657646597293097291297321807956901110341080587436032
getting the part of 8789465454657646597293097291297321807956901110341080587436032 :: ad 61 and mad 65
    -----------------> 2964703265869561961294119478558.9521484375 ^2 ::== 8789465454657646597293097291297321807956901110341080587436032
t_ten increased 
using t_rst as 29647032658695619612941194785589.51953125
using for fract 878946545465764659729309729129732066905206496779122768024174592
getting the part of 878946545465764659729309729129732066905206496779122768024174592 :: ad 63 and mad 65
    -----------------> 29647032658695619612941194785589.51953125 ^2 ::== 878946545465764659729309729129732066905206496779122768024174592
t_ten increased 
using t_rst as 296470326586956196129411947855895.1875
using for fract 87894654546576465972930972912973204789044749335568174557362651136
getting the part of 87894654546576465972930972912973204789044749335568174557362651136 :: ad 65 and mad 65
i push_back a near value of 296470326586956196129411947855895
stopping with ad 65 and mad of 65
    -----------------> 296470326586956196129411947855895.1875 ^2 ::== 87894654546576465972930972912973204789044749335568174557362651136
t_ten increased 
breaking with xbrk of value 1

increasing the digits 18
-------------------------------------------------------
-------------------------------------------------------
times 18 878946545465764654 292982181821921551
main 937521490.66875509891126155288461114149123412709924303698461045541989733465015888214111328125 second 541278285.0086649753554448597564647776033076710211315585308256004282156936824321746826171875
main 878946545465764654.00000000000000011102230246251565404236316680908203125 second 292982181821921551
times of 3.199926646865484376448659674042295965976132087104373871479329463857875597856996471695918780181466801e-09
new times of 3.199926646865484376448659674042295965976132087104373871479329463857875597856996471695918780181466801e-09
using 292982181821921551621551621521622 * 3.199926646865484376448659674042295965976132087104373871479329463857875597856996471695918780181466801e-09
937521490668755100900181.148994099698029458522796630859375  with length of 57 and dot length 24 will move 33
lap for tens is more than ten will lower it 

 trying to reach the main number 87894654546576465486465486456486764295765213534217540308916240384  main number intpart lenght 65 
 fract 0 int 87894654546576465486465486456486764295765213534217540308916240384
    -----------------> 937521490668755100900181.148994099698029458522796630859375 ^2 ::== 878946545465764657729309729129732235331129835520
 temp fract 0 temp int 878946545465764657729309729129732235331129835520
before loop xstp is 0entering tens with lap of value 10
using t_rst as 9375214906687551009001811.4899409972131252288818359375
using for fract 87894654546576465772930972912973218466563402760192
getting the part of 87894654546576465772930972912973218466563402760192 :: ad 50 and mad 65
    -----------------> 9375214906687551009001811.4899409972131252288818359375 ^2 ::== 87894654546576465772930972912973218466563402760192
t_ten increased 
using t_rst as 93752149066875510090018114.89940996468067169189453125
using for fract 8789465454657646577293097291297321270195587972595712
getting the part of 8789465454657646577293097291297321270195587972595712 :: ad 52 and mad 65
    -----------------> 93752149066875510090018114.89940996468067169189453125 ^2 ::== 8789465454657646577293097291297321270195587972595712
t_ten increased 
using t_rst as 937521490668755100900181148.99409973621368408203125
using for fract 878946545465764657729309729129732311486999534355087360
getting the part of 878946545465764657729309729129732311486999534355087360 :: ad 54 and mad 65
    -----------------> 937521490668755100900181148.99409973621368408203125 ^2 ::== 878946545465764657729309729129732311486999534355087360
t_ten increased 
using t_rst as 9375214906687551009001811489.94099712371826171875
using for fract 87894654546576465772930972912973216981600504826573094912
getting the part of 87894654546576465772930972912973216981600504826573094912 :: ad 56 and mad 65
    -----------------> 9375214906687551009001811489.94099712371826171875 ^2 ::== 87894654546576465772930972912973216981600504826573094912
t_ten increased 
using t_rst as 93752149066875510090018114899.40997314453125
using for fract 8789465454657646577293097291297321887054709797443118039040
getting the part of 8789465454657646577293097291297321887054709797443118039040 :: ad 58 and mad 65
    -----------------> 93752149066875510090018114899.40997314453125 ^2 ::== 8789465454657646577293097291297321887054709797443118039040
t_ten increased 
using t_rst as 937521490668755100900181148994.0997314453125
using for fract 878946545465764657729309729129732183869767701285795105079296
getting the part of 878946545465764657729309729129732183869767701285795105079296 :: ad 60 and mad 65
    -----------------> 937521490668755100900181148994.0997314453125 ^2 ::== 878946545465764657729309729129732183869767701285795105079296
t_ten increased 
using t_rst as 9375214906687551009001811489940.9970703125
using for fract 87894654546576465772930972912973222719766907627410472654864384
getting the part of 87894654546576465772930972912973222719766907627410472654864384 :: ad 62 and mad 65
    -----------------> 9375214906687551009001811489940.9970703125 ^2 ::== 87894654546576465772930972912973222719766907627410472654864384
t_ten increased 
using t_rst as 93752149066875510090018114899409.96875
using for fract 8789465454657646577293097291297321123168334305908152159099158528
getting the part of 8789465454657646577293097291297321123168334305908152159099158528 :: ad 64 and mad 65
i push_back a near value of 93752149066875510090018114899409
stopping with ad 64 and mad of 65
    -----------------> 93752149066875510090018114899409.96875 ^2 ::== 8789465454657646577293097291297321123168334305908152159099158528
t_ten increased 
breaking with xbrk of value 1

increasing the digits 19
-------------------------------------------------------
-------------------------------------------------------
times 19 8789465454657646548 2929821818219215516
main 2964703265.869561952980792161998754196428381213544549221960977547496440820395946502685546875 second 1711672228.6171542357989115686100451237584425034162112500002450587999192066490650177001953125
main 8789465454657646548 second 2929821818219215516
times of 1.011905654956023176384950241393679324858079324121536944965260774750684085669981866455095309651618374e-09
new times of 1.011905654956023176384950241393679324858079324121536944965260774750684085669981866455095309651618374e-09
using 292982181821921551621551621521622 * 1.011905654956023176384950241393679324858079324121536944965260774750684085669981866455095309651618374e-09
296470326586956195319887.42389107667258940637111663818359375  with length of 59 and dot length 24 will move 35
lap for tens is more than ten will lower it 

 trying to reach the main number 87894654546576465486465486456486764295765213534217540308916240384  main number intpart lenght 65 
 fract 0 int 87894654546576465486465486456486764295765213534217540308916240384
    -----------------> 296470326586956195319887.42389107667258940637111663818359375 ^2 ::== 87894654546576465492930972912973217613574307840
 temp fract 0 temp int 87894654546576465492930972912973217613574307840
before loop xstp is 0entering tens with lap of value 10
using t_rst as 2964703265869561953198874.2389107667841017246246337890625
using for fract 8789465454657646549293097291297321515066826162176
getting the part of 8789465454657646549293097291297321515066826162176 :: ad 49 and mad 65
    -----------------> 2964703265869561953198874.2389107667841017246246337890625 ^2 ::== 8789465454657646549293097291297321515066826162176
t_ten increased 
using t_rst as 29647032658695619531988742.389107666909694671630859375
using for fract 878946545465764654929309729129732106470686342512640
getting the part of 878946545465764654929309729129732106470686342512640 :: ad 51 and mad 65
    -----------------> 29647032658695619531988742.389107666909694671630859375 ^2 ::== 878946545465764654929309729129732106470686342512640
t_ten increased 
using t_rst as 296470326586956195319887423.89107668399810791015625
using for fract 87894654546576465492930972912973223329205184926580736
getting the part of 87894654546576465492930972912973223329205184926580736 :: ad 53 and mad 65
    -----------------> 296470326586956195319887423.89107668399810791015625 ^2 ::== 87894654546576465492930972912973223329205184926580736
t_ten increased 
using t_rst as 2964703265869561953198874238.9107666015625
using for fract 8789465454657646549293097291297320156204717794930982912
getting the part of 8789465454657646549293097291297320156204717794930982912 :: ad 55 and mad 65
    -----------------> 2964703265869561953198874238.9107666015625 ^2 ::== 8789465454657646549293097291297320156204717794930982912
t_ten increased 
using t_rst as 29647032658695619531988742389.107666015625
using for fract 878946545465764654929309729129732025065204745232388718592
getting the part of 878946545465764654929309729129732025065204745232388718592 :: ad 57 and mad 65
    -----------------> 29647032658695619531988742389.107666015625 ^2 ::== 878946545465764654929309729129732025065204745232388718592
t_ten increased 
using t_rst as 296470326586956195319887423891.07666015625
using for fract 87894654546576465492930972912973203110983384330553459212288
getting the part of 87894654546576465492930972912973203110983384330553459212288 :: ad 59 and mad 65
    -----------------> 296470326586956195319887423891.07666015625 ^2 ::== 87894654546576465492930972912973203110983384330553459212288
t_ten increased 
using t_rst as 2964703265869561953198874238910.7666015625
using for fract 8789465454657646549293097291297320891382731848077349780193280
getting the part of 8789465454657646549293097291297320891382731848077349780193280 :: ad 61 and mad 65
    -----------------> 2964703265869561953198874238910.7666015625 ^2 ::== 8789465454657646549293097291297320891382731848077349780193280
t_ten increased 
using t_rst as 29647032658695619531988742389107.66796875
using for fract 878946545465764654929309729129732118848834127656861575598309376
getting the part of 878946545465764654929309729129732118848834127656861575598309376 :: ad 63 and mad 65
    -----------------> 29647032658695619531988742389107.66796875 ^2 ::== 878946545465764654929309729129732118848834127656861575598309376
t_ten increased 
using t_rst as 296470326586956195319887423891076.6875
using for fract 87894654546576465492930972912973228364341215732668377016972607488
getting the part of 87894654546576465492930972912973228364341215732668377016972607488 :: ad 65 and mad 65
i push_back a near value of 296470326586956195319887423891076
stopping with ad 65 and mad of 65
    -----------------> 296470326586956195319887423891076.6875 ^2 ::== 87894654546576465492930972912973228364341215732668377016972607488
t_ten increased 
breaking with xbrk of value 1

increasing the digits 20
-------------------------------------------------------
-------------------------------------------------------
times 20 87894654546576465486 29298218182192155162
main 9375214906.6875509936991770560199720501231041990160275378940468726796098053455352783203125 second 5412782850.08664975928163198152466352562286292806302545610463994307792745530605316162109375
main 87894654546576465486 second 29298218182192155161.999999999999996447286321199499070644378662109375
times of 3.199926646865484371242546596263693120048089456407054833454340198651258966481014202947492100709628304e-10
new times of 3.199926646865484371242546596263693120048089456407054833454340198651258966481014202947492100709628304e-10
using 292982181821921551621551621521622 * 3.199926646865484371242546596263693120048089456407054833454340198651258966481014202947492100709628304e-10
93752149066875509937488.278065488542779348790645599365234375  with length of 59 and dot length 23 will move 36
lap for tens is more than ten will lower it 

 trying to reach the main number 87894654546576465486465486456486764295765213534217540308916240384  main number intpart lenght 65 
 fract 0 int 87894654546576465486465486456486764295765213534217540308916240384
    -----------------> 93752149066875509937488.278065488542779348790645599365234375 ^2 ::== 8789465454657646548693097291297320598897688576
 temp fract 0 temp int 8789465454657646548693097291297320598897688576
before loop xstp is 0entering tens with lap of value 10
using t_rst as 937521490668755099374882.780654885456897318363189697265625
using for fract 878946545465764654869309729129732139054606057472
getting the part of 878946545465764654869309729129732139054606057472 :: ad 48 and mad 65
    -----------------> 937521490668755099374882.780654885456897318363189697265625 ^2 ::== 878946545465764654869309729129732139054606057472
t_ten increased 
using t_rst as 9375214906687550993748827.80654885433614253997802734375
using for fract 87894654546576465486930972912973209964810931798016
getting the part of 87894654546576465486930972912973209964810931798016 :: ad 50 and mad 65
    -----------------> 9375214906687550993748827.80654885433614253997802734375 ^2 ::== 87894654546576465486930972912973209964810931798016
t_ten increased 
using t_rst as 93752149066875509937488278.0654885470867156982421875
using for fract 8789465454657646548693097291297321789114627597008896
getting the part of 8789465454657646548693097291297321789114627597008896 :: ad 52 and mad 65
    -----------------> 93752149066875509937488278.0654885470867156982421875 ^2 ::== 8789465454657646548693097291297321789114627597008896
t_ten increased 
using t_rst as 937521490668755099374882780.65488541126251220703125
using for fract 878946545465764654869309729129731980608963967323209728
getting the part of 878946545465764654869309729129731980608963967323209728 :: ad 54 and mad 65
    -----------------> 937521490668755099374882780.65488541126251220703125 ^2 ::== 878946545465764654869309729129731980608963967323209728
t_ten increased 
using t_rst as 9375214906687550993748827806.54885387420654296875
using for fract 87894654546576465486930972912973199241488017449732276224
getting the part of 87894654546576465486930972912973199241488017449732276224 :: ad 56 and mad 65
    -----------------> 9375214906687550993748827806.54885387420654296875 ^2 ::== 87894654546576465486930972912973199241488017449732276224
t_ten increased 
using t_rst as 93752149066875509937488278065.4885406494140625
using for fract 8789465454657646548693097291297320075264529196801874460672
getting the part of 8789465454657646548693097291297320075264529196801874460672 :: ad 58 and mad 65
    -----------------> 93752149066875509937488278065.4885406494140625 ^2 ::== 8789465454657646548693097291297320075264529196801874460672
t_ten increased 
using t_rst as 937521490668755099374882780654.8853759765625
using for fract 878946545465764654869309729129732046212079147348321036664832
getting the part of 878946545465764654869309729129732046212079147348321036664832 :: ad 60 and mad 65
    -----------------> 937521490668755099374882780654.8853759765625 ^2 ::== 878946545465764654869309729129732046212079147348321036664832
t_ten increased 
using t_rst as 9375214906687550993748827806548.8544921875
using for fract 87894654546576465486930972912973214524728229017874302859476992
getting the part of 87894654546576465486930972912973214524728229017874302859476992 :: ad 62 and mad 65
    -----------------> 9375214906687550993748827806548.8544921875 ^2 ::== 87894654546576465486930972912973214524728229017874302859476992
t_ten increased 
using t_rst as 93752149066875509937488278065488.546875
using for fract 8789465454657646548693097291297321927841797987373455847211401216
getting the part of 8789465454657646548693097291297321927841797987373455847211401216 :: ad 64 and mad 65
i push_back a near value of 93752149066875509937488278065488
stopping with ad 64 and mad of 65
    -----------------> 93752149066875509937488278065488.546875 ^2 ::== 8789465454657646548693097291297321927841797987373455847211401216
t_ten increased 
breaking with xbrk of value 1

increasing the digits 21
-------------------------------------------------------
-------------------------------------------------------
times 21 878946545465764654864 292982181821921551621
main 29647032658.695619530887287651940633328092952075184796090212557828635908663272857666015625 second 17116722286.17154235860255088849798422286901532392289215778191646677441895008087158203125
main 878946545465764654864 second 292982181821921551621.000000000000028421709430404007434844970703125
times of 1.011905654956023176349260840865898635303903176328261800693376058762070585268601837987793630338571177e-10
new times of 1.011905654956023176349260840865898635303903176328261800693376058762070585268601837987793630338571177e-10
using 292982181821921551621551621521622 * 1.011905654956023176349260840865898635303903176328261800693376058762070585268601837987793630338571177e-10
29647032658695619530943.10654565310323960147798061370849609375  with length of 61 and dot length 23 will move 38
lap for tens is more than ten will lower it 

 trying to reach the main number 87894654546576465486465486456486764295765213534217540308916240384  main number intpart lenght 65 
 fract 0 int 87894654546576465486465486456486764295765213534217540308916240384
    -----------------> 29647032658695619530943.10654565310323960147798061370849609375 ^2 ::== 878946545465764654867309729129731792132112384
 temp fract 0 temp int 878946545465764654867309729129731792132112384
before loop xstp is 0entering tens with lap of value 10
using t_rst as 296470326586956195309431.06545653103967197239398956298828125
using for fract 87894654546576465486730972912973177014187982848
getting the part of 87894654546576465486730972912973177014187982848 :: ad 47 and mad 65
    -----------------> 296470326586956195309431.06545653103967197239398956298828125 ^2 ::== 87894654546576465486730972912973177014187982848
t_ten increased 
using t_rst as 2964703265869561953094310.65456531010568141937255859375
using for fract 8789465454657646548673097291297316610703263531008
getting the part of 8789465454657646548673097291297316610703263531008 :: ad 49 and mad 65
    -----------------> 2964703265869561953094310.65456531010568141937255859375 ^2 ::== 8789465454657646548673097291297316610703263531008
t_ten increased 
using t_rst as 29647032658695619530943106.5456531047821044921875
using for fract 878946545465764654867309729129731841214311447920640
getting the part of 878946545465764654867309729129731841214311447920640 :: ad 51 and mad 65
    -----------------> 29647032658695619530943106.5456531047821044921875 ^2 ::== 878946545465764654867309729129731841214311447920640
t_ten increased 
using t_rst as 296470326586956195309431065.4565310180187225341796875
using for fract 87894654546576465486730972912973165674687071082512384
getting the part of 87894654546576465486730972912973165674687071082512384 :: ad 53 and mad 65
    -----------------> 296470326586956195309431065.4565310180187225341796875 ^2 ::== 87894654546576465486730972912973165674687071082512384
t_ten increased 
using t_rst as 2964703265869561953094310654.56531047821044921875
using for fract 8789465454657646548673097291297318043208233005015367680
getting the part of 8789465454657646548673097291297318043208233005015367680 :: ad 55 and mad 65
    -----------------> 2964703265869561953094310654.56531047821044921875 ^2 ::== 8789465454657646548673097291297318043208233005015367680
t_ten increased 
using t_rst as 29647032658695619530943106545.653102874755859375
using for fract 878946545465764654867309729129731681539294745890761211904
getting the part of 878946545465764654867309729129731681539294745890761211904 :: ad 57 and mad 65
    -----------------> 29647032658695619530943106545.653102874755859375 ^2 ::== 878946545465764654867309729129731681539294745890761211904
t_ten increased 
using t_rst as 296470326586956195309431065456.531036376953125
using for fract 87894654546576465486730972912973178429798941313424106192896
getting the part of 87894654546576465486730972912973178429798941313424106192896 :: ad 59 and mad 65
    -----------------> 296470326586956195309431065456.531036376953125 ^2 ::== 87894654546576465486730972912973178429798941313424106192896
t_ten increased 
using t_rst as 2964703265869561953094310654565.310546875
using for fract 8789465454657646548673097291297318384578661318696280887656448
getting the part of 8789465454657646548673097291297318384578661318696280887656448 :: ad 61 and mad 65
    -----------------> 2964703265869561953094310654565.310546875 ^2 ::== 8789465454657646548673097291297318384578661318696280887656448
t_ten increased 
using t_rst as 29647032658695619530943106545653.1015625
using for fract 878946545465764654867309729129731620580419217642699706519781376
getting the part of 878946545465764654867309729129731620580419217642699706519781376 :: ad 63 and mad 65
    -----------------> 29647032658695619530943106545653.1015625 ^2 ::== 878946545465764654867309729129731620580419217642699706519781376
t_ten increased 
using t_rst as 296470326586956195309431065456531.03125
using for fract 87894654546576465486730972912973169030120223019531678883845767168
getting the part of 87894654546576465486730972912973169030120223019531678883845767168 :: ad 65 and mad 65
i push_back a near value of 296470326586956195309431065456531
stopping with ad 65 and mad of 65
    -----------------> 296470326586956195309431065456531.03125 ^2 ::== 87894654546576465486730972912973169030120223019531678883845767168
t_ten increased 
breaking with xbrk of value 1

increasing the digits 22
-------------------------------------------------------
-------------------------------------------------------
times 22 8789465454657646548646 2929821818219215516215
main 93752149066.8755099372370982697927360114079227935979243824249351746402680873870849609375 second 54127828500.86649759295488070356824900411429001521879111891166758141480386257171630859375
main 8789465454657646548645.9999999999990905052982270717620849609375 second 2929821818219215516214.99999999999954525264911353588104248046875
times of 3.1999266468654843712345371915286491613391334958320202356239748188795308255728495790142023810515709e-11
new times of 3.1999266468654843712345371915286491613391334958320202356239748188795308255728495790142023810515709e-11
using 292982181821921551621551621521622 * 3.1999266468654843712345371915286491613391334958320202356239748188795308255728495790142023810515709e-11
9375214906687550993725.361677805174622335471212863922119140625  with length of 61 and dot length 22 will move 39
lap for tens is more than ten will lower it 

 trying to reach the main number 87894654546576465486465486456486764295765213534217540308916240384  main number intpart lenght 65 
 fract 0 int 87894654546576465486465486456486764295765213534217540308916240384
    -----------------> 9375214906687550993725.361677805174622335471212863922119140625 ^2 ::== 87894654546576465486490972912973214908416000
 temp fract 0 temp int 87894654546576465486490972912973214908416000
before loop xstp is 0entering tens with lap of value 10
using t_rst as 93752149066875509937253.61677805174258537590503692626953125
using for fract 8789465454657646548649097291297321525201338368
getting the part of 8789465454657646548649097291297321525201338368 :: ad 46 and mad 65
    -----------------> 93752149066875509937253.61677805174258537590503692626953125 ^2 ::== 8789465454657646548649097291297321525201338368
t_ten increased 
using t_rst as 937521490668755099372536.167780517484061419963836669921875
using for fract 878946545465764654864909729129732196500598947840
getting the part of 878946545465764654864909729129732196500598947840 :: ad 48 and mad 65
    -----------------> 937521490668755099372536.167780517484061419963836669921875 ^2 ::== 878946545465764654864909729129732196500598947840
t_ten increased 
using t_rst as 9375214906687550993725361.677805175073444843292236328125
using for fract 87894654546576465486490972912973226968409289261056
getting the part of 87894654546576465486490972912973226968409289261056 :: ad 50 and mad 65
    -----------------> 9375214906687550993725361.677805175073444843292236328125 ^2 ::== 87894654546576465486490972912973226968409289261056
t_ten increased 
using t_rst as 93752149066875509937253616.77805174887180328369140625
using for fract 8789465454657646548649097291297322660812131907141632
getting the part of 8789465454657646548649097291297322660812131907141632 :: ad 52 and mad 65
    -----------------> 93752149066875509937253616.77805174887180328369140625 ^2 ::== 8789465454657646548649097291297322660812131907141632
t_ten increased 
using t_rst as 937521490668755099372536167.78051745891571044921875
using for fract 878946545465764654864909729129732183070864859021180928
getting the part of 878946545465764654864909729129732183070864859021180928 :: ad 54 and mad 65
    -----------------> 937521490668755099372536167.78051745891571044921875 ^2 ::== 878946545465764654864909729129732183070864859021180928
t_ten increased 
using t_rst as 9375214906687550993725361677.80517482757568359375
using for fract 87894654546576465486490972912973223029452968771763306496
getting the part of 87894654546576465486490972912973223029452968771763306496 :: ad 56 and mad 65
    -----------------> 9375214906687550993725361677.80517482757568359375 ^2 ::== 87894654546576465486490972912973223029452968771763306496
t_ten increased 
using t_rst as 93752149066875509937253616778.0517425537109375
using for fract 8789465454657646548649097291297321547366659618033096458240
getting the part of 8789465454657646548649097291297321547366659618033096458240 :: ad 58 and mad 65
    -----------------> 93752149066875509937253616778.0517425537109375 ^2 ::== 8789465454657646548649097291297321547366659618033096458240
t_ten increased 
using t_rst as 937521490668755099372536167780.5174560546875
using for fract 878946545465764654864909729129732096708226620301109259927552
getting the part of 878946545465764654864909729129732096708226620301109259927552 :: ad 60 and mad 65
    -----------------> 937521490668755099372536167780.5174560546875 ^2 ::== 878946545465764654864909729129732096708226620301109259927552
t_ten increased 
using t_rst as 9375214906687550993725361677805.1748046875
using for fract 87894654546576465486490972912973218336402937027772850286624768
getting the part of 87894654546576465486490972912973218336402937027772850286624768 :: ad 62 and mad 65
    -----------------> 9375214906687550993725361677805.1748046875 ^2 ::== 87894654546576465486490972912973218336402937027772850286624768
t_ten increased 
using t_rst as 93752149066875509937253616778051.75
using for fract 8789465454657646548649097291297322586307837588288492167330004992
getting the part of 8789465454657646548649097291297322586307837588288492167330004992 :: ad 64 and mad 65
i push_back a near value of 93752149066875509937253616778051
stopping with ad 64 and mad of 65
    -----------------> 93752149066875509937253616778051.75 ^2 ::== 8789465454657646548649097291297322586307837588288492167330004992
t_ten increased 
breaking with xbrk of value 1

increasing the digits 23
-------------------------------------------------------
-------------------------------------------------------
times 23 87894654546576465486465 29298218182192155162155
main 296470326586.95619530898249963202655802671395095237993899672801489941775798797607421875 second 171167222861.71542358618617048560775362000033715526026156794614507816731929779052734375
main 87894654546576465486465 second 29298218182192155162154.99999999999636202119290828704833984375
times of 1.011905654956023176347735406811082490079336412595376467802744143983545282104795935412649351021205715e-11
new times of 1.011905654956023176347735406811082490079336412595376467802744143983545282104795935412649351021205715e-11
using 292982181821921551621551621521622 * 1.011905654956023176347735406811082490079336412595376467802744143983545282104795935412649351021205715e-11
2964703265869561953089.84140458925548955448903143405914306640625  with length of 63 and dot length 22 will move 41
lap for tens is more than ten will lower it 

 trying to reach the main number 87894654546576465486465486456486764295765213534217540308916240384  main number intpart lenght 65 
 fract 0 int 87894654546576465486465486456486764295765213534217540308916240384
    -----------------> 2964703265869561953089.84140458925548955448903143405914306640625 ^2 ::== 8789465454657646548646597291297323312218112
 temp fract 0 temp int 8789465454657646548646597291297323312218112
before loop xstp is 0entering tens with lap of value 10
using t_rst as 29647032658695619530898.414045892553986050188541412353515625
using for fract 878946545465764654864659729129732215257694208
getting the part of 878946545465764654864659729129732215257694208 :: ad 45 and mad 65
    -----------------> 29647032658695619530898.414045892553986050188541412353515625 ^2 ::== 878946545465764654864659729129732215257694208
t_ten increased 
using t_rst as 296470326586956195308984.14045892553986050188541412353515625
using for fract 87894654546576465486465972912973223175036862464
getting the part of 87894654546576465486465972912973223175036862464 :: ad 47 and mad 65
    -----------------> 296470326586956195308984.14045892553986050188541412353515625 ^2 ::== 87894654546576465486465972912973223175036862464
t_ten increased 
using t_rst as 2964703265869561953089841.404589255340397357940673828125
using for fract 8789465454657646548646597291297322598978662957056
getting the part of 8789465454657646548646597291297322598978662957056 :: ad 49 and mad 65
    -----------------> 2964703265869561953089841.404589255340397357940673828125 ^2 ::== 8789465454657646548646597291297322598978662957056
t_ten increased 
using t_rst as 29647032658695619530898414.0458925552666187286376953125
using for fract 878946545465764654864659729129732295926663314669568
getting the part of 878946545465764654864659729129732295926663314669568 :: ad 51 and mad 65
    -----------------> 29647032658695619530898414.0458925552666187286376953125 ^2 ::== 878946545465764654864659729129732295926663314669568
t_ten increased 
using t_rst as 296470326586956195308984140.458925545215606689453125
using for fract 87894654546576465486465972912973229016205579163533312
getting the part of 87894654546576465486465972912973229016205579163533312 :: ad 53 and mad 65
    -----------------> 296470326586956195308984140.458925545215606689453125 ^2 ::== 87894654546576465486465972912973229016205579163533312
t_ten increased 
using t_rst as 2964703265869561953089841404.58925533294677734375
using for fract 8789465454657646548646597291297321536561496461846511616
getting the part of 8789465454657646548646597291297321536561496461846511616 :: ad 55 and mad 65
    -----------------> 2964703265869561953089841404.58925533294677734375 ^2 ::== 8789465454657646548646597291297321536561496461846511616
t_ten increased 
using t_rst as 29647032658695619530898414045.89255523681640625
using for fract 878946545465764654864659729129732314216610063752588427264
getting the part of 878946545465764654864659729129732314216610063752588427264 :: ad 57 and mad 65
    -----------------> 29647032658695619530898414045.89255523681640625 ^2 ::== 878946545465764654864659729129732314216610063752588427264
t_ten increased 
using t_rst as 296470326586956195308984140458.925537109375
using for fract 87894654546576465486465972912973227190420637724056731254784
getting the part of 87894654546576465486465972912973227190420637724056731254784 :: ad 59 and mad 65
    -----------------> 296470326586956195308984140458.925537109375 ^2 ::== 87894654546576465486465972912973227190420637724056731254784
t_ten increased 
using t_rst as 2964703265869561953089841404589.25537109375
using for fract 8789465454657646548646597291297322564299558861733138763087872
getting the part of 8789465454657646548646597291297322564299558861733138763087872 :: ad 61 and mad 65
    -----------------> 2964703265869561953089841404589.25537109375 ^2 ::== 8789465454657646548646597291297322564299558861733138763087872
t_ten increased 
using t_rst as 29647032658695619530898414045892.5546875
using for fract 878946545465764654864659729129732325754598086154609270659743744
getting the part of 878946545465764654864659729129732325754598086154609270659743744 :: ad 63 and mad 65
    -----------------> 29647032658695619530898414045892.5546875 ^2 ::== 878946545465764654864659729129732325754598086154609270659743744
t_ten increased 
using t_rst as 296470326586956195308984140458925.5625
using for fract 87894654546576465486465972912973240181363409984837336046193606656
getting the part of 87894654546576465486465972912973240181363409984837336046193606656 :: ad 65 and mad 65
i push_back a near value of 296470326586956195308984140458925
stopping with ad 65 and mad of 65
    -----------------> 296470326586956195308984140458925.5625 ^2 ::== 87894654546576465486465972912973240181363409984837336046193606656
t_ten increased 
breaking with xbrk of value 1

increasing the digits 24
-------------------------------------------------------
-------------------------------------------------------
times 24 878946545465764654864654 292982181821921551621551
main 937521490668.7550993723997820377491354694563137350815651416269247420132160186767578125 second 541278285008.6649759295959177377118826221709391166569957931642420589923858642578125
main 878946545465764654864653.999999999883584678173065185546875 second 292982181821921551621551
times of 3.199926646865484371234078471075641512149986503033779171757775092561137596209096315509499178932994838e-12
new times of 3.199926646865484371234078471075641512149986503033779171757775092561137596209096315509499178932994838e-12
using 292982181821921551621551621521622 * 3.199926646865484371234078471075641512149986503033779171757775092561137596209096315509499178932994838e-12
937521490668755099372.401770861348950347746722400188446044921875  with length of 63 and dot length 21 will move 42
lap for tens is more than ten will lower it 

 trying to reach the main number 87894654546576465486465486456486764295765213534217540308916240384  main number intpart lenght 65 
 fract 0 int 87894654546576465486465486456486764295765213534217540308916240384
    -----------------> 937521490668755099372.401770861348950347746722400188446044921875 ^2 ::== 878946545465764654864657729129731854434304
 temp fract 0 temp int 878946545465764654864657729129731854434304
before loop xstp is 0entering tens with lap of value 10
using t_rst as 9375214906687550993724.01770861348995822481811046600341796875
using for fract 87894654546576465486465772912973195643977728
getting the part of 87894654546576465486465772912973195643977728 :: ad 44 and mad 65
    -----------------> 9375214906687550993724.01770861348995822481811046600341796875 ^2 ::== 87894654546576465486465772912973195643977728
t_ten increased 
using t_rst as 93752149066875509937240.177086134892306290566921234130859375
using for fract 8789465454657646548646577291297317983849807872
getting the part of 8789465454657646548646577291297317983849807872 :: ad 46 and mad 65
    -----------------> 93752149066875509937240.177086134892306290566921234130859375 ^2 ::== 8789465454657646548646577291297317983849807872
t_ten increased 
using t_rst as 937521490668755099372401.770861348952166736125946044921875
using for fract 878946545465764654864657729129731837967399387136
getting the part of 878946545465764654864657729129731837967399387136 :: ad 48 and mad 65
    -----------------> 937521490668755099372401.770861348952166736125946044921875 ^2 ::== 878946545465764654864657729129731837967399387136
t_ten increased 
using t_rst as 9375214906687550993724017.708613489754498004913330078125
using for fract 87894654546576465486465772912973194492789053718528
getting the part of 87894654546576465486465772912973194492789053718528 :: ad 50 and mad 65
    -----------------> 9375214906687550993724017.708613489754498004913330078125 ^2 ::== 87894654546576465486465772912973194492789053718528
t_ten increased 
using t_rst as 93752149066875509937240177.08613489568233489990234375
using for fract 8789465454657646548646577291297318944875747106357248
getting the part of 8789465454657646548646577291297318944875747106357248 :: ad 52 and mad 65
    -----------------> 93752149066875509937240177.08613489568233489990234375 ^2 ::== 8789465454657646548646577291297318944875747106357248
t_ten increased 
using t_rst as 937521490668755099372401770.86134898662567138671875
using for fract 878946545465764654864657729129731986721295079183482880
getting the part of 878946545465764654864657729129731986721295079183482880 :: ad 54 and mad 65
    -----------------> 937521490668755099372401770.86134898662567138671875 ^2 ::== 878946545465764654864657729129731986721295079183482880
t_ten increased 
using t_rst as 9375214906687550993724017708.6134891510009765625
using for fract 87894654546576465486465772912973176240888714287533522944
getting the part of 87894654546576465486465772912973176240888714287533522944 :: ad 56 and mad 65
    -----------------> 9375214906687550993724017708.6134891510009765625 ^2 ::== 87894654546576465486465772912973176240888714287533522944
t_ten increased 
using t_rst as 93752149066875509937240177086.1348876953125
using for fract 8789465454657646548646577291297317472973143976924705456128
getting the part of 8789465454657646548646577291297317472973143976924705456128 :: ad 58 and mad 65
    -----------------> 93752149066875509937240177086.1348876953125 ^2 ::== 8789465454657646548646577291297317472973143976924705456128
t_ten increased 
using t_rst as 937521490668755099372401770861.3489990234375
using for fract 878946545465764654864657729129731906875522586823521606828032
getting the part of 878946545465764654864657729129731906875522586823521606828032 :: ad 60 and mad 65
    -----------------> 937521490668755099372401770861.3489990234375 ^2 ::== 878946545465764654864657729129731906875522586823521606828032
t_ten increased 
using t_rst as 9375214906687550993724017708613.4892578125
using for fract 87894654546576465486465772912973177689181846185859274241998848
getting the part of 87894654546576465486465772912973177689181846185859274241998848 :: ad 62 and mad 65
    -----------------> 9375214906687550993724017708613.4892578125 ^2 ::== 87894654546576465486465772912973177689181846185859274241998848
t_ten increased 
using t_rst as 93752149066875509937240177086134.890625
using for fract 8789465454657646548646577291297317452005534561528577050024083456
getting the part of 8789465454657646548646577291297317452005534561528577050024083456 :: ad 64 and mad 65
i push_back a near value of 93752149066875509937240177086134
stopping with ad 64 and mad of 65
    -----------------> 93752149066875509937240177086134.890625 ^2 ::== 8789465454657646548646577291297317452005534561528577050024083456
t_ten increased 
breaking with xbrk of value 1

increasing the digits 25
-------------------------------------------------------
-------------------------------------------------------
times 25 8789465454657646548646548 2929821818219215516215516
main 2964703265869.56195308983309156550526558657372711014232891102437861263751983642578125 second 1711672228617.154235861866378648095915907608073613932475609544781036674976348876953125
main 8789465454657646548646548 second 2929821818219215516215516
times of 1.011905654956023176347732643760718910022277915023032219933990661881253638180039345334927770860906004e-12
new times of 1.011905654956023176347732643760718910022277915023032219933990661881253638180039345334927770860906004e-12
using 292982181821921551621551621521622 * 1.011905654956023176347732643760718910022277915023032219933990661881253638180039345334927770860906004e-12
296470326586956195308.98333093440152197217685170471668243408203125  with length of 65 and dot length 21 will move 44
lap for tens is more than ten will lower it 

 trying to reach the main number 87894654546576465486465486456486764295765213534217540308916240384  main number intpart lenght 65 
 fract 0 int 87894654546576465486465486456486764295765213534217540308916240384
    -----------------> 296470326586956195308.98333093440152197217685170471668243408203125 ^2 ::== 87894654546576465486465492912973197344768
 temp fract 0 temp int 87894654546576465486465492912973197344768
before loop xstp is 0entering tens with lap of value 10
using t_rst as 2964703265869561953089.8333093440151060349307954311370849609375
using for fract 8789465454657646548646549291297318526517248
getting the part of 8789465454657646548646549291297318526517248 :: ad 43 and mad 65
    -----------------> 2964703265869561953089.8333093440151060349307954311370849609375 ^2 ::== 8789465454657646548646549291297318526517248
t_ten increased 
using t_rst as 29647032658695619530898.3330934401528793387115001678466796875
using for fract 878946545465764654864654929129731951435972608
getting the part of 878946545465764654864654929129731951435972608 :: ad 45 and mad 65
    -----------------> 29647032658695619530898.3330934401528793387115001678466796875 ^2 ::== 878946545465764654864654929129731951435972608
t_ten increased 
using t_rst as 296470326586956195308983.33093440151424147188663482666015625
using for fract 87894654546576465486465492912973191295306563584
getting the part of 87894654546576465486465492912973191295306563584 :: ad 47 and mad 65
    -----------------> 296470326586956195308983.33093440151424147188663482666015625 ^2 ::== 87894654546576465486465492912973191295306563584
t_ten increased 
using t_rst as 2964703265869561953089833.309344015084207057952880859375
using for fract 8789465454657646548646549291297318777686935470080
getting the part of 8789465454657646548646549291297318777686935470080 :: ad 49 and mad 65
    -----------------> 2964703265869561953089833.309344015084207057952880859375 ^2 ::== 8789465454657646548646549291297318777686935470080
t_ten increased 
using t_rst as 29647032658695619530898333.093440152704715728759765625
using for fract 878946545465764654864654929129731972344285721788416
getting the part of 878946545465764654864654929129731972344285721788416 :: ad 51 and mad 65
    -----------------> 29647032658695619530898333.093440152704715728759765625 ^2 ::== 878946545465764654864654929129731972344285721788416
t_ten increased 
using t_rst as 296470326586956195308983330.93440151214599609375
using for fract 87894654546576465486465492912973185705213526110371840
getting the part of 87894654546576465486465492912973185705213526110371840 :: ad 53 and mad 65
    -----------------> 296470326586956195308983330.93440151214599609375 ^2 ::== 87894654546576465486465492912973185705213526110371840
t_ten increased 
using t_rst as 2964703265869561953089833309.3440151214599609375
using for fract 8789465454657646548646549291297318238479959284265254912
getting the part of 8789465454657646548646549291297318238479959284265254912 :: ad 55 and mad 65
    -----------------> 2964703265869561953089833309.3440151214599609375 ^2 ::== 8789465454657646548646549291297318238479959284265254912
t_ten increased 
using t_rst as 29647032658695619530898333093.440151214599609375
using for fract 878946545465764654864654929129731866349294274253332414464
getting the part of 878946545465764654864654929129731866349294274253332414464 :: ad 57 and mad 65
    -----------------> 29647032658695619530898333093.440151214599609375 ^2 ::== 878946545465764654864654929129731866349294274253332414464
t_ten increased 
using t_rst as 296470326586956195308983330934.401519775390625
using for fract 87894654546576465486465492912973190261706886269220765564928
getting the part of 87894654546576465486465492912973190261706886269220765564928 :: ad 59 and mad 65
    -----------------> 296470326586956195308983330934.401519775390625 ^2 ::== 87894654546576465486465492912973190261706886269220765564928
t_ten increased 
using t_rst as 2964703265869561953089833309344.01513671875
using for fract 8789465454657646548646549291297319374341324675935278871871488
getting the part of 8789465454657646548646549291297319374341324675935278871871488 :: ad 61 and mad 65
    -----------------> 2964703265869561953089833309344.01513671875 ^2 ::== 8789465454657646548646549291297319374341324675935278871871488
t_ten increased 
using t_rst as 29647032658695619530898333093440.15234375
using for fract 878946545465764654864654929129731927530612153310485687994155008
getting the part of 878946545465764654864654929129731927530612153310485687994155008 :: ad 63 and mad 65
    -----------------> 29647032658695619530898333093440.15234375 ^2 ::== 878946545465764654864654929129731927530612153310485687994155008
t_ten increased 
using t_rst as 296470326586956195308983330934401.53125
using for fract 87894654546576465486465492912973202260440717042769080024689541120
getting the part of 87894654546576465486465492912973202260440717042769080024689541120 :: ad 65 and mad 65
i push_back a near value of 296470326586956195308983330934401
stopping with ad 65 and mad of 65
    -----------------> 296470326586956195308983330934401.53125 ^2 ::== 87894654546576465486465492912973202260440717042769080024689541120
t_ten increased 
breaking with xbrk of value 1

increasing the digits 26
-------------------------------------------------------
-------------------------------------------------------
times 26 87894654546576465486465486 29298218182192155162155162
main 9375214906687.550993724002406939018413093399340052513935006572864949703216552734375 second 5412782850086.6497592959649045605024345636895055644544072492863051593303680419921875
main 87894654546576465486465485.99999998509883880615234375 second 29298218182192155162155161.9999999962747097015380859375
times of 3.199926646865484371234073264962564242102433191278221169206956212641690349999443667724010048168269051e-13
new times of 3.199926646865484371234073264962564242102433191278221169206956212641690349999443667724010048168269051e-13
using 292982181821921551621551621521622 * 3.199926646865484371234073264962564242102433191278221169206956212641690349999443667724010048168269051e-13
93752149066875509937.2400245562980813929243595339357852935791015625  with length of 66 and dot length 20 will move 46
lap for tens is more than ten will lower it 

 trying to reach the main number 87894654546576465486465486456486764295765213534217540308916240384  main number intpart lenght 65 
 fract 0 int 87894654546576465486465486456486764295765213534217540308916240384
    -----------------> 93752149066875509937.2400245562980813929243595339357852935791015625 ^2 ::== 8789465454657646548646548691297322926080
 temp fract 0 temp int 8789465454657646548646548691297322926080
before loop xstp is 0entering tens with lap of value 10
using t_rst as 937521490668755099372.4002455629807855075341649353504180908203125
using for fract 878946545465764654864654869129732150001664
getting the part of 878946545465764654864654869129732150001664 :: ad 42 and mad 65
    -----------------> 937521490668755099372.4002455629807855075341649353504180908203125 ^2 ::== 878946545465764654864654869129732150001664
t_ten increased 
using t_rst as 9375214906687550993724.0024556298085371963679790496826171875
using for fract 87894654546576465486465486912973234327519232
getting the part of 87894654546576465486465486912973234327519232 :: ad 44 and mad 65
    -----------------> 9375214906687550993724.0024556298085371963679790496826171875 ^2 ::== 87894654546576465486465486912973234327519232
t_ten increased 
using t_rst as 93752149066875509937240.024556298085371963679790496826171875
using for fract 8789465454657646548646548691297323157874016256
getting the part of 8789465454657646548646548691297323157874016256 :: ad 46 and mad 65
    -----------------> 93752149066875509937240.024556298085371963679790496826171875 ^2 ::== 8789465454657646548646548691297323157874016256
t_ten increased 
using t_rst as 937521490668755099372400.245562980766408145427703857421875
using for fract 878946545465764654864654869129732223428424892416
getting the part of 878946545465764654864654869129732223428424892416 :: ad 48 and mad 65
    -----------------> 937521490668755099372400.245562980766408145427703857421875 ^2 ::== 878946545465764654864654869129732223428424892416
t_ten increased 
using t_rst as 9375214906687550993724002.455629807896912097930908203125
using for fract 87894654546576465486465486912973224031692349505536
getting the part of 87894654546576465486465486912973224031692349505536 :: ad 50 and mad 65
    -----------------> 9375214906687550993724002.455629807896912097930908203125 ^2 ::== 87894654546576465486465486912973224031692349505536
t_ten increased 
using t_rst as 93752149066875509937240024.556298077106475830078125
using for fract 8789465454657646548646548691297321790679685628166144
getting the part of 8789465454657646548646548691297321790679685628166144 :: ad 52 and mad 65
    -----------------> 93752149066875509937240024.556298077106475830078125 ^2 ::== 8789465454657646548646548691297321790679685628166144
t_ten increased 
using t_rst as 937521490668755099372400245.56298077106475830078125
using for fract 878946545465764654864654869129732160621224489107062784
getting the part of 878946545465764654864654869129732160621224489107062784 :: ad 54 and mad 65
    -----------------> 937521490668755099372400245.56298077106475830078125 ^2 ::== 878946545465764654864654869129732160621224489107062784
t_ten increased 
using t_rst as 9375214906687550993724002455.6298084259033203125
using for fract 87894654546576465486465486912973226687447035367408009216
getting the part of 87894654546576465486465486912973226687447035367408009216 :: ad 56 and mad 65
    -----------------> 9375214906687550993724002455.6298084259033203125 ^2 ::== 87894654546576465486465486912973226687447035367408009216
t_ten increased 
using t_rst as 93752149066875509937240024556.2980804443359375
using for fract 8789465454657646548646548691297322328734316770126345535488
getting the part of 8789465454657646548646548691297322328734316770126345535488 :: ad 58 and mad 65
    -----------------> 93752149066875509937240024556.2980804443359375 ^2 ::== 8789465454657646548646548691297322328734316770126345535488
t_ten increased 
using t_rst as 937521490668755099372400245562.9808349609375
using for fract 878946545465764654864654869129732329587497246182968530042880
getting the part of 878946545465764654864654869129732329587497246182968530042880 :: ad 60 and mad 65
    -----------------> 937521490668755099372400245562.9808349609375 ^2 ::== 878946545465764654864654869129732329587497246182968530042880
t_ten increased 
using t_rst as 9375214906687550993724002455629.80859375
using for fract 87894654546576465486465486912973230482869646047536303206039552
getting the part of 87894654546576465486465486912973230482869646047536303206039552 :: ad 62 and mad 65
    -----------------> 9375214906687550993724002455629.80859375 ^2 ::== 87894654546576465486465486912973230482869646047536303206039552
t_ten increased 
using t_rst as 93752149066875509937240024556298.078125
using for fract 8789465454657646548646548691297321661794120605127722433584824320
getting the part of 8789465454657646548646548691297321661794120605127722433584824320 :: ad 64 and mad 65
i push_back a near value of 93752149066875509937240024556298
stopping with ad 64 and mad of 65
    -----------------> 93752149066875509937240024556298.078125 ^2 ::== 8789465454657646548646548691297321661794120605127722433584824320
t_ten increased 
breaking with xbrk of value 1

increasing the digits 27
-------------------------------------------------------
-------------------------------------------------------
times 27 878946545465764654864654864 292982181821921551621551621
main 29647032658695.61953089833199502108629385700722114194149980903603136539459228515625 second 17116722286171.5423586186643999161612994357184458493748024920932948589324951171875
main 878946545465764654864654864.00000011920928955078125 second 292982181821921551621551621
times of 1.011905654956023176347732608071318466203087554307517478366845323448445613524541536510279690791920548e-13
new times of 1.011905654956023176347732608071318466203087554307517478366845323448445613524541536510279690791920548e-13
using 292982181821921551621551621521622 * 1.011905654956023176347732608071318466203087554307517478366845323448445613524541536510279690791920548e-13
29647032658695619530.898332047804313305050527560524642467498779296875  with length of 68 and dot length 20 will move 48
lap for tens is more than ten will lower it 

 trying to reach the main number 87894654546576465486465486456486764295765213534217540308916240384  main number intpart lenght 65 
 fract 0 int 87894654546576465486465486456486764295765213534217540308916240384
    -----------------> 29647032658695619530.898332047804313305050527560524642467498779296875 ^2 ::== 878946545465764654864654867129732169728
 temp fract 0 temp int 878946545465764654864654867129732169728
before loop xstp is 0entering tens with lap of value 10
using t_rst as 296470326586956195308.98332047804314015593263320624828338623046875
using for fract 87894654546576465486465486712973224312832
getting the part of 87894654546576465486465486712973224312832 :: ad 41 and mad 65
    -----------------> 296470326586956195308.98332047804314015593263320624828338623046875 ^2 ::== 87894654546576465486465486712973224312832
t_ten increased 
using t_rst as 2964703265869561953089.8332047804315152461640536785125732421875
using for fract 8789465454657646548646548671297323102371840
getting the part of 8789465454657646548646548671297323102371840 :: ad 43 and mad 65
    -----------------> 2964703265869561953089.8332047804315152461640536785125732421875 ^2 ::== 8789465454657646548646548671297323102371840
t_ten increased 
using t_rst as 29647032658695619530898.33204780431333347223699092864990234375
using for fract 878946545465764654864654867129732237222739968
getting the part of 878946545465764654864654867129732237222739968 :: ad 45 and mad 65
    -----------------> 29647032658695619530898.33204780431333347223699092864990234375 ^2 ::== 878946545465764654864654867129732237222739968
t_ten increased 
using t_rst as 296470326586956195308983.32047804314061067998409271240234375
using for fract 87894654546576465486465486712973225371541438464
getting the part of 87894654546576465486465486712973225371541438464 :: ad 47 and mad 65
    -----------------> 296470326586956195308983.32047804314061067998409271240234375 ^2 ::== 87894654546576465486465486712973225371541438464
t_ten increased 
using t_rst as 2964703265869561953089833.20478043146431446075439453125
using for fract 8789465454657646548646548671297322396416655491072
getting the part of 8789465454657646548646548671297322396416655491072 :: ad 49 and mad 65
    -----------------> 2964703265869561953089833.20478043146431446075439453125 ^2 ::== 8789465454657646548646548671297322396416655491072
t_ten increased 
using t_rst as 29647032658695619530898332.0478043146431446075439453125
using for fract 878946545465764654864654867129732266663263313330176
getting the part of 878946545465764654864654867129732266663263313330176 :: ad 51 and mad 65
    -----------------> 29647032658695619530898332.0478043146431446075439453125 ^2 ::== 878946545465764654864654867129732266663263313330176
t_ten increased 
using t_rst as 296470326586956195308983320.478043138980865478515625
using for fract 87894654546576465486465486712973222054640312905629696
getting the part of 87894654546576465486465486712973222054640312905629696 :: ad 53 and mad 65
    -----------------> 296470326586956195308983320.478043138980865478515625 ^2 ::== 87894654546576465486465486712973222054640312905629696
t_ten increased 
using t_rst as 2964703265869561953089833204.780431270599365234375
using for fract 8789465454657646548646548671297322131677054995724763136
getting the part of 8789465454657646548646548671297322131677054995724763136 :: ad 55 and mad 65
    -----------------> 2964703265869561953089833204.780431270599365234375 ^2 ::== 8789465454657646548646548671297322131677054995724763136
t_ten increased 
using t_rst as 29647032658695619530898332047.80431365966796875
using for fract 878946545465764654864654867129732293447935708356444946432
getting the part of 878946545465764654864654867129732293447935708356444946432 :: ad 57 and mad 65
    -----------------> 29647032658695619530898332047.80431365966796875 ^2 ::== 878946545465764654864654867129732293447935708356444946432
t_ten increased 
using t_rst as 296470326586956195308983320478.043121337890625
using for fract 87894654546576465486465486712973216651072464882038160228352
getting the part of 87894654546576465486465486712973216651072464882038160228352 :: ad 59 and mad 65
    -----------------> 296470326586956195308983320478.043121337890625 ^2 ::== 87894654546576465486465486712973216651072464882038160228352
t_ten increased 
using t_rst as 2964703265869561953089833204780.43115234375
using for fract 8789465454657646548646548671297321239565357983854346526261248
getting the part of 8789465454657646548646548671297321239565357983854346526261248 :: ad 61 and mad 65
    -----------------> 2964703265869561953089833204780.43115234375 ^2 ::== 8789465454657646548646548671297321239565357983854346526261248
t_ten increased 
using t_rst as 29647032658695619530898332047804.3125
using for fract 878946545465764654864654867129732084342454541253265855854149632
getting the part of 878946545465764654864654867129732084342454541253265855854149632 :: ad 63 and mad 65
    -----------------> 29647032658695619530898332047804.3125 ^2 ::== 878946545465764654864654867129732084342454541253265855854149632
t_ten increased 
using t_rst as 296470326586956195308983320478043.125
using for fract 87894654546576465486465486712973217941624955837047096810689003520
getting the part of 87894654546576465486465486712973217941624955837047096810689003520 :: ad 65 and mad 65
i push_back a near value of 296470326586956195308983320478043
stopping with ad 65 and mad of 65
    -----------------> 296470326586956195308983320478043.125 ^2 ::== 87894654546576465486465486712973217941624955837047096810689003520
t_ten increased 
breaking with xbrk of value 1

increasing the digits 28
-------------------------------------------------------
-------------------------------------------------------
times 28 8789465454657646548646548645 2929821818219215516215516215
main 93752149066875.509937240024309384694533968385155020541787962429225444793701171875 second 54127828500866.49759295964918416591460555153947353801413555629551410675048828125
main 8789465454657646548646548645.00000095367431640625 second 2929821818219215516215516215
times of 3.199926646865484371234073256771127698888058575035448559894121887722019035149623153481595582167404602e-14
new times of 3.199926646865484371234073256771127698888058575035448559894121887722019035149623153481595582167404602e-14
using 292982181821921551621551621521622 * 3.199926646865484371234073256771127698888058575035448559894121887722019035149623153481595582167404602e-14
9375214906687550993.7240024316303586005005854531191289424896240234375  with length of 68 and dot length 19 will move 49
lap for tens is more than ten will lower it 

 trying to reach the main number 87894654546576465486465486456486764295765213534217540308916240384  main number intpart lenght 65 
 fract 0 int 87894654546576465486465486456486764295765213534217540308916240384
    -----------------> 9375214906687550993.7240024316303586005005854531191289424896240234375 ^2 ::== 87894654546576465486465486462973231104
 temp fract 0 temp int 87894654546576465486465486462973231104
before loop xstp is 0entering tens with lap of value 10
using t_rst as 93752149066875509937.240024316303589557719533331692218780517578125
using for fract 8789465454657646548646548646297324224512
getting the part of 8789465454657646548646548646297324224512 :: ad 40 and mad 65
    -----------------> 93752149066875509937.240024316303589557719533331692218780517578125 ^2 ::== 8789465454657646548646548646297324224512
t_ten increased 
using t_rst as 937521490668755099372.400243163035838733776472508907318115234375
using for fract 878946545465764654864654864629732242096128
getting the part of 878946545465764654864654864629732242096128 :: ad 42 and mad 65
    -----------------> 937521490668755099372.400243163035838733776472508907318115234375 ^2 ::== 878946545465764654864654864629732242096128
t_ten increased 
using t_rst as 9375214906687550993724.002431630358842085115611553192138671875
using for fract 87894654546576465486465486462973232799547392
getting the part of 87894654546576465486465486462973232799547392 :: ad 44 and mad 65
    -----------------> 9375214906687550993724.002431630358842085115611553192138671875 ^2 ::== 87894654546576465486465486462973232799547392
t_ten increased 
using t_rst as 93752149066875509937240.024316303592058829963207244873046875
using for fract 8789465454657646548646548646297323795350814720
getting the part of 8789465454657646548646548646297323795350814720 :: ad 46 and mad 65
    -----------------> 93752149066875509937240.024316303592058829963207244873046875 ^2 ::== 8789465454657646548646548646297323795350814720
t_ten increased 
using t_rst as 937521490668755099372400.243163035833276808261871337890625
using for fract 878946545465764654864654864629732238797593116672
getting the part of 878946545465764654864654864629732238797593116672 :: ad 48 and mad 65
    -----------------> 937521490668755099372400.243163035833276808261871337890625 ^2 ::== 878946545465764654864654864629732238797593116672
t_ten increased 
using t_rst as 9375214906687550993724002.431630359031260013580322265625
using for fract 87894654546576465486465486462973243020057727991808
getting the part of 87894654546576465486465486462973243020057727991808 :: ad 50 and mad 65
    -----------------> 9375214906687550993724002.431630359031260013580322265625 ^2 ::== 87894654546576465486465486462973243020057727991808
t_ten increased 
using t_rst as 93752149066875509937240024.3163035809993743896484375
using for fract 8789465454657646548646548646297322032191560604450816
getting the part of 8789465454657646548646548646297322032191560604450816 :: ad 52 and mad 65
    -----------------> 93752149066875509937240024.3163035809993743896484375 ^2 ::== 8789465454657646548646548646297322032191560604450816
t_ten increased 
using t_rst as 937521490668755099372400243.163035869598388671875
using for fract 878946545465764654864654864629732323122992539557167104
getting the part of 878946545465764654864654864629732323122992539557167104 :: ad 54 and mad 65
    -----------------> 937521490668755099372400243.163035869598388671875 ^2 ::== 878946545465764654864654864629732323122992539557167104
t_ten increased 
using t_rst as 9375214906687550993724002431.63035869598388671875
using for fract 87894654546576465486465486462973229360820202162188451840
getting the part of 87894654546576465486465486462973229360820202162188451840 :: ad 56 and mad 65
    -----------------> 9375214906687550993724002431.63035869598388671875 ^2 ::== 87894654546576465486465486462973229360820202162188451840
t_ten increased 
using t_rst as 93752149066875509937240024316.3035888671875
using for fract 8789465454657646548646548646297324220565703556762343309312
getting the part of 8789465454657646548646548646297324220565703556762343309312 :: ad 58 and mad 65
    -----------------> 93752149066875509937240024316.3035888671875 ^2 ::== 8789465454657646548646548646297324220565703556762343309312
t_ten increased 
using t_rst as 937521490668755099372400243163.035888671875
using for fract 878946545465764654864654864629732393042350684925134137982976
getting the part of 878946545465764654864654864629732393042350684925134137982976 :: ad 60 and mad 65
    -----------------> 937521490668755099372400243163.035888671875 ^2 ::== 878946545465764654864654864629732393042350684925134137982976
t_ten increased 
using t_rst as 9375214906687550993724002431630.3583984375
using for fract 87894654546576465486465486462973231876594832780231764403552256
getting the part of 87894654546576465486465486462973231876594832780231764403552256 :: ad 62 and mad 65
    -----------------> 9375214906687550993724002431630.3583984375 ^2 ::== 87894654546576465486465486462973231876594832780231764403552256
t_ten increased 
using t_rst as 93752149066875509937240024316303.59375
using for fract 8789465454657646548646548646297325128749464877499447482182008832
getting the part of 8789465454657646548646548646297325128749464877499447482182008832 :: ad 64 and mad 65
i push_back a near value of 93752149066875509937240024316303
stopping with ad 64 and mad of 65
    -----------------> 93752149066875509937240024316303.59375 ^2 ::== 8789465454657646548646548646297325128749464877499447482182008832
t_ten increased 
breaking with xbrk of value 1

increasing the digits 29
-------------------------------------------------------
-------------------------------------------------------
times 29 87894654546576465486465486456 29298218182192155162155162152
main 296470326586956.1953089833200446553550418127276344648635131306946277618408203125 second 171167222861715.42358618664415105984169009067930034007076756097376346588134765625
main 87894654546576465486465486455.9999847412109375 second 29298218182192155162155162151.999996185302734375
times of 1.011905654956023176347732606597691625843706842794975178407205663846885243639060723609887654736038942e-14
new times of 1.011905654956023176347732606597691625843706842794975178407205663846885243639060723609887654736038942e-14
using 292982181821921551621551621521622 * 1.011905654956023176347732606597691625843706842794975178407205663846885243639060723609887654736038942e-14
2964703265869561953.089833200462967166544103747582994401454925537109375  with length of 70 and dot length 19 will move 51
lap for tens is more than ten will lower it 

 trying to reach the main number 87894654546576465486465486456486764295765213534217540308916240384  main number intpart lenght 65 
 fract 0 int 87894654546576465486465486456486764295765213534217540308916240384
    -----------------> 2964703265869561953.089833200462967166544103747582994401454925537109375 ^2 ::== 8789465454657646548646548645697321984
 temp fract 0 temp int 8789465454657646548646548645697321984
before loop xstp is 0entering tens with lap of value 10
using t_rst as 29647032658695619530.89833200462967255361945717595517635345458984375
using for fract 878946545465764654864654864569732169728
getting the part of 878946545465764654864654864569732169728 :: ad 39 and mad 65
    -----------------> 29647032658695619530.89833200462967255361945717595517635345458984375 ^2 ::== 878946545465764654864654864569732169728
t_ten increased 
using t_rst as 296470326586956195308.98332004629673974704928696155548095703125
using for fract 87894654546576465486465486456973225361408
getting the part of 87894654546576465486465486456973225361408 :: ad 41 and mad 65
    -----------------> 296470326586956195308.98332004629673974704928696155548095703125 ^2 ::== 87894654546576465486465486456973225361408
t_ten increased 
using t_rst as 2964703265869561953089.83320046296694272314198315143585205078125
using for fract 8789465454657646548646548645697320858419200
getting the part of 8789465454657646548646548645697320858419200 :: ad 43 and mad 65
    -----------------> 2964703265869561953089.83320046296694272314198315143585205078125 ^2 ::== 8789465454657646548646548645697320858419200
t_ten increased 
using t_rst as 29647032658695619530898.332004629672155715525150299072265625
using for fract 878946545465764654864654864569732167446298624
getting the part of 878946545465764654864654864569732167446298624 :: ad 45 and mad 65
    -----------------> 29647032658695619530898.332004629672155715525150299072265625 ^2 ::== 878946545465764654864654864569732167446298624
t_ten increased 
using t_rst as 296470326586956195308983.32004629672155715525150299072265625
using for fract 87894654546576465486465486456973220592920559616
getting the part of 87894654546576465486465486456973220592920559616 :: ad 47 and mad 65
    -----------------> 296470326586956195308983.32004629672155715525150299072265625 ^2 ::== 87894654546576465486465486456973220592920559616
t_ten increased 
using t_rst as 2964703265869561953089833.2004629671573638916015625
using for fract 8789465454657646548646548645697321883370195517440
getting the part of 8789465454657646548646548645697321883370195517440 :: ad 49 and mad 65
    -----------------> 2964703265869561953089833.2004629671573638916015625 ^2 ::== 8789465454657646548646548645697321883370195517440
t_ten increased 
using t_rst as 29647032658695619530898332.004629671573638916015625
using for fract 878946545465764654864654864569732179329820297003008
getting the part of 878946545465764654864654864569732179329820297003008 :: ad 51 and mad 65
    -----------------> 29647032658695619530898332.004629671573638916015625 ^2 ::== 878946545465764654864654864569732179329820297003008
t_ten increased 
using t_rst as 296470326586956195308983320.04629671573638916015625
using for fract 87894654546576465486465486456973218509442782003724288
getting the part of 87894654546576465486465486456973218509442782003724288 :: ad 53 and mad 65
    -----------------> 296470326586956195308983320.04629671573638916015625 ^2 ::== 87894654546576465486465486456973218509442782003724288
t_ten increased 
using t_rst as 2964703265869561953089833200.462967395782470703125
using for fract 8789465454657646548646548645697322662601017443592699904
getting the part of 8789465454657646548646548645697322662601017443592699904 :: ad 55 and mad 65
    -----------------> 2964703265869561953089833200.462967395782470703125 ^2 ::== 8789465454657646548646548645697322662601017443592699904
t_ten increased 
using t_rst as 29647032658695619530898332004.629673004150390625
using for fract 878946545465764654864654864569732285149567675837850845184
getting the part of 878946545465764654864654864569732285149567675837850845184 :: ad 57 and mad 65
    -----------------> 29647032658695619530898332004.629673004150390625 ^2 ::== 878946545465764654864654864569732285149567675837850845184
t_ten increased 
using t_rst as 296470326586956195308983320046.296722412109375
using for fract 87894654546576465486465486456973222470327669510639210987520
getting the part of 87894654546576465486465486456973222470327669510639210987520 :: ad 59 and mad 65
    -----------------> 296470326586956195308983320046.296722412109375 ^2 ::== 87894654546576465486465486456973222470327669510639210987520
t_ten increased 
using t_rst as 2964703265869561953089833200462.96728515625
using for fract 8789465454657646548646548645697322866002786593754058548314112
getting the part of 8789465454657646548646548645697322866002786593754058548314112 :: ad 61 and mad 65
    -----------------> 2964703265869561953089833200462.96728515625 ^2 ::== 8789465454657646548646548645697322866002786593754058548314112
t_ten increased 
using t_rst as 29647032658695619530898332004629.671875
using for fract 878946545465764654864654864569732138047473945129772866936504320
getting the part of 878946545465764654864654864569732138047473945129772866936504320 :: ad 63 and mad 65
    -----------------> 29647032658695619530898332004629.671875 ^2 ::== 878946545465764654864654864569732138047473945129772866936504320
t_ten increased 
using t_rst as 296470326586956195308983320046296.71875
using for fract 87894654546576465486465486456973217607699195197665491183760048128
getting the part of 87894654546576465486465486456973217607699195197665491183760048128 :: ad 65 and mad 65
i push_back a near value of 296470326586956195308983320046296
stopping with ad 65 and mad of 65
    -----------------> 296470326586956195308983320046296.71875 ^2 ::== 87894654546576465486465486456973217607699195197665491183760048128
t_ten increased 
breaking with xbrk of value 1

increasing the digits 30
-------------------------------------------------------
-------------------------------------------------------
times 30 878946545465764654864654864564 292982181821921551621551621521
main 937521490668755.09937240024312797939155805782007746529416181147098541259765625 second 541278285008664.9759295964918610576913256260400686414868687279522418975830078125
main 878946545465764654864654864563.9998779296875 second 292982181821921551621551621521.000030517578125
times of 3.19992664686548437123407325665826692898756338873466746390229807709048566487757620729439063267124139e-15
new times of 3.19992664686548437123407325665826692898756338873466746390229807709048566487757620729439063267124139e-15
using 292982181821921551621551621521622 * 3.19992664686548437123407325665826692898756338873466746390229807709048566487757620729439063267124139e-15
937521490668755099.3724002431299695548005956879933364689350128173828125  with length of 70 and dot length 18 will move 52
lap for tens is more than ten will lower it 

 trying to reach the main number 87894654546576465486465486456486764295765213534217540308916240384  main number intpart lenght 65 
 fract 0 int 87894654546576465486465486456486764295765213534217540308916240384
    -----------------> 937521490668755099.3724002431299695548005956879933364689350128173828125 ^2 ::== 878946545465764654864654864567731584
 temp fract 0 temp int 878946545465764654864654864567731584
before loop xstp is 0entering tens with lap of value 10
using t_rst as 9375214906687550993.7240024312996951039167470298707485198974609375
using for fract 87894654546576465486465486456773148672
getting the part of 87894654546576465486465486456773148672 :: ad 38 and mad 65
    -----------------> 9375214906687550993.7240024312996951039167470298707485198974609375 ^2 ::== 87894654546576465486465486456773148672
t_ten increased 
using t_rst as 93752149066875509937.240024312996951039167470298707485198974609375
using for fract 8789465454657646548646548645677314867200
getting the part of 8789465454657646548646548645677314867200 :: ad 40 and mad 65
    -----------------> 93752149066875509937.240024312996951039167470298707485198974609375 ^2 ::== 8789465454657646548646548645677314867200
t_ten increased 
using t_rst as 937521490668755099372.4002431299695672350935637950897216796875
using for fract 878946545465764654864654864567731570606080
getting the part of 878946545465764654864654864567731570606080 :: ad 42 and mad 65
    -----------------> 937521490668755099372.4002431299695672350935637950897216796875 ^2 ::== 878946545465764654864654864567731570606080
t_ten increased 
using t_rst as 9375214906687550993724.002431299695672350935637950897216796875
using for fract 87894654546576465486465486456773155449995264
getting the part of 87894654546576465486465486456773155449995264 :: ad 44 and mad 65
    -----------------> 9375214906687550993724.002431299695672350935637950897216796875 ^2 ::== 87894654546576465486465486456773155449995264
t_ten increased 
using t_rst as 93752149066875509937240.024312996960361488163471221923828125
using for fract 8789465454657646548646548645677316885029322752
getting the part of 8789465454657646548646548645677316885029322752 :: ad 46 and mad 65
    -----------------> 93752149066875509937240.024312996960361488163471221923828125 ^2 ::== 8789465454657646548646548645677316885029322752
t_ten increased 
using t_rst as 937521490668755099372400.243129969574511051177978515625
using for fract 878946545465764654864654864567731604940048564224
getting the part of 878946545465764654864654864567731604940048564224 :: ad 48 and mad 65
    -----------------> 937521490668755099372400.243129969574511051177978515625 ^2 ::== 878946545465764654864654864567731604940048564224
t_ten increased 
using t_rst as 9375214906687550993724002.43129969574511051177978515625
using for fract 87894654546576465486465486456773164434654530371584
getting the part of 87894654546576465486465486456773164434654530371584 :: ad 50 and mad 65
    -----------------> 9375214906687550993724002.43129969574511051177978515625 ^2 ::== 87894654546576465486465486456773164434654530371584
t_ten increased 
using t_rst as 93752149066875509937240024.3129969537258148193359375
using for fract 8789465454657646548646548645677315434659136506167296
getting the part of 8789465454657646548646548645677315434659136506167296 :: ad 52 and mad 65
    -----------------> 93752149066875509937240024.3129969537258148193359375 ^2 ::== 8789465454657646548646548645677315434659136506167296
t_ten increased 
using t_rst as 937521490668755099372400243.12996959686279296875
using for fract 878946545465764654864654864567731635699634019164487680
getting the part of 878946545465764654864654864567731635699634019164487680 :: ad 54 and mad 65
    -----------------> 937521490668755099372400243.12996959686279296875 ^2 ::== 878946545465764654864654864567731635699634019164487680
t_ten increased 
using t_rst as 9375214906687550993724002431.2996959686279296875
using for fract 87894654546576465486465486456773168292329884786093981696
getting the part of 87894654546576465486465486456773168292329884786093981696 :: ad 56 and mad 65
    -----------------> 9375214906687550993724002431.2996959686279296875 ^2 ::== 87894654546576465486465486456773168292329884786093981696
t_ten increased 
using t_rst as 93752149066875509937240024312.9969482421875
using for fract 8789465454657646548646548645677314524718144838222533885952
getting the part of 8789465454657646548646548645677314524718144838222533885952 :: ad 58 and mad 65
    -----------------> 93752149066875509937240024312.9969482421875 ^2 ::== 8789465454657646548646548645677314524718144838222533885952
t_ten increased 
using t_rst as 937521490668755099372400243129.9696044921875
using for fract 878946545465764654864654864567731713599791520582155125129216
getting the part of 878946545465764654864654864567731713599791520582155125129216 :: ad 60 and mad 65
    -----------------> 937521490668755099372400243129.9696044921875 ^2 ::== 878946545465764654864654864567731713599791520582155125129216
t_ten increased 
using t_rst as 9375214906687550993724002431299.6953125
using for fract 87894654546576465486465486456773152790878562777511389026058240
getting the part of 87894654546576465486465486456773152790878562777511389026058240 :: ad 62 and mad 65
    -----------------> 9375214906687550993724002431299.6953125 ^2 ::== 87894654546576465486465486456773152790878562777511389026058240
t_ten increased 
using t_rst as 93752149066875509937240024312996.953125
using for fract 8789465454657646548646548645677314684876637420768606951026196480
getting the part of 8789465454657646548646548645677314684876637420768606951026196480 :: ad 64 and mad 65
i push_back a near value of 93752149066875509937240024312996
stopping with ad 64 and mad of 65
    -----------------> 93752149066875509937240024312996.953125 ^2 ::== 8789465454657646548646548645677314684876637420768606951026196480
t_ten increased 
breaking with xbrk of value 1

increasing the digits 31
-------------------------------------------------------
-------------------------------------------------------
times 31 8789465454657646548646548645648 2929821818219215516215516215216
main 2964703265869561.9530898332004546489627794247923020520829595625400543212890625 second 1711672228617154.23586186644151527235825638317834318513632752001285552978515625
main 8789465454657646548646548645648 second 2929821818219215516215516215216
times of 1.011905654956023176347732606594928372011589765773038907937422301397580879453382838383207517888143961e-15
new times of 1.011905654956023176347732606594928372011589765773038907937422301397580879453382838383207517888143961e-15
using 292982181821921551621551621521622 * 1.011905654956023176347732606594928372011589765773038907937422301397580879453382838383207517888143961e-15
296470326586956195.30898332004548711982039321810589171946048736572265625  with length of 71 and dot length 18 will move 53
lap for tens is more than ten will lower it 

 trying to reach the main number 87894654546576465486465486456486764295765213534217540308916240384  main number intpart lenght 65 
 fract 0 int 87894654546576465486465486456486764295765213534217540308916240384
    -----------------> 296470326586956195.30898332004548711982039321810589171946048736572265625 ^2 ::== 87894654546576465486465486456493168
 temp fract 0 temp int 87894654546576465486465486456493168
before loop xstp is 0entering tens with lap of value 10
using t_rst as 2964703265869561953.0898332004548709761593272560276091098785400390625
using for fract 8789465454657646548646548645649315840
getting the part of 8789465454657646548646548645649315840 :: ad 37 and mad 65
    -----------------> 2964703265869561953.0898332004548709761593272560276091098785400390625 ^2 ::== 8789465454657646548646548645649315840
t_ten increased 
using t_rst as 29647032658695619530.89833200454871331430695136077702045440673828125
using for fract 878946545465764654864654864564931788800
getting the part of 878946545465764654864654864564931788800 :: ad 39 and mad 65
    -----------------> 29647032658695619530.89833200454871331430695136077702045440673828125 ^2 ::== 878946545465764654864654864564931788800
t_ten increased 
using t_rst as 296470326586956195308.98332004548711893221479840576648712158203125
using for fract 87894654546576465486465486456493178880000
getting the part of 87894654546576465486465486456493178880000 :: ad 41 and mad 65
    -----------------> 296470326586956195308.98332004548711893221479840576648712158203125 ^2 ::== 87894654546576465486465486456493178880000
t_ten increased 
using t_rst as 2964703265869561953089.8332004548710756353102624416351318359375
using for fract 8789465454657646548646548645649317082693632
getting the part of 8789465454657646548646548645649317082693632 :: ad 43 and mad 65
    -----------------> 2964703265869561953089.8332004548710756353102624416351318359375 ^2 ::== 8789465454657646548646548645649317082693632
t_ten increased 
using t_rst as 29647032658695619530898.3320045487125753425061702728271484375
using for fract 878946545465764654864654864564931837118382080
getting the part of 878946545465764654864654864564931837118382080 :: ad 45 and mad 65
    -----------------> 29647032658695619530898.3320045487125753425061702728271484375 ^2 ::== 878946545465764654864654864564931837118382080
t_ten increased 
using t_rst as 296470326586956195308983.32004548711120150983333587646484375
using for fract 87894654546576465486465486456493173816233558016
getting the part of 87894654546576465486465486456493173816233558016 :: ad 47 and mad 65
    -----------------> 296470326586956195308983.32004548711120150983333587646484375 ^2 ::== 87894654546576465486465486456493173816233558016
t_ten increased 
using t_rst as 2964703265869561953089833.200454871170222759246826171875
using for fract 8789465454657646548646548645649316889042146557952
getting the part of 8789465454657646548646548645649316889042146557952 :: ad 49 and mad 65
    -----------------> 2964703265869561953089833.200454871170222759246826171875 ^2 ::== 8789465454657646548646548645649316889042146557952
t_ten increased 
using t_rst as 29647032658695619530898332.00454871356487274169921875
using for fract 878946545465764654864654864564931846530201613762560
getting the part of 878946545465764654864654864564931846530201613762560 :: ad 51 and mad 65
    -----------------> 29647032658695619530898332.00454871356487274169921875 ^2 ::== 878946545465764654864654864564931846530201613762560
t_ten increased 
using t_rst as 296470326586956195308983320.045487105846405029296875
using for fract 87894654546576465486465486456493169665040601487245312
getting the part of 87894654546576465486465486456493169665040601487245312 :: ad 53 and mad 65
    -----------------> 296470326586956195308983320.045487105846405029296875 ^2 ::== 87894654546576465486465486456493169665040601487245312
t_ten increased 
using t_rst as 2964703265869561953089833200.45487117767333984375
using for fract 8789465454657646548646548645649317446119406065172873216
getting the part of 8789465454657646548646548645649317446119406065172873216 :: ad 55 and mad 65
    -----------------> 2964703265869561953089833200.45487117767333984375 ^2 ::== 8789465454657646548646548645649317446119406065172873216
t_ten increased 
using t_rst as 29647032658695619530898332004.54871368408203125
using for fract 878946545465764654864654864564931791835605435213739458560
getting the part of 878946545465764654864654864564931791835605435213739458560 :: ad 57 and mad 65
    -----------------> 29647032658695619530898332004.54871368408203125 ^2 ::== 878946545465764654864654864564931791835605435213739458560
t_ten increased 
using t_rst as 296470326586956195308983320045.48712158203125
using for fract 87894654546576465486465486456493172534468535640913484972032
getting the part of 87894654546576465486465486456493172534468535640913484972032 :: ad 59 and mad 65
    -----------------> 296470326586956195308983320045.48712158203125 ^2 ::== 87894654546576465486465486456493172534468535640913484972032
t_ten increased 
using t_rst as 2964703265869561953089833200454.87109375
using for fract 8789465454657646548646548645649316789219338832073745410031616
getting the part of 8789465454657646548646548645649316789219338832073745410031616 :: ad 61 and mad 65
    -----------------> 2964703265869561953089833200454.87109375 ^2 ::== 8789465454657646548646548645649316789219338832073745410031616
t_ten increased 
using t_rst as 29647032658695619530898332004548.7109375
using for fract 878946545465764654864654864564931703680734668914980038985646080
getting the part of 878946545465764654864654864564931703680734668914980038985646080 :: ad 63 and mad 65
    -----------------> 29647032658695619530898332004548.7109375 ^2 ::== 878946545465764654864654864564931703680734668914980038985646080
t_ten increased 
using t_rst as 296470326586956195308983320045487.125
using for fract 87894654546576465486465486456493173537199967462071507640322621440
getting the part of 87894654546576465486465486456493173537199967462071507640322621440 :: ad 65 and mad 65
i push_back a near value of 296470326586956195308983320045487
stopping with ad 65 and mad of 65
    -----------------> 296470326586956195308983320045487.125 ^2 ::== 87894654546576465486465486456493173537199967462071507640322621440
t_ten increased 
breaking with xbrk of value 1

increasing the digits 32
-------------------------------------------------------
-------------------------------------------------------
times 32 87894654546576465486465486456486 29298218182192155162155162152162
main 9375214906687550.99372400243128438009077019188453050446696579456329345703125 second 5412782850086649.759295964918616303994391980580758172436617314815521240234375
main 87894654546576465486465486456485.984375 second 29298218182192155162155162152162
times of 3.199926646865484371234073256653060982031598852267810434344455632322494515959232715961669121910511177e-16
new times of 3.199926646865484371234073256653060982031598852267810434344455632322494515959232715961669121910511177e-16
using 292982181821921551621551621521622 * 3.199926646865484371234073256653060982031598852267810434344455632322494515959232715961669121910511177e-16
93752149066875509.93724002431284443581649412635670159943401813507080078125  with length of 73 and dot length 17 will move 56
lap for tens is more than ten will lower it 

 trying to reach the main number 87894654546576465486465486456486764295765213534217540308916240384  main number intpart lenght 65 
 fract 0 int 87894654546576465486465486456486764295765213534217540308916240384
    -----------------> 93752149066875509.93724002431284443581649412635670159943401813507080078125 ^2 ::== 8789465454657646548646548645648718
 temp fract 0 temp int 8789465454657646548646548645648718
before loop xstp is 0entering tens with lap of value 10
using t_rst as 937521490668755099.3724002431284443304093656479381024837493896484375
using for fract 878946545465764654864654864564871680
getting the part of 878946545465764654864654864564871680 :: ad 36 and mad 65
    -----------------> 937521490668755099.3724002431284443304093656479381024837493896484375 ^2 ::== 878946545465764654864654864564871680
t_ten increased 
using t_rst as 9375214906687550993.724002431284443304093656479381024837493896484375
using for fract 87894654546576465486465486456487165952
getting the part of 87894654546576465486465486456487165952 :: ad 38 and mad 65
    -----------------> 9375214906687550993.724002431284443304093656479381024837493896484375 ^2 ::== 87894654546576465486465486456487165952
t_ten increased 
using t_rst as 93752149066875509937.240024312844440146363922394812107086181640625
using for fract 8789465454657646548646548645648718102528
getting the part of 8789465454657646548646548645648718102528 :: ad 40 and mad 65
    -----------------> 93752149066875509937.240024312844440146363922394812107086181640625 ^2 ::== 8789465454657646548646548645648718102528
t_ten increased 
using t_rst as 937521490668755099372.400243128444344620220363140106201171875
using for fract 878946545465764654864654864564871793475584
getting the part of 878946545465764654864654864564871793475584 :: ad 42 and mad 65
    -----------------> 937521490668755099372.400243128444344620220363140106201171875 ^2 ::== 878946545465764654864654864564871793475584
t_ten increased 
using t_rst as 9375214906687550993724.00243128444344620220363140106201171875
using for fract 87894654546576465486465486456487170757623808
getting the part of 87894654546576465486465486456487170757623808 :: ad 44 and mad 65
    -----------------> 9375214906687550993724.00243128444344620220363140106201171875 ^2 ::== 87894654546576465486465486456487170757623808
t_ten increased 
using t_rst as 93752149066875509937240.0243128444417379796504974365234375
using for fract 8789465454657646548646548645648718587590868992
getting the part of 8789465454657646548646548645648718587590868992 :: ad 46 and mad 65
    -----------------> 93752149066875509937240.0243128444417379796504974365234375 ^2 ::== 8789465454657646548646548645648718587590868992
t_ten increased 
using t_rst as 937521490668755099372400.24312844430096447467803955078125
using for fract 878946545465764654864654864564871678439179943936
getting the part of 878946545465764654864654864564871678439179943936 :: ad 48 and mad 65
    -----------------> 937521490668755099372400.24312844430096447467803955078125 ^2 ::== 878946545465764654864654864564871678439179943936
t_ten increased 
using t_rst as 9375214906687550993724002.431284443475306034088134765625
using for fract 87894654546576465486465486456487176851117249134592
getting the part of 87894654546576465486465486456487176851117249134592 :: ad 50 and mad 65
    -----------------> 9375214906687550993724002.431284443475306034088134765625 ^2 ::== 87894654546576465486465486456487176851117249134592
t_ten increased 
using t_rst as 93752149066875509937240024.31284444034099578857421875
using for fract 8789465454657646548646548645648718369658868273774592
getting the part of 8789465454657646548646548645648718369658868273774592 :: ad 52 and mad 65
    -----------------> 93752149066875509937240024.31284444034099578857421875 ^2 ::== 8789465454657646548646548645648718369658868273774592
t_ten increased 
using t_rst as 937521490668755099372400243.12844431400299072265625
using for fract 878946545465764654864654864564871652498446090281943040
getting the part of 878946545465764654864654864564871652498446090281943040 :: ad 54 and mad 65
    -----------------> 937521490668755099372400243.12844431400299072265625 ^2 ::== 878946545465764654864654864564871652498446090281943040
t_ten increased 
using t_rst as 9375214906687550993724002431.28444385528564453125
using for fract 87894654546576465486465486456487181778127299071952551936
getting the part of 87894654546576465486465486456487181778127299071952551936 :: ad 56 and mad 65
    -----------------> 9375214906687550993724002431.28444385528564453125 ^2 ::== 87894654546576465486465486456487181778127299071952551936
t_ten increased 
using t_rst as 93752149066875509937240024312.8444366455078125
using for fract 8789465454657646548646548645648717384455160785094859292672
getting the part of 8789465454657646548646548645648717384455160785094859292672 :: ad 58 and mad 65
    -----------------> 93752149066875509937240024312.8444366455078125 ^2 ::== 8789465454657646548646548645648717384455160785094859292672
t_ten increased 
using t_rst as 937521490668755099372400243128.4443359375
using for fract 878946545465764654864654864564871762624032470802069423390720
getting the part of 878946545465764654864654864564871762624032470802069423390720 :: ad 60 and mad 65
    -----------------> 937521490668755099372400243128.4443359375 ^2 ::== 878946545465764654864654864564871762624032470802069423390720
t_ten increased 
using t_rst as 9375214906687550993724002431284.443359375
using for fract 87894654546576465486465486456487168834763011367925292944326656
getting the part of 87894654546576465486465486456487168834763011367925292944326656 :: ad 62 and mad 65
    -----------------> 9375214906687550993724002431284.443359375 ^2 ::== 87894654546576465486465486456487168834763011367925292944326656
t_ten increased 
using t_rst as 93752149066875509937240024312844.4375
using for fract 8789465454657646548646548645648717754986088793700242823416119296
getting the part of 8789465454657646548646548645648717754986088793700242823416119296 :: ad 64 and mad 65
i push_back a near value of 93752149066875509937240024312844
stopping with ad 64 and mad of 65
    -----------------> 93752149066875509937240024312844.4375 ^2 ::== 8789465454657646548646548645648717754986088793700242823416119296
t_ten increased 
breaking with xbrk of value 1

increasing the digits 33
-------------------------------------------------------
-------------------------------------------------------
times 33 878946545465764654864654864564867 292982181821921551621551621521622
main 29647032658695619.530898332004547619800138846812842530198395252227783203125 second 17116722286171542.35861866441515336499656907420785501017235219478607177734375
main 878946545465764654864654864564867 second 292982181821921551621551621521621.96875
times of 1.011905654956023176347732606594891102980472240196949124296924341134262680348086653584163136631753276e-16
new times of 1.011905654956023176347732606594891102980472240196949124296924341134262680348086653584163136631753276e-16
using 292982181821921551621551621521622 * 1.011905654956023176347732606594891102980472240196949124296924341134262680348086653584163136631753276e-16
29647032658695619.5308983320045476232695857987664567190222442150115966796875  with length of 75 and dot length 17 will move 58
lap for tens is more than ten will lower it 

 trying to reach the main number 87894654546576465486465486456486764295765213534217540308916240384  main number intpart lenght 65 
 fract 0 int 87894654546576465486465486456486764295765213534217540308916240384
    -----------------> 29647032658695619.5308983320045476232695857987664567190222442150115966796875 ^2 ::== 878946545465764654864654864564867.25
 temp fract 0.25 temp int 878946545465764654864654864564867
before loop xstp is 0entering tens with lap of value 10
using t_rst as 296470326586956195.30898332004547623963475189157179556787014007568359375
using for fract 87894654546576465486465486456486720
getting the part of 87894654546576465486465486456486720 :: ad 35 and mad 65
    -----------------> 296470326586956195.30898332004547623963475189157179556787014007568359375 ^2 ::== 87894654546576465486465486456486720
t_ten increased 
using t_rst as 2964703265869561953.089833200454762174302913990686647593975067138671875
using for fract 8789465454657646548646548645648670720
getting the part of 8789465454657646548646548645648670720 :: ad 37 and mad 65
    -----------------> 2964703265869561953.089833200454762174302913990686647593975067138671875 ^2 ::== 8789465454657646548646548645648670720
t_ten increased 
using t_rst as 29647032658695619530.898332004547622631207559606991708278656005859375
using for fract 878946545465764654864654864564867170304
getting the part of 878946545465764654864654864564867170304 :: ad 39 and mad 65
    -----------------> 29647032658695619530.898332004547622631207559606991708278656005859375 ^2 ::== 878946545465764654864654864564867170304
t_ten increased 
using t_rst as 296470326586956195308.98332004547620499579352326691150665283203125
using for fract 87894654546576465486465486456486702874624
getting the part of 87894654546576465486465486456486702874624 :: ad 41 and mad 65
    -----------------> 296470326586956195308.98332004547620499579352326691150665283203125 ^2 ::== 87894654546576465486465486456486702874624
t_ten increased 
using t_rst as 2964703265869561953089.83320045476239101844839751720428466796875
using for fract 8789465454657646548646548645648672837599232
getting the part of 8789465454657646548646548645648672837599232 :: ad 43 and mad 65
    -----------------> 2964703265869561953089.83320045476239101844839751720428466796875 ^2 ::== 8789465454657646548646548645648672837599232
t_ten increased 
using t_rst as 29647032658695619530898.33200454762481967918574810028076171875
using for fract 878946545465764654864654864564867240810250240
getting the part of 878946545465764654864654864564867240810250240 :: ad 45 and mad 65
    -----------------> 29647032658695619530898.33200454762481967918574810028076171875 ^2 ::== 878946545465764654864654864564867240810250240
t_ten increased 
using t_rst as 296470326586956195308983.32004547622636891901493072509765625
using for fract 87894654546576465486465486456486717483955257344
getting the part of 87894654546576465486465486456486717483955257344 :: ad 47 and mad 65
    -----------------> 296470326586956195308983.32004547622636891901493072509765625 ^2 ::== 87894654546576465486465486456486717483955257344
t_ten increased 
using t_rst as 2964703265869561953089833.20045476220548152923583984375
using for fract 8789465454657646548646548645648671748395525734400
getting the part of 8789465454657646548646548645648671748395525734400 :: ad 49 and mad 65
    -----------------> 2964703265869561953089833.20045476220548152923583984375 ^2 ::== 8789465454657646548646548645648671748395525734400
t_ten increased 
using t_rst as 29647032658695619530898332.0045476220548152923583984375
using for fract 878946545465764654864654864564867138810755554476032
getting the part of 878946545465764654864654864564867138810755554476032 :: ad 51 and mad 65
    -----------------> 29647032658695619530898332.0045476220548152923583984375 ^2 ::== 878946545465764654864654864564867138810755554476032
t_ten increased 
using t_rst as 296470326586956195308983320.0454762279987335205078125
using for fract 87894654546576465486465486456486713304614803144179712
getting the part of 87894654546576465486465486456486713304614803144179712 :: ad 53 and mad 65
    -----------------> 296470326586956195308983320.0454762279987335205078125 ^2 ::== 87894654546576465486465486456486713304614803144179712
t_ten increased 
using t_rst as 2964703265869561953089833200.45476245880126953125
using for fract 8789465454657646548646548645648672843094494358601203712
getting the part of 8789465454657646548646548645648672843094494358601203712 :: ad 55 and mad 65
    -----------------> 2964703265869561953089833200.45476245880126953125 ^2 ::== 8789465454657646548646548645648672843094494358601203712
t_ten increased 
using t_rst as 29647032658695619530898332004.5476226806640625
using for fract 878946545465764654864654864564867114304256052552892678144
getting the part of 878946545465764654864654864564867114304256052552892678144 :: ad 57 and mad 65
    -----------------> 29647032658695619530898332004.5476226806640625 ^2 ::== 878946545465764654864654864564867114304256052552892678144
t_ten increased 
using t_rst as 296470326586956195308983320045.476226806640625
using for fract 87894654546576465486465486456486712034888515062603855167488
getting the part of 87894654546576465486465486456486712034888515062603855167488 :: ad 59 and mad 65
    -----------------> 296470326586956195308983320045.476226806640625 ^2 ::== 87894654546576465486465486456486712034888515062603855167488
t_ten increased 
using t_rst as 2964703265869561953089833200454.76220703125
using for fract 8789465454657646548646548645648671822458871148950522966310912
getting the part of 8789465454657646548646548645648671822458871148950522966310912 :: ad 61 and mad 65
    -----------------> 2964703265869561953089833200454.76220703125 ^2 ::== 8789465454657646548646548645648671822458871148950522966310912
t_ten increased 
using t_rst as 29647032658695619530898332004547.625
using for fract 878946545465764654864654864564867370412773086272854081297973248
getting the part of 878946545465764654864654864564867370412773086272854081297973248 :: ad 63 and mad 65
    -----------------> 29647032658695619530898332004547.625 ^2 ::== 878946545465764654864654864564867370412773086272854081297973248
t_ten increased 
using t_rst as 296470326586956195308983320045476.21875
using for fract 87894654546576465486465486456486713589741204405041480440788025344
getting the part of 87894654546576465486465486456486713589741204405041480440788025344 :: ad 65 and mad 65
i push_back a near value of 296470326586956195308983320045476
stopping with ad 65 and mad of 65
    -----------------> 296470326586956195308983320045476.21875 ^2 ::== 87894654546576465486465486456486713589741204405041480440788025344
t_ten increased 
breaking with xbrk of value 1

increasing the digits 34


u enter as approximation 292982181821921551621551621521622 with main number to find the power 87894654546576465486465486456486764295765213534217540308916240384 with psifia 65
as of the entered 
will count the digit from 85838558865133499285527598374961649911555908005643347326924750848
with string of it 85838558865133499285527598374961649911555908005643347326924750848
292982181821921551621551621521622 ^2 ::== 85838558865133499285527598374961649911555908005643347326924750848               me idia psifia 1               me diafora 2056095681442966200937888081525114384209305528574192981991489536

will count the digit from 8789465454657646548646548645648635357697073958789145537707769856
with string of it 8789465454657646548646548645648635357697073958789145537707769856
93752149066875509937240024312844 ^2 ::== 8789465454657646548646548645648635357697073958789145537707769856            me idia psifia 32            me diafora 79105189091918818937818937810838131473369340031887197764614881280

will count the digit from 8789465454657646548646548645677135946142005240422995915874238464
with string of it 8789465454657646548646548645677135946142005240422995915874238464
93752149066875509937240024312996 ^2 ::== 8789465454657646548646548645677135946142005240422995915874238464            me idia psifia 29            me diafora 79105189091918818937818937810809624546671407609106339902932385792

will count the digit from 8789465454657646548646548646297213575496644793312115772299935744
with string of it 8789465454657646548646548646297213575496644793312115772299935744
93752149066875509937240024316303 ^2 ::== 8789465454657646548646548646297213575496644793312115772299935744            me idia psifia 27            me diafora 79105189091918818937818937810189550720268568740905424536616304640

will count the digit from 8789465454657646548646548691297307717637518094604305969849565184
with string of it 8789465454657646548646548691297307717637518094604305969849565184
93752149066875509937240024556298 ^2 ::== 8789465454657646548646548691297307717637518094604305969849565184            me idia psifia 26            me diafora 79105189091918818937818937765189455310477095211383832842363469824

will count the digit from 8789465454657646548646577291297151389776904663476980981904179200
with string of it 8789465454657646548646577291297151389776904663476980981904179200
93752149066875509937240177086134 ^2 ::== 8789465454657646548646577291297151389776904663476980981904179200            me idia psifia 23            me diafora 79105189091918818937818909165189609103036508186052354836902445056

will count the digit from 8789465454657646548649097291297181877091212254824926033274208256
with string of it 8789465454657646548649097291297181877091212254824926033274208256
93752149066875509937253616778051 ^2 ::== 8789465454657646548649097291297181877091212254824926033274208256            me idia psifia 21            me diafora 79105189091918818937816389165189584953975201735851417269048442880

will count the digit from 8789465454657646548693097291297219248143179500791934614251765760
with string of it 8789465454657646548693097291297219248143179500791934614251765760
93752149066875509937488278065488 ^2 ::== 8789465454657646548693097291297219248143179500791934614251765760            me idia psifia 20            me diafora 79105189091918818937772389165189550118224434946343211681477296128

will count the digit from 8789465454657646577293097291297139849132501669103738130540789760
with string of it 8789465454657646577293097291297139849132501669103738130540789760
93752149066875510090018114899409 ^2 ::== 8789465454657646577293097291297139849132501669103738130540789760            me idia psifia 17            me diafora 79105189091918818909172389165189623178982111636884400681672245248

will count the digit from 8789465454657649097293097291297819769306597781768224127420727296
with string of it 8789465454657649097293097291297819769306597781768224127420727296
93752149066875523529710031734446 ^2 ::== 8789465454657649097293097291297819769306597781768224127420727296            me idia psifia 15            me diafora 79105189091918816389172389165188940723506815067761111691385896960

will count the digit from 8789465454657693097293097291543727359173507306210891007940100096
with string of it 8789465454657693097293097291543727359173507306210891007940100096
93752149066875758190997468537617 ^2 ::== 8789465454657693097293097291543727359173507306210891007940100096            me idia psifia 14            me diafora 79105189091918772389172389164943034401290505771547846307569729536

will count the digit from 8789465454705293097293310068013524267388651301271555921850400768
with string of it 8789465454705293097293310068013524267388651301271555921850400768
93752149067129619038316254040129 ^2 ::== 8789465454705293097293310068013524267388651301271555921850400768            me idia psifia 10            me diafora 79105189091871172389172176388473242563677762689404787380472250368

will count the digit from 8789465455315293097342303808486519795214548544924201091216703488
with string of it 8789465455315293097342303808486519795214548544924201091216703488
93752149070382877796158860964443 ^2 ::== 8789465455315293097342303808486519795214548544924201091216703488            me idia psifia 9            me diafora 79105189091261172389123182648000243232900064761063937720996331520

will count the digit from 8789465509315293437183885897937006460112631008001296995171958784
with string of it 8789465509315293437183885897937006460112631008001296995171958784
93752149358376277373387620767657 ^2 ::== 8789465509315293437183885897937006460112631008001296995171958784            me idia psifia 7            me diafora 79105189037261172049281600558549754032700781841528038823634665472

will count the digit from 8789470909318678207418298568679429737998710933600013574270353408
with string of it 8789470909318678207418298568679429737998710933600013574270353408
93752178157729637931929751469570 ^2 ::== 8789470909318678207418298568679429737998710933600013574270353408            me idia psifia 5            me diafora 79105183637257787279047187887807339628368903513535132721458708480

will count the digit from 8793932723548684814777106929755063903767916996227775965691904000
with string of it 8793932723548684814777106929755063903767916996227775965691904000
93775970928317691371272250326317 ^2 ::== 8793932723548684814777106929755063903767916996227775965691904000            me idia psifia 2            me diafora 79100721823027780671688379526731699124346696309760362846521131008

will count the digit from 87894654546576465486465486456486581754078780669183724783654666240
with string of it 87894654546576465486465486456486581754078780669183724783654666240
296470326586956195308983320045476 ^2 ::== 87894654546576465486465486456486581754078780669183724783654666240            me idia psifia 32            me diafora 182541686432865033815525261574144

will count the digit from 87894654546576465486465486456493102548766354681225023824943120384
with string of it 87894654546576465486465486456493102548766354681225023824943120384
296470326586956195308983320045487 ^2 ::== 87894654546576465486465486456493102548766354681225023824943120384            me idia psifia 30            me diafora 6338253001141147007483516026880000

will count the digit from 87894654546576465486465486456972791677097518512586588291483041792
with string of it 87894654546576465486465486456972791677097518512586588291483041792
296470326586956195308983320046296 ^2 ::== 87894654546576465486465486456972791677097518512586588291483041792            me idia psifia 29            me diafora 486027381332304978369047982566801408

will count the digit from 87894654546576465486465486712973136811986541230365401021683859456
with string of it 87894654546576465486465486712973136811986541230365401021683859456
296470326586956195308983320478043 ^2 ::== 87894654546576465486465486712973136811986541230365401021683859456            me idia psifia 26            me diafora 256486372516221327696147860712767619072

will count the digit from 87894654546576465486465492912972887883091860441877508842294607872
with string of it 87894654546576465486465492912972887883091860441877508842294607872
296470326586956195308983330934401 ^2 ::== 87894654546576465486465492912972887883091860441877508842294607872            me idia psifia 24            me diafora 6456486123587326646907659968533378367488

will count the digit from 87894654546576465486465972912972905521604949732275340916547387392
with string of it 87894654546576465486465972912972905521604949732275340916547387392
296470326586956195308984140458925 ^2 ::== 87894654546576465486465972912972905521604949732275340916547387392            me idia psifia 23            me diafora 486456486141225839736198057800607631147008

will count the digit from 87894654546576465486730972912973158888915421193696466910220124160
with string of it 87894654546576465486730972912973158888915421193696466910220124160
296470326586956195309431065456531 ^2 ::== 87894654546576465486730972912973158888915421193696466910220124160            me idia psifia 20            me diafora 265486456486394593150207659478926601303883776

will count the digit from 87894654546576465492930972912972812574944340873424686098321244160
with string of it 87894654546576465492930972912972812574944340873424686098321244160
296470326586956195319887423891076 ^2 ::== 87894654546576465492930972912972812574944340873424686098321244160            me idia psifia 18            me diafora 6465486456486048279179127339207145789405003776

will count the digit from 87894654546576465972930972912973093235791929251380842847480578048
with string of it 87894654546576465972930972912973093235791929251380842847480578048
296470326586956196129411947855895 ^2 ::== 87894654546576465972930972912973093235791929251380842847480578048            me idia psifia 17            me diafora 486465486456486328940026715717163302538564337664

will count the digit from 87894654546576730972930972913661029332432639393966341964240519168
with string of it 87894654546576730972930972913661029332432639393966341964240519168
296470326586956643054409553433620 ^2 ::== 87894654546576730972930972913661029332432639393966341964240519168            me idia psifia 14            me diafora 265486465486457174265036667425859748801655324278784

will count the digit from 87894654546582930972930973388570759049529711092562384429451837440
with string of it 87894654546582930972930973388570759049529711092562384429451837440
296470326586967099412844099607195 ^2 ::== 87894654546582930972930973388570759049529711092562384429451837440            me idia psifia 12            me diafora 6465486465486932083994753764497558344844120535597056

will count the digit from 87894654547152930972934753716923016816182033931510019595037573120
with string of it 87894654547152930972934753716923016816182033931510019595037573120
296470326587928409785057103294272 ^2 ::== 87894654547152930972934753716923016816182033931510019595037573120            me idia psifia 10            me diafora 576465486469267260436252520416820397292479286121332736

will count the digit from 87894654993152932786813067728057107568333441721479909102059520000
with string of it 87894654993152932786813067728057107568333441721479909102059520000
296470327340111615404831318573702 ^2 ::== 87894654993152932786813067728057107568333441721479909102059520000            me idia psifia 8            me diafora 446576467300347581271570343272568228187262368793143279616

will count the digit from 87894699093170957075457364330835592223353925271112413181040918528
with string of it 87894699093170957075457364330835592223353925271112413181040918528
296470401715198134676434347464900 ^2 ::== 87894699093170957075457364330835592223353925271112413181040918528            me idia psifia 6            me diafora 44546594491588991877874348827927588711736894872872124678144

will count the digit from 87895309098027339018561947957159215143256376423100057340920987648
with string of it 87895309098027339018561947957159215143256376423100057340920987648
296471430492092001540262091995269 ^2 ::== 87895309098027339018561947957159215143256376423100057340920987648            me idia psifia 4            me diafora 654551450873532096461500672450847491162888882517032004747264

will count the digit from 88391647921264792142865959107261985305744588798041405006473592832
with string of it 88391647921264792142865959107261985305744588798041405006473592832
297307329074250694198918980430248 ^2 ::== 88391647921264792142865959107261985305744588798041405006473592832            me idia psifia 1            me diafora 496993374688326656400472650775221009979375263823864697557352448

will count the digit from 887985091708277578815802741809948144496943055889421711548706979840
with string of it 887985091708277578815802741809948144496943055889421711548706979840
942329608846224028492855991961610 ^2 ::== 887985091708277578815802741809948144496943055889421711548706979840            me idia psifia 1            me diafora 800090437161701113329337255353461390342382644181039383213416382464


-------------------------Approximation Result Set-----------------------------------------------------

possible approximation > ::== 296470326586956195308983320045476 ^2 87894654546576465486465486456486581754078780669183724783654666240             me idia psifia 32             me diafora 182541686432865033815525261574144


will count the digit from 87894654546576465486465486456487169943957286567626019253941960704
with string of it 87894654546576465486465486456487169943957286567626019253941960704
possible approximation of addition ::== 296470326586956195308983320045477 with ^2  87894654546576465486465486456487169943957286567626019253941960704             me idia psifia 31             me diafora 405648192073033408478945025720320
will pass value of 296470326586956195308983320045477



------------------------Bee-----------------------------

-------------------Calculation Bee--------------------------------
first number second number is the qube one dimension and third the precision 
will count the digit from 87894654546576465486465486456486764295765213534217540308916240384
with string of it 87894654546576465486465486456486764295765213534217540308916240384
Main Number 87894654546576465486465486456486764295765213534217540308916240384 has number of digits 65
Using Power of 292982181821921551621551621521622

first 87894654546576465486465486456486764295765213534217540308916240384 
     doted 0
     makes 87894654546576465486465486456486764295765213534217540308916240384

second 292982181821921551621551621521622 
     doted 0 
     makes 292982181821921551621551621521622

result 300000000000000000000000000000000 
     doted 0.5625 
     makes 300000000000000000000000000000000.5625


for the integer string 300000000000000000000000000000000.000000
the numbers are 33
the retrievable integer digit is 0

entering with number of 0.5625
recheck values of 292982181821921551621551621521622 and result of 85838558865133499285527598374961649911555908005643347326924750848 with intpart 85838558865133499285527598374961649911555908005643347326924750848

     ----> using 0.5625 rst is 0.28125
     ----> using 0.28125 with intpart 0 and fract 0.28125
trying to retrieve digits 
will count the digit from 85838558865133499285527598374961812170832737219006738904935038976
with string of it 85838558865133499285527598374961812170832737219006738904935038976
digits retrieved 1
                     with combination da_rst 292982181821921551621551621521622.28125 sq of rst 85838558865133499285527598374961812170832737219006738904935038976
                     with intpart 85838558865133499285527598374961812170832737219006738904935038976 and other part 0
                     the int string is 0.281250

     ----> using 0.28125 rst is 0.140625
     ----> using 0.140625 with intpart 0 and fract 0.140625
trying to retrieve digits 
will count the digit from 85838558865133499285527598374961720899989520786489831142304251904
with string of it 85838558865133499285527598374961720899989520786489831142304251904
digits retrieved 1
                     with combination da_rst 292982181821921551621551621521622.125 sq of rst 85838558865133499285527598374961720899989520786489831142304251904
                     with intpart 85838558865133499285527598374961720899989520786489831142304251904 and other part 0
                     the int string is 0.140625

     ----> using 0.140625 rst is 0.0703125
     ----> using 0.0703125 with intpart 0 and fract 0.0703125
trying to retrieve digits 
will count the digit from 85838558865133499285527598374961690476375115308984195221427322880
with string of it 85838558865133499285527598374961690476375115308984195221427322880
digits retrieved 1
                     with combination da_rst 292982181821921551621551621521622.0625 sq of rst 85838558865133499285527598374961690476375115308984195221427322880
                     with intpart 85838558865133499285527598374961690476375115308984195221427322880 and other part 0
                     the int string is 0.070312

--------------------------------------
Psifia,Power,Result of Power,Diafora from Main,Diairesi from Main
--------------------------------------
1 292982181821921551621551621521622.281250 85838558865133499285527598374961812170832737219006738904935038976.000000 2056095681442966200937888081524952124932476315210801403981201408.000000 1.023953 
--------------------------------------

-------------------Calculation Bee--------------------------------
first number second number is the qube one dimension and third the precision 
will count the digit from 87894654546576465486465486456486764295765213534217540308916240384
with string of it 87894654546576465486465486456486764295765213534217540308916240384
Main Number 87894654546576465486465486456486764295765213534217540308916240384 has number of digits 65
Using Power of 296470326586956195308983320045476

first 87894654546576465486465486456486764295765213534217540308916240384 
     doted 0
     makes 87894654546576465486465486456486764295765213534217540308916240384

second 296470326586956195308983320045476 
     doted 0 
     makes 296470326586956195308983320045476

result 296470326586956195308983320045476 
     doted 0.625 
     makes 296470326586956195308983320045476.625


for the integer string 296470326586956195308983320045476.000000
the numbers are 33
the retrievable integer digit is 6

entering with number of 6.625
recheck values of 296470326586956195308983320045476 and result of 87894654546576465486465486456486581754078780669183724783654666240 with intpart 87894654546576465486465486456486581754078780669183724783654666240

     ----> using 6.625 rst is 3.3125
     ----> using 3.3125 with intpart 3 and fract 0.3125
trying to retrieve digits 
will count the digit from 87894654546576465486465486456486764295765213534217540308916240384
with string of it 87894654546576465486465486456486764295765213534217540308916240384
digits retrieved 65
                     with combination da_rst 296470326586956195308983320045476.3125 sq of rst 87894654546576465486465486456486764295765213534217540308916240384
                     with intpart 87894654546576465486465486456486764295765213534217540308916240384 and other part 0

     ----> using 6.625 
     ----> with rst 3.3125 
     ----> the times i run 1
     ----> i just go down :0
     ------------------- found  @--------------------------- 
     for number 87894654546576465486465486456486764295765213534217540308916240384  
     power result is  296470326586956195308983320045476.3125
     with result of the power * power  87894654546576465486465486456486764295765213534217540308916240384

                     the int string is 3.312500

--------------------------------------
Psifia,Power,Result of Power,Diafora from Main,Diairesi from Main
--------------------------------------
65 296470326586956195308983320045476.312500 87894654546576465486465486456486764295765213534217540308916240384.000000 0.000000 1.000000 
--------------------------------------

-------------------Calculation Bee--------------------------------
first number second number is the qube one dimension and third the precision 
will count the digit from 87894654546576465486465486456486764295765213534217540308916240384
with string of it 87894654546576465486465486456486764295765213534217540308916240384
Main Number 87894654546576465486465486456486764295765213534217540308916240384 has number of digits 65
Using Power of 296470326586956195308983320045477

first 87894654546576465486465486456486764295765213534217540308916240384 
     doted 0
     makes 87894654546576465486465486456486764295765213534217540308916240384

second 296470326586956195308983320045477 
     doted 0 
     makes 296470326586956195308983320045477

result 296470326586956195308983320045475 
     doted 0.625 
     makes 296470326586956195308983320045475.625


for the integer string 296470326586956195308983320045475.000000
the numbers are 33
the retrievable integer digit is 5

entering with number of 5.625
recheck values of 296470326586956195308983320045477 and result of 87894654546576465486465486456487169943957286567626019253941960704 with intpart 87894654546576465486465486456487169943957286567626019253941960704

recheck power 296470326586956195308983320045477 of result 87894654546576465486465486456487169943957286567626019253941960704
lowering second to value of 296470326586956195308983320045477

     ----> using 5.625 rst is 2.8125
     ----> using 2.8125 with intpart 2 and fract 0.8125
trying to retrieve digits 
will count the digit from 87894654546576465486465486456487068531909268309273899517685530624
with string of it 87894654546576465486465486456487068531909268309273899517685530624
digits retrieved 31
                     with combination da_rst 296470326586956195308983320045476.8125 sq of rst 87894654546576465486465486456487068531909268309273899517685530624
                     with intpart 87894654546576465486465486456487068531909268309273899517685530624 and other part 0
                     the int string is 2.812500

     ----> using 2.8125 rst is 1.40625
     ----> using 1.40625 with intpart 1 and fract 0.40625
trying to retrieve digits 
will count the digit from 87894654546576465486465486456486825142994024489228812150670098432
with string of it 87894654546576465486465486456486825142994024489228812150670098432
digits retrieved 32
                     with combination da_rst 296470326586956195308983320045476.40625 sq of rst 87894654546576465486465486456486825142994024489228812150670098432
                     with intpart 87894654546576465486465486456486825142994024489228812150670098432 and other part 0
                     the int string is 1.406250

     ----> using 1.40625 rst is 0.703125
     ----> using 0.703125 with intpart 0 and fract 0.703125
trying to retrieve digits 
will count the digit from 87894654546576465486465486456486987402270853702592203728680386560
with string of it 87894654546576465486465486456486987402270853702592203728680386560
digits retrieved 32
                     with combination da_rst 296470326586956195308983320045476.6875 sq of rst 87894654546576465486465486456486987402270853702592203728680386560
                     with intpart 87894654546576465486465486456486987402270853702592203728680386560 and other part 0
                     the int string is 0.703125

     ----> using 0.703125 rst is 0.3515625
     ----> using 0.3515625 with intpart 0 and fract 0.3515625
trying to retrieve digits 
will count the digit from 87894654546576465486465486456486784578174817185887964256167526400
with string of it 87894654546576465486465486456486784578174817185887964256167526400
digits retrieved 33
                     with combination da_rst 296470326586956195308983320045476.34375 sq of rst 87894654546576465486465486456486784578174817185887964256167526400
                     with intpart 87894654546576465486465486456486784578174817185887964256167526400 and other part 0
                     the int string is 0.351562

     ----> using 0.3515625 rst is 0.17578125
     ----> using 0.17578125 with intpart 0 and fract 0.17578125
trying to retrieve digits 
will count the digit from 87894654546576465486465486456486693307331600753371056493536739328
with string of it 87894654546576465486465486456486693307331600753371056493536739328
digits retrieved 32
                     with combination da_rst 296470326586956195308983320045476.1875 sq of rst 87894654546576465486465486456486693307331600753371056493536739328
                     with intpart 87894654546576465486465486456486693307331600753371056493536739328 and other part 0
                     the int string is 0.175781

     ----> using 0.17578125 rst is 0.087890625
     ----> using 0.087890625 with intpart 0 and fract 0.087890625
trying to retrieve digits 
will count the digit from 87894654546576465486465486456486632460102789798359784651782881280
with string of it 87894654546576465486465486456486632460102789798359784651782881280
digits retrieved 32
                     with combination da_rst 296470326586956195308983320045476.09375 sq of rst 87894654546576465486465486456486632460102789798359784651782881280
                     with intpart 87894654546576465486465486456486632460102789798359784651782881280 and other part 0
                     the int string is 0.087891

from new int t  of 5 ---> 4 with 4.625
     ----> using 4.625 rst is 2.3125
     ----> using 2.3125 with intpart 2 and fract 0.3125
trying to retrieve digits 
will count the digit from 87894654546576465486465486456486764295765213534217540308916240384
with string of it 87894654546576465486465486456486764295765213534217540308916240384
digits retrieved 65
                     with combination da_rst 296470326586956195308983320045476.3125 sq of rst 87894654546576465486465486456486764295765213534217540308916240384
                     with intpart 87894654546576465486465486456486764295765213534217540308916240384 and other part 0

     ----> using 4.625 
     ----> with rst 2.3125 
     ----> the times i run 7
     ----> i just go down :1
     ------------------- found  @--------------------------- 
     for number 87894654546576465486465486456486764295765213534217540308916240384  
     power result is  296470326586956195308983320045476.3125
     with result of the power * power  87894654546576465486465486456486764295765213534217540308916240384

                     the int string is 2.312500

--------------------------------------
Psifia,Power,Result of Power,Diafora from Main,Diairesi from Main
--------------------------------------
31 296470326586956195308983320045476.812500 87894654546576465486465486456487068531909268309273899517685530624.000000 304236144054775056359208769290240.000000 1.000000 
--------------------------------------
