acherontas@acherontas:~/codeblocks/sqrt_sum_of_times_arm64/bin/Debug $ ./sqrt_sum_of_times_arm64 56468465454564565645456456454564465 40 250 0
voyeristic behaviours and others have fun 
ur number ,ur precision , ur sleep time , ur log  
Main cdi 175
Secondary cdi 13
Secondary cdi 4
Exiting Secondary cdi 4
with sqrt of math 237630943806913677.0507761151353093298511

9 25 |34 16| 237630943806913677.0507761151353093298511  and main 56468465454564565645456456454564464
-------------------------------------------------------------------------
error continue with the rest 
error continue with the rest 

-------------------------------------------------------------------------

9 |25| 34 |16| 237630943806913677.0507761151353093298511  and main 56468465454564565645456456454564464
-------------------------------------------------------------------------
error continue with the rest 

-------------------------------------------------------------------------

9 26 |35 17| 237630943806913677.0507761151353093298511  and main 56468465454564565645456456454564464
-------------------------------------------------------------------------
error continue with the rest 
error continue with the rest 
error continue with the rest 

-------------------------------------------------------------------------

9 |26| 35 |17| 237630943806913677.0507761151353093298511  and main 56468465454564565645456456454564464
-------------------------------------------------------------------------
error continue with the rest 
error continue with the rest 
error continue with the rest 

-------------------------------------------------------------------------

10 25 |35 15| 237630943806913677.0507761151353093298511  and main 56468465454564565645456456454564464
-------------------------------------------------------------------------
error continue with the rest 
error continue with the rest 

-------------------------------------------------------------------------

10 |25| 35 |15| 237630943806913677.0507761151353093298511  and main 56468465454564565645456456454564464
-------------------------------------------------------------------------
error continue with the rest 

-------------------------------------------------------------------------

10 26 |36 16| 237630943806913677.0507761151353093298511  and main 56468465454564565645456456454564464
-------------------------------------------------------------------------
error continue with the rest 
error continue with the rest 

-------------------------------------------------------------------------

10 |26| 36 |16| 237630943806913677.0507761151353093298511  and main 56468465454564565645456456454564464
-------------------------------------------------------------------------
error continue with the rest 
error continue with the rest 

-------------------------------------------------------------------------



---------order of near approximation numbers--------
|----------bigger value is the nearest-------------|

 237262459893128427  237262459893128427  235437364047796669  225873861818258262  225873861818258262  208833082302383748  208833082302383748  208280613830684320 
----------------------------------------------------

enter a number from above 
237262459893128427
lenght of 237262459893128427 18
lenght of 56468465454564565645456456454564464 is 35
default 4 loops enter 4 or more [4 is 3] 
suggested value : 19
19
-------------------------------------------------------
times 1 5 2
main 2.236067977499789696409173668731276319394 second 1.414213562373095048801688724209697984347
main 5 second 1.999999999999999999999999999999999807407
times of 1.11803398874989484820458683436563835229
new times of 1.11803398874989484820458683436563835229
using 237262459893128427 * 1.11803398874989484820458683436563835229
265267494414926325.3811812895929834743569  with length of 40 and dot length 18 will move 22
lap for tens is more than ten will lower it 

 trying to reach the main number 56468465454564565645456456454564464  main number intpart lenght 35 
 fract 0 int 56468465454564565645456456454564464
    -----------------> 265267494414926325.3811812895929834743569 ^2 ::== 70366843593172969229152966394367944
 temp fract 0 temp int 70366843593172969229152966394367944
before loop xstp is 0
getting the part of 7036684359317296922915296639436794880 :: ad 37 and mad 35
i push_back a near value 

-------------------------------------------------------
-------------------------------------------------------
times 2 56 23
main 7.483314773547882771167497464633098367441 second 4.795831523312719541597438064162694277617
main 55.99999999999999999999999999999999383702 second 23.00000000000000000000000000000000308149
times of 0.3253615118933862074420651071579607441559
new times of 0.3253615118933862074420651071579607441559
using 237262459893128427 * 0.3253615118933862074420651071579607441559
77196072666372172.73807028251862356882373  with length of 40 and dot length 17 will move 23
lap for tens is more than ten will lower it 

 trying to reach the main number 56468465454564565645456456454564464  main number intpart lenght 35 
 fract 0 int 56468465454564565645456456454564464
    -----------------> 77196072666372172.73807028251862356882373 ^2 ::== 5959233635111812895020893940392592
 temp fract 0 temp int 5959233635111812895020893940392592
before loop xstp is 0
getting the part of 595923363511181289502089394039259136 :: ad 36 and mad 35
i push_back a near value 

-------------------------------------------------------
-------------------------------------------------------
times 3 564 237
main 23.74868417407583446934583520082435754722 second 15.39480431834065242594933371743214799547
main 564 second 237.0000000000000000000000000000000246519
times of 0.1002054184560161791955520472608622529965
new times of 0.1002054184560161791955520472608622529965
using 237262459893128427 * 0.1002054184560161791955520472608622529965
23774984077494689.7822198194070699196756  with length of 39 and dot length 17 will move 22
lap for tens is more than ten will lower it 

 trying to reach the main number 56468465454564565645456456454564464  main number intpart lenght 35 
 fract 0 int 56468465454564565645456456454564464
    -----------------> 23774984077494689.7822198194070699196756 ^2 ::== 565249867885126025319906326214438.5625
 temp fract 0.5625 temp int 565249867885126025319906326214438
before loop xstp is 0
getting the part of 56524986788512602531990632621443848 :: ad 35 and mad 35
i push_back a near value 

-------------------------------------------------------
-------------------------------------------------------
times 4 5646 2372
main 75.139869576676801681966376610651409788 second 48.70318264754368185519356917397978868382
main 5646 second 2372
times of 0.03167785395306779160285260396739098278255
new times of 0.03167785395306779160285260396739098278255
using 237262459893128427 * 0.03167785395306779160285260396739098278255
7515965553040126.701231528770475895546987  with length of 40 and dot length 16 will move 24
lap for tens is more than ten will lower it 

 trying to reach the main number 56468465454564565645456456454564464  main number intpart lenght 35 
 fract 0 int 56468465454564565645456456454564464
    -----------------> 7515965553040126.701231528770475895546987 ^2 ::== 56489738194485777617424995985002.2734375
 temp fract 0.2734375 temp int 56489738194485777617424995985002
before loop xstp is 0
getting the part of 5648973819448577761742499598500227 :: ad 34 and mad 35
getting the part of 564897381944857776174249959850022784 :: ad 36 and mad 35
i push_back a near value 

-------------------------------------------------------
-------------------------------------------------------
times 5 56468 23726
main 237.6299644405141091675360427701199585768 second 154.032464110654283851992491223157596328
main 56467.99999999999999999999999999999368911 second 23726.00000000000000000000000000000315544
times of 0.01001559320747340930487802591124167311499
new times of 0.01001559320747340930487802591124167311499
using 237262459893128427 * 0.01001559320747340930487802591124167311499
2376324281694049.275651451819559789851305  with length of 40 and dot length 16 will move 24
lap for tens is more than ten will lower it 

 trying to reach the main number 56468465454564565645456456454564464  main number intpart lenght 35 
 fract 0 int 56468465454564565645456456454564464
    -----------------> 2376324281694049.275651451819559789851305 ^2 ::== 5646917091768739253363718500475.423828125
 temp fract 0.423828125 temp int 5646917091768739253363718500475
before loop xstp is 0
getting the part of 564691709176873925336371850047542.4375 :: ad 33 and mad 35
getting the part of 56469170917687392533637185004754240 :: ad 35 and mad 35
i push_back a near value 

-------------------------------------------------------
-------------------------------------------------------
times 6 564684 237262
main 751.4545894463616887971132230148567645813 second 487.0954731877519717420461400048506673877
main 564684 second 237262
times of 0.003167193184944751746158732637400244457559
new times of 0.003167193184944751746158732637400244457559
using 237262459893128427 * 0.003167193184944751746158732637400244457559
751456046016743.8457129909188253895401324  with length of 40 and dot length 15 will move 25
lap for tens is more than ten will lower it 

 trying to reach the main number 56468465454564565645456456454564464  main number intpart lenght 35 
 fract 0 int 56468465454564565645456456454564464
    -----------------> 751456046016743.8457129909188253895401324 ^2 ::== 564686189095118644188916769758.1288452148
 temp fract 0.12884521484375 temp int 564686189095118644188916769758
before loop xstp is 0
getting the part of 56468618909511864418891676975812.875 :: ad 32 and mad 35
getting the part of 5646861890951186441889167697581288 :: ad 34 and mad 35
getting the part of 564686189095118644188916769758128832 :: ad 36 and mad 35
i push_back a near value 

-------------------------------------------------------
-------------------------------------------------------
times 7 5646846 2372624
main 2376.309323299473148788869990296814463916 second 1540.332431652336534026549054193817953286
main 5646846 second 2372623.999999999999999999999999999596103
times of 0.001001553268996466843793567792577675565043
new times of 0.001001553268996466843793567792577675565043
using 237262459893128427 * 0.001001553268996466843793567792577675565043
237630992316105.8813659530836051851805917  with length of 40 and dot length 15 will move 25
lap for tens is more than ten will lower it 

 trying to reach the main number 56468465454564565645456456454564464  main number intpart lenght 35 
 fract 0 int 56468465454564565645456456454564464
    -----------------> 237630992316105.8813659530836051851805917 ^2 ::== 56468488509137172431974420799.26418304443
 temp fract 0.26418304443359375 temp int 56468488509137172431974420799
before loop xstp is 0
getting the part of 5646848850913717243197442079926.41796875 :: ad 31 and mad 35
getting the part of 564684885091371724319744207992641.8125 :: ad 33 and mad 35
getting the part of 56468488509137172431974420799264192 :: ad 35 and mad 35
i push_back a near value 

-------------------------------------------------------
-------------------------------------------------------
times 8 56468465 23726245
main 7514.550219407679226318960983739748747736 second 4870.95935109296513620108810916774897845
main 56468464.99999999999999999999999999353765 second 23726244.99999999999999999999999999676883
times of 0.0003167189000791182602354043374221141789827
new times of 0.0003167189000791182602354043374221141789827
using 237262459893128427 * 0.0003167189000791182602354043374221141789827
75145505327417.54600408701926705985654591  with length of 40 and dot length 14 will move 26
lap for tens is more than ten will lower it 

 trying to reach the main number 56468465454564565645456456454564464  main number intpart lenght 35 
 fract 0 int 56468465454564565645456456454564464
    -----------------> 75145505327417.54600408701926705985654591 ^2 ::== 5646846970912938787877951684.874324798584
 temp fract 0.874324798583984375 temp int 5646846970912938787877951684
before loop xstp is 0
getting the part of 564684697091293878787795168487.4326171875 :: ad 30 and mad 35
getting the part of 56468469709129387878779516848743.25 :: ad 32 and mad 35
getting the part of 5646846970912938787877951684874325 :: ad 34 and mad 35
getting the part of 564684697091293878787795168487432512 :: ad 36 and mad 35
i push_back a near value 

-------------------------------------------------------
-------------------------------------------------------
times 9 564684654 237262459
main 23763.09436921042065657917438259205776358 second 15403.32623169424403267765942647752867297
main 564684654 second 237262459
times of 0.0001001553067829007902871780250013848891337
new times of 0.0001001553067829007902871780250013848891337
using 237262459893128427 * 0.0001001553067829007902871780250013848891337
23763094458661.97225929378770883624403675  with length of 40 and dot length 14 will move 26
lap for tens is more than ten will lower it 

 trying to reach the main number 56468465454564565645456456454564464  main number intpart lenght 35 
 fract 0 int 56468465454564565645456456454564464
    -----------------> 23763094458661.97225929378770883624403675 ^2 ::== 564684658251291332416786098.6674246788025
 temp fract 0.667424678802490234375 temp int 564684658251291332416786098
before loop xstp is 0
getting the part of 56468465825129133241678609866.7424621582 :: ad 29 and mad 35
getting the part of 5646846582512913324167860986674.247070312 :: ad 31 and mad 35
getting the part of 564684658251291332416786098667424.6875 :: ad 33 and mad 35
getting the part of 56468465825129133241678609866742464 :: ad 35 and mad 35
i push_back a near value 

-------------------------------------------------------
-------------------------------------------------------
times 10 5646846545 2372624598
main 75145.50249349590981814045897760972709283 second 48709.59451689163876856614500981191184947
main 5646846545 second 2372624598.00000000000000000000000041359
times of 3.167188882591864194191434366036599191908e-05
new times of 3.167188882591864194191434366036599191908e-05
using 237262459893128427 * 3.167188882591864194191434366036599191908e-05
7514550252299.144168290725851787679093045  with length of 40 and dot length 13 will move 27
lap for tens is more than ten will lower it 

 trying to reach the main number 56468465454564565645456456454564464  main number intpart lenght 35 
 fract 0 int 56468465454564565645456456454564464
    -----------------> 7514550252299.144168290725851787679093045 ^2 ::== 56468465494329131274516295.95105038583279
 temp fract 0.95105038583278656005859375 temp int 56468465494329131274516295
before loop xstp is 0
getting the part of 5646846549432913127451629595.105038642883 :: ad 28 and mad 35
getting the part of 564684654943291312745162959510.5038452148 :: ad 30 and mad 35
getting the part of 56468465494329131274516295951050.3828125 :: ad 32 and mad 35
getting the part of 5646846549432913127451629595105038 :: ad 34 and mad 35
getting the part of 564684654943291312745162959510503872 :: ad 36 and mad 35
i push_back a near value 

-------------------------------------------------------
-------------------------------------------------------
times 11 56468465454 23726245989
main 237630.9438057257727391293042672749810428 second 154033.2626058410800680069532710109985045
main 56468465454 second 23726245989
times of 1.001553064550947544924441625569268560771e-05
new times of 1.001553064550947544924441625569268560771e-05
using 237262459893128427 * 1.001553064550947544924441625569268560771e-05
2376309438088.590583882032314424003358126  with length of 40 and dot length 13 will move 27
lap for tens is more than ten will lower it 

 trying to reach the main number 56468465454564565645456456454564464  main number intpart lenght 35 
 fract 0 int 56468465454564565645456456454564464
    -----------------> 2376309438088.590583882032314424003358126 ^2 ::== 5646846545548913125201456.42632604483515
 temp fract 0.426326044835150241851806640625 temp int 5646846545548913125201456
before loop xstp is 0
getting the part of 564684654554891312520145642.6326045393944 :: ad 27 and mad 35
getting the part of 56468465455489131252014564263.26044464111 :: ad 29 and mad 35
getting the part of 5646846545548913125201456426326.044921875 :: ad 31 and mad 35
getting the part of 564684654554891312520145642632604.4375 :: ad 33 and mad 35
getting the part of 56468465455489131252014564263260456 :: ad 35 and mad 35
i push_back a near value 

-------------------------------------------------------
-------------------------------------------------------
times 12 564684654545 237262459893
main 751455.0249649010098766510084168517278836 second 487095.9452643801263117712351427724195118
main 564684654545 second 237262459893
times of 3.167188881476615475514537210382574858313e-06
new times of 3.167188881476615475514537210382574858313e-06
using 237262459893128427 * 3.167188881476615475514537210382574858313e-06
751455024965.3077624431324057125256624644  with length of 40 and dot length 12 will move 28
lap for tens is more than ten will lower it 

 trying to reach the main number 56468465454564565645456456454564464  main number intpart lenght 35 
 fract 0 int 56468465454564565645456456454564464
    -----------------> 751455024965.3077624431324057125256624644 ^2 ::== 564684654545611312519999.7973727343487553
 temp fract 0.7973727343487553298473358154296875 temp int 564684654545611312519999
before loop xstp is 0
getting the part of 56468465454561131251999979.73727343976498 :: ad 26 and mad 35
getting the part of 5646846545456113125199997973.727343559265 :: ad 28 and mad 35
getting the part of 564684654545611312519999797372.7343139648 :: ad 30 and mad 35
getting the part of 56468465454561131251999979737273.4453125 :: ad 32 and mad 35
getting the part of 5646846545456113125199997973727343 :: ad 34 and mad 35
getting the part of 564684654545611312519999797372734336 :: ad 36 and mad 35
i push_back a near value 

-------------------------------------------------------
-------------------------------------------------------
times 13 5646846545456 2372624598931
main 2376309.438069040704621237417545745458835 second 1540332.626068473562279564209941219082435
main 5646846545456 second 2372624598931
times of 1.001553064542827774194670454044794189742e-06
new times of 1.001553064542827774194670454044794189742e-06
using 237262459893128427 * 1.001553064542827774194670454044794189742e-06
237630943806.9325416110895007197115677019  with length of 40 and dot length 12 will move 28
lap for tens is more than ten will lower it 

 trying to reach the main number 56468465454564565645456456454564464  main number intpart lenght 35 
 fract 0 int 56468465454564565645456456454564464
    -----------------> 237630943806.9325416110895007197115677019 ^2 ::== 56468465454573531252000.00133778116287431
 temp fract 0.0013377811628743074834346771240234375 temp int 56468465454573531252000
before loop xstp is 0
getting the part of 5646846545457353125200000.133778117597103 :: ad 25 and mad 35
getting the part of 564684654545735312520000013.3778116703033 :: ad 27 and mad 35
getting the part of 56468465454573531252000001337.78116607666 :: ad 29 and mad 35
getting the part of 5646846545457353125200000133778.115234375 :: ad 31 and mad 35
getting the part of 564684654545735312520000013377811.625 :: ad 33 and mad 35
getting the part of 56468465454573531252000001337781168 :: ad 35 and mad 35
i push_back a near value 

-------------------------------------------------------
-------------------------------------------------------
times 14 56468465454564 23726245989312
main 7514550.249653268503985303529620512317911 second 4870959.452645033053293412260595325421234
main 56468465454563.99999999999999999999322374 second 23726245989311.99999999999999999999661187
times of 3.16718888147680841735676025869891892514e-07
new times of 3.16718888147680841735676025869891892514e-07
using 237262459893128427 * 3.16718888147680841735676025869891892514e-07
75145502496.53535402992345580265844327157  with length of 40 and dot length 11 will move 29
lap for tens is more than ten will lower it 

 trying to reach the main number 56468465454564565645456456454564464  main number intpart lenght 35 
 fract 0 int 56468465454564565645456456454564464
    -----------------> 75145502496.53535402992345580265844327157 ^2 ::== 5646846545456801125200.00001735258683766
 temp fract 1.73525868376600556075572967529296875e-05 temp int 5646846545456801125200
before loop xstp is 0
getting the part of 564684654545680112520000.0017352587310597 :: ad 24 and mad 35
getting the part of 56468465454568011252000000.17352586984634 :: ad 26 and mad 35
getting the part of 5646846545456801125200000017.35258769989 :: ad 28 and mad 35
getting the part of 564684654545680112520000001735.2586669922 :: ad 30 and mad 35
getting the part of 56468465454568011252000000173525.8671875 :: ad 32 and mad 35
getting the part of 5646846545456801125200000017352586 :: ad 34 and mad 35
getting the part of 564684654545680112520000001735258624 :: ad 36 and mad 35
i push_back a near value 

-------------------------------------------------------
-------------------------------------------------------
times 15 564684654545645 237262459893128
main 23763094.38069135389259692091066784373291 second 15403326.26068564451739172249396250494383
main 564684654545645 second 237262459893128.0000000000000000000271051
times of 1.001553064542749485273742555382987337732e-07
new times of 1.001553064542749485273742555382987337732e-07
using 237262459893128427 * 1.001553064542749485273742555382987337732e-07
23763094380.69139665891277688607086029773  with length of 40 and dot length 11 will move 29
lap for tens is more than ten will lower it 

 trying to reach the main number 56468465454564565645456456454564464  main number intpart lenght 35 
 fract 0 int 56468465454564565645456456454564464
    -----------------> 23763094380.69139665891277688607086029773 ^2 ::== 564684654545647032520.0000000031244553611
 temp fract 3.1244553611031733453273773193359375e-09 temp int 564684654545647032520
before loop xstp is 0
getting the part of 56468465454564703252000.00000031244417187 :: ad 23 and mad 35
getting the part of 5646846545456470325200000.000031244009733 :: ad 25 and mad 35
getting the part of 564684654545647032520000000.0031245350838 :: ad 27 and mad 35
getting the part of 56468465454564703252000000000.31244659424 :: ad 29 and mad 35
getting the part of 5646846545456470325200000000031.245117188 :: ad 31 and mad 35
getting the part of 564684654545647032520000000003124.5 :: ad 33 and mad 35
getting the part of 56468465454564703252000000000312448 :: ad 35 and mad 35
i push_back a near value 

-------------------------------------------------------
-------------------------------------------------------
times 16 5646846545456456 2372624598931284
main 75145502.49653305765030967961618144196409 second 48709594.52645119278605711242571358311859
main 5646846545456455.999999999999999999132638 second 2372624598931284
times of 3.167188881476711991305844883391397833376e-08
new times of 3.167188881476711991305844883391397833376e-08
using 237262459893128427 * 3.167188881476711991305844883391397833376e-08
7514550249.653306620171965960330382660178  with length of 40 and dot length 10 will move 30
lap for tens is more than ten will lower it 

 trying to reach the main number 56468465454564565645456456454564464  main number intpart lenght 35 
 fract 0 int 56468465454564565645456456454564464
    -----------------> 7514550249.653306620171965960330382660178 ^2 ::== 56468465454564572852.00000000000091660013
 temp fract 9.1660012913052923977375030517578125e-13 temp int 56468465454564572852
before loop xstp is 0
getting the part of 5646846545456457285200.000000000091858965 :: ad 22 and mad 35
getting the part of 564684654545645728520000.0000000091386028 :: ad 24 and mad 35
getting the part of 56468465454564572852000000.00000091642141 :: ad 26 and mad 35
getting the part of 5646846545456457285200000000.000091552734 :: ad 28 and mad 35
getting the part of 564684654545645728520000000000.0092163086 :: ad 30 and mad 35
getting the part of 56468465454564572852000000000000.9140625 :: ad 32 and mad 35
getting the part of 5646846545456457285200000000000093 :: ad 34 and mad 35
getting the part of 564684654545645728520000000000009152 :: ad 36 and mad 35
i push_back a near value 

-------------------------------------------------------
-------------------------------------------------------
times 17 56468465454564565 23726245989312842
main 237630943.806913675692669199187889179867 second 154033262.6068565815081066369947249551603
main 56468465454564565.00000000000000000693889 second 23726245989312841.99999999999999999653055
times of 1.00155306454274828876930082555394838492e-08
new times of 1.00155306454274828876930082555394838492e-08
using 237262459893128427 * 1.00155306454274828876930082555394838492e-08
2376309438.069136827035406509871272308491  with length of 40 and dot length 10 will move 30
lap for tens is more than ten will lower it 

 trying to reach the main number 56468465454564565645456456454564464  main number intpart lenght 35 
 fract 0 int 56468465454564565645456456454564464
    -----------------> 2376309438.069136827035406509871272308491 ^2 ::== 5646846545456456833.200000000000012612134
 temp fract 0.2000000000000126121335597417782992124557 temp int 5646846545456456833
before loop xstp is 0
getting the part of 564684654545645683320.0000000000013642421 :: ad 21 and mad 35
getting the part of 56468465454564568332000.00000000012369128 :: ad 23 and mad 35
getting the part of 5646846545456456833200000.000000013038516 :: ad 25 and mad 35
getting the part of 564684654545645683320000000.0000013113022 :: ad 27 and mad 35
getting the part of 56468465454564568332000000000.00012969971 :: ad 29 and mad 35
getting the part of 5646846545456456833200000000000.012695312 :: ad 31 and mad 35
getting the part of 564684654545645683320000000000001.3125 :: ad 33 and mad 35
getting the part of 56468465454564568332000000000000128 :: ad 35 and mad 35
i push_back a near value 

-------------------------------------------------------
-------------------------------------------------------
times 18 564684654545645656 237262459893128427
main 751455024.9653306137641424605937187384377 second 487095945.2645119555758500775010963598892
main 564684654545645655.9999999999999999444888 second 237262459893128427.0000000000000000277556
times of 3.167188881476711787931682122142794805935e-09
new times of 3.167188881476711787931682122142794805935e-09
using 237262459893128427 * 3.167188881476711787931682122142794805935e-09
751455024.9653306137641424605937186350401  with length of 40 and dot length 9 will move 31
lap for tens is more than ten will lower it 

 trying to reach the main number 56468465454564565645456456454564464  main number intpart lenght 35 
 fract 0 int 56468465454564565645456456454564464
    -----------------> 751455024.9653306137641424605937186350401 ^2 ::== 564684654545645655.9999999999999997779554
 temp fract 0.9999999999999997779553950749686919152737 temp int 564684654545645655
before loop xstp is 0
getting the part of 56468465454564565599.99999999999998578915 :: ad 20 and mad 35
getting the part of 5646846545456456559999.999999999998181011 :: ad 22 and mad 35
getting the part of 564684654545645655999999.9999999997089617 :: ad 24 and mad 35
getting the part of 56468465454564565599999999.99999997764826 :: ad 26 and mad 35
getting the part of 5646846545456456559999999999.999998092651 :: ad 28 and mad 35
getting the part of 564684654545645655999999999999.9997558594 :: ad 30 and mad 35
getting the part of 56468465454564565599999999999999.984375 :: ad 32 and mad 35
getting the part of 5646846545456456559999999999999998 :: ad 34 and mad 35
getting the part of 564684654545645655999999999999999744 :: ad 36 and mad 35
i push_back a near value 

u enter as approximation 237262459893128427 with main number to find the power 56468465454564565645456456454564464
as of the entered 
237262459893128427 ^2 ::== 56293474874538375383322373115494328 me diafora 174990580026190262134083339070136
237630943806913682 ^2 ::== 56468465454564567997633942198797120 me diafora 2352177485744232656
237630943806913966 ^2 ::== 56468465454564702972010024525849152 me diafora 137326553568071284688
237630943806932541 ^2 ::== 56468465454573530961572451724716680 me diafora 8965316115995270152216
237630943808859058 ^2 ::== 56468465455489131067516363708647360 me diafora 924565422059907254082896
237630944586619722 ^2 ::== 56468465825129132959877834239357280 me diafora 370564567314421377784792816
237630992316105881 ^2 ::== 56468488509137172258050832002786160 me diafora 23054572606612594375548221696
237632428169404927 ^2 ::== 56469170917687392265043541291875328 me diafora 705463122826619587084837310864
237749840774946897 ^2 ::== 56524986788512602141035653169928608 me diafora 56521333948036495579196715364144
751455024965307762 ^2 ::== 564684654545611311854011651377448640 me diafora 508216189091046746208555194922884160
751455024965330613 ^2 ::== 564684654545645654851562616394955776 me diafora 508216189091081089206106159940391296
751455024965330662 ^2 ::== 564684654545645728494155062997358272 me diafora 508216189091081162848698606542793792
751455024965353540 ^2 ::== 564684654545680112070277377190531584 me diafora 508216189091115546424820920735967104
751455025229914416 ^2 ::== 564684654943291311499141438684621056 me diafora 508216189488726745853684982230056576
751455053274175460 ^2 ::== 564684697091293878726370942866211584 me diafora 508216231636729313080914486411647104
751456046016743845 ^2 ::== 564686189095118643117354096345384000 me diafora 508217723640554077471897639890819520
751596555304012670 ^2 ::== 564897381944857775989127403520528896 me diafora 508428916490293210343670947065964416
771960726663721727 ^2 ::== 595923363511181288914314134891862528 me diafora 539454898056616723268857678437298048
2652674944149263253 ^2 ::== 7036684359317296918608345182696141824 me diafora 6980215893862732352962888726241576960
possible approximation ::== 237630943806913682 with afr 2352177485744232656
possible approximation  ::== 237630943806913682 -X with afr 2352177485744232656
----removing 
possible approximation of minus ::== 237630943806913681 with 56468465454564567522372054584969760
possible approximation of minus ::== 237630943806913680 with 56468465454564567047110166971142400
possible approximation of minus ::== 237630943806913679 with 56468465454564566571848279357315040
possible approximation of minus ::== 237630943806913678 with 56468465454564566096586391743487680
possible approximation of minus ::== 237630943806913677 with 56468465454564565621324504129660328
