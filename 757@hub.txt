voyeristic behaviours and others have fun 
ur number ,ur precision , ur sleep time , ur log ,ur automation 0 no 1 auto , ur bee auto 0 for no log 1 for log 
with main number 757897654678648654564564645645645696
will count the digit from 757897654678648654564564645645645696
with string of it 757897654678648654564564645645645696
36
 @ CDIS : with main number 757897654678648654564564645645645696
Main cdi 208
Secondary cdi 10
Secondary cdi 1
Exiting Secondary cdi 1
with sqrt of math 870573175947116265.48080546204937801846313050191384

9 25 |34 16| 870573175947116265.48080546204937801846313050191384  and main 757897654678648654564564645645645696
-------------------------------------------------------------------------
section_temp 0
section h inf
757897654678648654564564645645645696 / 34 ::== 22291107490548489840134254283695460
            ----->  | *2 44582214981096979680268508567390920
            ----->  /2 11145553745274244920067127141847730
                 --> 5572776872637122460033563570923865
                 --> 2786388436318561230016781785461932.5
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 198757389262074796111295218024281600 445822149810969796.80268508567390928210016909361002
i insert 12422336828879674756955951126517600 111455537452742449.20067127141847732052504227340251
i insert 0 0
i insert 124223368288796727507562769771536 11145553745274244.920067127141847731705559532144889
i insert 77639605180497967509613538172591128 278638843631856123.00167817854619328743481787569181
CDIS Start 
section_temp 0
section h inf
22291107490548489840134254283695460 / 10 ::== 2229110749054848984013425428369546
            ----->  | *2 4458221498109697968026850856739092
            ----->  /2 1114555374527424492006712714184773
                 --> 557277687263712246003356357092386.5
                 --> 278638843631856123001678178546193.25
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 198757389262074796111295218024281600 445822149810969796.80268508567390928210016909361002
i insert 12422336828879674756955951126517600 111455537452742449.20067127141847732052504227340251
i insert 0 0
i insert 124223368288796727507562769771536 11145553745274244.920067127141847731705559532144889
i insert 77639605180497967509613538172591128 278638843631856123.00167817854619328743481787569181
section_temp 0
section h inf
2229110749054848984013425428369546 / 1 ::== 2229110749054848984013425428369546
            ----->  | *2 4458221498109697968026850856739092
            ----->  /2 1114555374527424492006712714184773
                 --> 557277687263712246003356357092386.5
                 --> 278638843631856123001678178546193.25
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 198757389262074796111295218024281600 445822149810969796.80268508567390928210016909361002
i insert 12422336828879674756955951126517600 111455537452742449.20067127141847732052504227340251
i insert 0 0
i insert 124223368288796727507562769771536 11145553745274244.920067127141847731705559532144889
i insert 77639605180497967509613538172591128 278638843631856123.00167817854619328743481787569181
CDIS End 
section_temp 0
section h inf
757897654678648654564564645645645696 / 16 ::== 47368603417415540910285290352852856
            ----->  | *2 94737206834831081820570580705705712
            ----->  /2 23684301708707770455142645176426428
                 --> 11842150854353885227571322588213214
                 --> 5921075427176942613785661294106607
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 8975138358865564888742305803628561 94737206834831081.820570580705705709956276905359118
i insert 56094614742909781265168462533911616 236843017087077704.5514264517642642748906922633978
i insert 0 0
i insert 560946147429097793704243258372900 23684301708707770.45514264517642642748906922633978
i insert 350591342143186134091517976272336128 592107542717694261.37856612941066070110451846630895
section_temp 50
section h 4554673405520725087527431764697.3798828125
47368603417415540910285290352852856 / 208 ::== 227733670276036254376371588234869.5
            ----->  | *2 455467340552072508752743176469738
            ----->  /2 113866835138018127188185794117434.5
                 --> 56933417569009063594092897058717.25
                 --> 28466708784504531797046448529358.625
            ----->  section 4554673405520725087527431764697.3798828125
                 --> of section *2 9109346811041450175054863529394.759765625
                 --> of section /2 2277336702760362543763715882348.68994140625

i insert 207450498309577593716561494089410048 455467340552072508.75274317646973804007970443308295
i insert 12965656144348599607285093380588128 113866835138018127.18818579411743451001992610827074
i insert 2500 50
i insert 207450498309577593716561494089410048 455467340552072508.75274317646973804007970443308295
i insert 8298019932383103639350298031079001 91093468110414501.75054863529394760801594088661659
i insert 51862624577394398429140373522352512 227733670276036254.37637158823486902003985221654148
i insert 129656561443485980131494014483344 11386683513801812.718818579411743451001992610827074
i insert 81035350902178747260864745783630488 284667087845045317.97046448529358628198870917458407
removals 
reporing rt 4
section_temp 0
section h inf
22291107490548489840134254283695460 - 227733670276036254376371588234869.5 ::== 22063373820272453585757882695460592
            ----->  | *2 44126747640544907171515765390921184
            ----->  /2 11031686910136226792878941347730296
                 --> 5515843455068113396439470673865148
                 --> 2757921727534056698219735336932574
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 194716985733233552577818541174763040 441267476405449071.71515765390921187671935399521317
i insert 12169811608327096870638355171379288 110316869101362267.92878941347730296917983849880329
i insert 0 0
i insert 121698116083270953262021877523076 11031686910136226.792878941347730296224094459489606
i insert 76061322552044356268866238081337560 275792172753405669.82197353369325742988849015091546
section_temp 50
section h 40027541575576254592741076802693.51953125
2229110749054848984013425428369546 - 227733670276036254376371588234869.5 ::== 2001377078778812729637053840134676.5
            ----->  | *2 4002754157557625459274107680269352
            ----->  /2 1000688539389406364818526920067338
                 --> 500344269694703182409263460033669
                 --> 250172134847351591204631730016834.5
            ----->  section 40027541575576254592741076802693.51953125
                 --> of section *2 80055083151152509185482153605387.0390625
                 --> of section /2 20013770787788127296370538401346.759765625

i insert 160220408458448558253839374424877024 400275415755762545.92741076802693517278086687838368
i insert 10013775528653034840830533932084496 100068853938940636.48185269200673379319521671959592
i insert 2500 50
i insert 160220408458448558253839374424877024 400275415755762545.92741076802693517278086687838368
i insert 640881633833794234616459160722558272 800550831511525091.85482153605387034556173375676735
i insert 40055102114612139363322135728337984 200137707877881272.96370538401346758639043343919184
i insert 100137755286530336400042866647969 10006885393894063.648185269200673378625632281568869
i insert 62586097054081468255535106770231280 250172134847351591.20463173001683448992693570289703
section_temp 500
section h 4002754157557625459274107680269.35205078125
2229110749054848984013425428369546 - 227733670276036254376371588234869.5 ::== 2001377078778812729637053840134676.5
            ----->  | *2 4002754157557625459274107680269352
            ----->  /2 1000688539389406364818526920067338
                 --> 500344269694703182409263460033669
                 --> 250172134847351591204631730016834.5
            ----->  section 4002754157557625459274107680269.35205078125
                 --> of section *2 8005508315115250918548215360538.7041015625
                 --> of section /2 2001377078778812729637053840134.676025390625

i insert 160220408458448558253839374424877024 400275415755762545.92741076802693517278086687838368
i insert 10013775528653034840830533932084496 100068853938940636.48185269200673379319521671959592
i insert 250000 500
i insert 160220408458448558253839374424877024 400275415755762545.92741076802693517278086687838368
i insert 640881633833794234616459160722558272 800550831511525091.85482153605387034556173375676735
i insert 40055102114612139363322135728337984 200137707877881272.96370538401346758639043343919184
i insert 100137755286530336400042866647969 10006885393894063.648185269200673378625632281568869
i insert 62586097054081468255535106770231280 250172134847351591.20463173001683448992693570289703
section_temp 0
section h inf
47368603417415540910285290352852856 - 227733670276036254376371588234869.5 ::== 47140869747139504655908918764617984
            ----->  | *2 94281739494279009311817837529235968
            ----->  /2 23570434873569752327954459382308992
                 --> 11785217436784876163977229691154496
                 --> 5892608718392438081988614845577248
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 8889046402067090283745040738022081 94281739494279009.311817837529235961091522710830759
i insert 55556540012919314509110853348335528 235704348735697523.27954459382308990966770068098413
i insert 0 0
i insert 555565400129193130948847609341504 23570434873569752.32795445938230899027288067770769
i insert 347228375080745716271203705266340864 589260871839243808.19886148455772478804703951027477
ending sqti reporting the results 
reporting size of xl vector 53 64
entering amfidromi loop of xl vector  with first 
 of 445822149810969796.80268508567390928210016909361002 ^2 ::== 198757389262074796827004799056971040 as intpart 198757389262074796111295218024281600  diafora 559140265416573858453269427621364096 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 111455537452742449.20067127141847732052504227340251 ^2 ::== 12422336828879674801687799941060690 as intpart 12422336828879674756955951126517600  diafora 745475317849768979807608694519128064 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 757897654678648654564564645645645696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 11145553745274244.920067127141847731705559532144889 ^2 ::== 124223368288796748016877999410606.890625 as intpart 124223368288796727507562769771536  diafora 757773431310359857837057082875874176 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 278638843631856123.00167817854619328743481787569181 ^2 ::== 77639605180497967510548749631629304 as intpart 77639605180497967509613538172591128  diafora 680258049498150687054951107473054592 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 445822149810969796.80268508567390928210016909361002 ^2 ::== 198757389262074796827004799056971040 as intpart 198757389262074796111295218024281600  diafora 559140265416573858453269427621364096 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 111455537452742449.20067127141847732052504227340251 ^2 ::== 12422336828879674801687799941060690 as intpart 12422336828879674756955951126517600  diafora 745475317849768979807608694519128064 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 757897654678648654564564645645645696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 11145553745274244.920067127141847731705559532144889 ^2 ::== 124223368288796748016877999410606.890625 as intpart 124223368288796727507562769771536  diafora 757773431310359857837057082875874176 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 278638843631856123.00167817854619328743481787569181 ^2 ::== 77639605180497967510548749631629304 as intpart 77639605180497967509613538172591128  diafora 680258049498150687054951107473054592 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 445822149810969796.80268508567390928210016909361002 ^2 ::== 198757389262074796827004799056971040 as intpart 198757389262074796111295218024281600  diafora 559140265416573858453269427621364096 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 111455537452742449.20067127141847732052504227340251 ^2 ::== 12422336828879674801687799941060690 as intpart 12422336828879674756955951126517600  diafora 745475317849768979807608694519128064 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 757897654678648654564564645645645696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 11145553745274244.920067127141847731705559532144889 ^2 ::== 124223368288796748016877999410606.890625 as intpart 124223368288796727507562769771536  diafora 757773431310359857837057082875874176 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 278638843631856123.00167817854619328743481787569181 ^2 ::== 77639605180497967510548749631629304 as intpart 77639605180497967509613538172591128  diafora 680258049498150687054951107473054592 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 94737206834831081.820570580705705709956276905359118 ^2 ::== 8975138358865565044219435457416346 as intpart 8975138358865564888742305803628561  diafora 748922516319783089675822339842017152 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 236843017087077704.5514264517642642748906922633978 ^2 ::== 56094614742909781526371471608852160 as intpart 56094614742909781265168462533911616  diafora 701803039935738873299396183111734016 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 757897654678648654564564645645645696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 23684301708707770.45514264517642642748906922633978 ^2 ::== 560946147429097815263714716088521.625 as intpart 560946147429097793704243258372900  diafora 757336708531219556770860402387272832 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 592107542717694261.37856612941066070110451846630895 ^2 ::== 350591342143186134539821697555326016 as intpart 350591342143186134091517976272336128  diafora 407306312535462520473046669373309568 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 455467340552072508.75274317646973804007970443308295 ^2 ::== 207450498309577594402261359500192032 as intpart 207450498309577593716561494089410048  diafora 550447156369071060848003151556235648 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 113866835138018127.18818579411743451001992610827074 ^2 ::== 12965656144348599650141334968762002 as intpart 12965656144348599607285093380588128  diafora 744931998534300054957279552265057536 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 50 ^2 ::== 2500 as intpart 2500  diafora 757897654678648654564564645645643136 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 455467340552072508.75274317646973804007970443308295 ^2 ::== 207450498309577594402261359500192032 as intpart 207450498309577593716561494089410048  diafora 550447156369071060848003151556235648 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 91093468110414501.75054863529394760801594088661659 ^2 ::== 8298019932383103776090454380007682 as intpart 8298019932383103639350298031079001  diafora 749599634746265550925214347614566656 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 227733670276036254.37637158823486902003985221654148 ^2 ::== 51862624577394398600565339875048008 as intpart 51862624577394398429140373522352512  diafora 706035030101254256135424272123293184 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 11386683513801812.718818579411743451001992610827074 ^2 ::== 129656561443485996501413349687620.03125 as intpart 129656561443485980131494014483344  diafora 757767998117205168584433151631162368 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 284667087845045317.97046448529358628198870917458407 ^2 ::== 81035350902178747813383343554762520 as intpart 81035350902178747260864745783630488  diafora 676862303776469907303699899862015232 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 441267476405449071.71515765390921187671935399521317 ^2 ::== 194716985733233553208970167519881984 as intpart 194716985733233552577818541174763040  diafora 563180668945415101986746104470882688 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 110316869101362267.92878941347730296917983849880329 ^2 ::== 12169811608327097075560635469992624 as intpart 12169811608327096870638355171379288  diafora 745727843070321557693926290474266368 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 757897654678648654564564645645645696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 11031686910136226.792878941347730296224094459489606 ^2 ::== 121698116083270970755606354699926.21875 as intpart 121698116083270953262021877523076  diafora 757775956562565383611302623768122624 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 275792172753405669.82197353369325742988849015091546 ^2 ::== 76061322552044356722253971687453896 as intpart 76061322552044356268866238081337560  diafora 681836332126604298295698407564308096 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 400275415755762545.92741076802693517278086687838368 ^2 ::== 160220408458448558996278835921582080 as intpart 160220408458448558253839374424877024  diafora 597677246220200096310725271220768640 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 100068853938940636.48185269200673379319521671959592 ^2 ::== 10013775528653034937267427245098880 as intpart 10013775528653034840830533932084496  diafora 747883879149995619723734111713561216 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 50 ^2 ::== 2500 as intpart 2500  diafora 757897654678648654564564645645643136 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 400275415755762545.92741076802693517278086687838368 ^2 ::== 160220408458448558996278835921582080 as intpart 160220408458448558253839374424877024  diafora 597677246220200096310725271220768640 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 800550831511525091.85482153605387034556173375676735 ^2 ::== 640881633833794235985115343686328320 as intpart 640881633833794234616459160722558272  diafora 117016020844854419948105484923087424 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 200137707877881272.96370538401346758639043343919184 ^2 ::== 40055102114612139749069708980395520 as intpart 40055102114612139363322135728337984  diafora 717842552564036515201242509917307648 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 10006885393894063.648185269200673378625632281568869 ^2 ::== 100137755286530349372674272450988.796875 as intpart 100137755286530336400042866647969  diafora 757797516923362124228164602778997760 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 250172134847351591.20463173001683448992693570289703 ^2 ::== 62586097054081468357921420281868008 as intpart 62586097054081468255535106770231280  diafora 695311557624567186309029538875414400 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 400275415755762545.92741076802693517278086687838368 ^2 ::== 160220408458448558996278835921582080 as intpart 160220408458448558253839374424877024  diafora 597677246220200096310725271220768640 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 100068853938940636.48185269200673379319521671959592 ^2 ::== 10013775528653034937267427245098880 as intpart 10013775528653034840830533932084496  diafora 747883879149995619723734111713561216 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 500 ^2 ::== 250000 as intpart 250000  diafora 757897654678648654564564645645395712 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 400275415755762545.92741076802693517278086687838368 ^2 ::== 160220408458448558996278835921582080 as intpart 160220408458448558253839374424877024  diafora 597677246220200096310725271220768640 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 800550831511525091.85482153605387034556173375676735 ^2 ::== 640881633833794235985115343686328320 as intpart 640881633833794234616459160722558272  diafora 117016020844854419948105484923087424 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 200137707877881272.96370538401346758639043343919184 ^2 ::== 40055102114612139749069708980395520 as intpart 40055102114612139363322135728337984  diafora 717842552564036515201242509917307648 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 10006885393894063.648185269200673378625632281568869 ^2 ::== 100137755286530349372674272450988.796875 as intpart 100137755286530336400042866647969  diafora 757797516923362124228164602778997760 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 250172134847351591.20463173001683448992693570289703 ^2 ::== 62586097054081468357921420281868008 as intpart 62586097054081468255535106770231280  diafora 695311557624567186309029538875414400 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 94281739494279009.311817837529235961091522710830759 ^2 ::== 8889046402067090342542496993223764 as intpart 8889046402067090283745040738022081  diafora 749008608276581564280819604907623552 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 235704348735697523.27954459382308990966770068098413 ^2 ::== 55556540012919314640890606207648528 as intpart 55556540012919314509110853348335528  diafora 702341114665729340055453792297310208 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 757897654678648654564564645645645696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 23570434873569752.32795445938230899027288067770769 ^2 ::== 555565400129193146408906062076485.25 as intpart 555565400129193130948847609341504  diafora 757342089278519461433615798036304128 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 589260871839243808.19886148455772478804703951027477 ^2 ::== 347228375080745716505566288797803328 as intpart 347228375080745716271203705266340864  diafora 410669279597902938293360940379304832 from 757897654678648654564564645645645696
the size of xpl vector is 53 64
 of 800550831511525091.85482153605387034556173375676735 ^2 ::== 640881633833794235985115343686328320 as intpart 640881633833794234616459160722558272  diafora 117016020844854419948105484923087424 from 757897654678648654564564645645645696
 of 800550831511525091.85482153605387034556173375676735 ^2 ::== 640881633833794235985115343686328320 as intpart 640881633833794234616459160722558272  diafora 117016020844854419948105484923087424 from 757897654678648654564564645645645696

-------------------------------------------------------------------------

9 |25| 34 |16| 870573175947116265.48080546204937801846313050191384  and main 757897654678648654564564645645645696
-------------------------------------------------------------------------
section_temp 0
section h inf
757897654678648654564564645645645696 / 25 ::== 30315906187145946182582585825825828
            ----->  | *2 60631812374291892365165171651651656
            ----->  /2 15157953093572973091291292912912914
                 --> 7578976546786486545645646456456457
                 --> 3789488273393243272822823228228228.5
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 367621667179133543421011584151479936 606318123742918923.65165171651651654372017219429836
i insert 22976354198695846236443927605872900 151579530935729730.91291292912912913593004304857459
i insert 0 0
i insert 229763541986958462364439276058729 15157953093572973.091291292912912913246059609662098
i insert 143602213741849040493569856894002928 378948827339324327.28228232282282283982510762143647
CDIS Start 
section_temp 0
section h inf
30315906187145946182582585825825828 / 10 ::== 3031590618714594618258258582582583
            ----->  | *2 6063181237429189236516517165165166
            ----->  /2 1515795309357297309129129291291291.5
                 --> 757897654678648654564564645645645.75
                 --> 378948827339324327282282322822822.875
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 367621667179133543421011584151479936 606318123742918923.65165171651651654372017219429836
i insert 22976354198695846236443927605872900 151579530935729730.91291292912912913593004304857459
i insert 0 0
i insert 229763541986958462364439276058729 15157953093572973.091291292912912913246059609662098
i insert 143602213741849040493569856894002928 378948827339324327.28228232282282283982510762143647
section_temp 0
section h inf
3031590618714594618258258582582583 / 1 ::== 3031590618714594618258258582582583
            ----->  | *2 6063181237429189236516517165165166
            ----->  /2 1515795309357297309129129291291291.5
                 --> 757897654678648654564564645645645.75
                 --> 378948827339324327282282322822822.875
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 367621667179133543421011584151479936 606318123742918923.65165171651651654372017219429836
i insert 22976354198695846236443927605872900 151579530935729730.91291292912912913593004304857459
i insert 0 0
i insert 229763541986958462364439276058729 15157953093572973.091291292912912913246059609662098
i insert 143602213741849040493569856894002928 378948827339324327.28228232282282283982510762143647
CDIS End 
section_temp 0
section h inf
757897654678648654564564645645645696 / 16 ::== 47368603417415540910285290352852856
            ----->  | *2 94737206834831081820570580705705712
            ----->  /2 23684301708707770455142645176426428
                 --> 11842150854353885227571322588213214
                 --> 5921075427176942613785661294106607
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 8975138358865564888742305803628561 94737206834831081.820570580705705709956276905359118
i insert 56094614742909781265168462533911616 236843017087077704.5514264517642642748906922633978
i insert 0 0
i insert 560946147429097793704243258372900 23684301708707770.45514264517642642748906922633978
i insert 350591342143186134091517976272336128 592107542717694261.37856612941066070110451846630895
section_temp 500
section h 455467340552072508752743176469.73797607421875
47368603417415540910285290352852856 / 208 ::== 227733670276036254376371588234869.5
            ----->  | *2 455467340552072508752743176469738
            ----->  /2 113866835138018127188185794117434.5
                 --> 56933417569009063594092897058717.25
                 --> 28466708784504531797046448529358.625
            ----->  section 455467340552072508752743176469.73797607421875
                 --> of section *2 910934681104145017505486352939.4759521484375
                 --> of section /2 227733670276036254376371588234.868988037109375

i insert 207450498309577593716561494089410048 455467340552072508.75274317646973804007970443308295
i insert 12965656144348599607285093380588128 113866835138018127.18818579411743451001992610827074
i insert 250000 500
i insert 207450498309577593716561494089410048 455467340552072508.75274317646973804007970443308295
i insert 8298019932383103639350298031079001 91093468110414501.75054863529394760801594088661659
i insert 51862624577394398429140373522352512 227733670276036254.37637158823486902003985221654148
i insert 129656561443485980131494014483344 11386683513801812.718818579411743451001992610827074
i insert 81035350902178747260864745783630488 284667087845045317.97046448529358628198870917458407
removals 
reporing rt 4
section_temp 0
section h inf
30315906187145946182582585825825828 - 227733670276036254376371588234869.5 ::== 30088172516869909928206214237590960
            ----->  | *2 60176345033739819856412428475181920
            ----->  /2 15044086258434954964103107118795480
                 --> 7522043129217477482051553559397740
                 --> 3761021564608738741025776779698870
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 362119250161970307418363744013647232 601763450337398198.56412428475181930487281078967499
i insert 22632453135123144063206871416503400 150440862584349549.64103107118795482621820269741875
i insert 0 0
i insert 226324531351231413552713448982116 15044086258434954.964103107118795482968764964937236
i insert 141452832094519651523349415735767872 376102156460873874.10257767796988709330108235917578
section_temp 500
section h 5607713896877116727763773988695.42578125
3031590618714594618258258582582583 - 227733670276036254376371588234869.5 ::== 2803856948438558363881886994347713.5
            ----->  | *2 5607713896877116727763773988695426
            ----->  /2 1401928474219279181940943497173856.5
                 --> 700964237109639590970471748586928.25
                 --> 350482118554819795485235874293464.125
            ----->  section 5607713896877116727763773988695.42578125
                 --> of section *2 11215427793754233455527547977390.8515625
                 --> of section /2 2803856948438558363881886994347.712890625

i insert 314464551492287380550852159805035584 560771389687711672.77637739886954265644547490410332
i insert 19654034468267961284428259987814724 140192847421927918.19409434971738566411136872602583
i insert 250000 500
i insert 314464551492287380550852159805035584 560771389687711672.77637739886954265644547490410332
i insert 12578582059691495132310664042167556 112154277937542334.55527547977390853684021010394645
i insert 78616137873071845137713039951258896 280385694843855836.38818869943477132822273745205166
i insert 196540344682679590413427012369681 14019284742192791.819409434971738567105026262993306
i insert 122837715426674758027676624923842032 350482118554819795.48523587429346415333952791115735
section_temp 50
section h 56077138968771167277637739886954.2578125
3031590618714594618258258582582583 - 227733670276036254376371588234869.5 ::== 2803856948438558363881886994347713.5
            ----->  | *2 5607713896877116727763773988695426
            ----->  /2 1401928474219279181940943497173856.5
                 --> 700964237109639590970471748586928.25
                 --> 350482118554819795485235874293464.125
            ----->  section 56077138968771167277637739886954.2578125
                 --> of section *2 112154277937542334555275479773908.515625
                 --> of section /2 28038569484385583638818869943477.12890625

i insert 314464551492287380550852159805035584 560771389687711672.77637739886954265644547490410332
i insert 19654034468267961284428259987814724 140192847421927918.19409434971738566411136872602583
i insert 2500 50
i insert 314464551492287380550852159805035584 560771389687711672.77637739886954265644547490410332
i insert 12578582059691495132310664042167556 112154277937542334.55527547977390853684021010394645
i insert 78616137873071845137713039951258896 280385694843855836.38818869943477132822273745205166
i insert 196540344682679590413427012369681 14019284742192791.819409434971738567105026262993306
i insert 122837715426674758027676624923842032 350482118554819795.48523587429346415333952791115735
section_temp 0
section h inf
47368603417415540910285290352852856 - 227733670276036254376371588234869.5 ::== 47140869747139504655908918764617984
            ----->  | *2 94281739494279009311817837529235968
            ----->  /2 23570434873569752327954459382308992
                 --> 11785217436784876163977229691154496
                 --> 5892608718392438081988614845577248
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 8889046402067090283745040738022081 94281739494279009.311817837529235961091522710830759
i insert 55556540012919314509110853348335528 235704348735697523.27954459382308990966770068098413
i insert 0 0
i insert 555565400129193130948847609341504 23570434873569752.32795445938230899027288067770769
i insert 347228375080745716271203705266340864 589260871839243808.19886148455772478804703951027477
ending sqti reporting the results 
reporting size of xl vector 53 64
entering amfidromi loop of xl vector  with first 
 of 606318123742918923.65165171651651654372017219429836 ^2 ::== 367621667179133544211228076335773504 as intpart 367621667179133543421011584151479936  diafora 390275987499515111143553061494165760 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 151579530935729730.91291292912912913593004304857459 ^2 ::== 22976354198695846513201754770985844 as intpart 22976354198695846236443927605872900  diafora 734921300479952808328120718039772800 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 757897654678648654564564645645645696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 15157953093572973.091291292912912913246059609662098 ^2 ::== 229763541986958465132017547709858.4375 as intpart 229763541986958462364439276058729  diafora 757667891136661696102200206369586944 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 378948827339324327.28228232282282283982510762143647 ^2 ::== 143602213741849040707510967318661536 as intpart 143602213741849040493569856894002928  diafora 614295440936799614070994788751642752 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 606318123742918923.65165171651651654372017219429836 ^2 ::== 367621667179133544211228076335773504 as intpart 367621667179133543421011584151479936  diafora 390275987499515111143553061494165760 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 151579530935729730.91291292912912913593004304857459 ^2 ::== 22976354198695846513201754770985844 as intpart 22976354198695846236443927605872900  diafora 734921300479952808328120718039772800 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 757897654678648654564564645645645696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 15157953093572973.091291292912912913246059609662098 ^2 ::== 229763541986958465132017547709858.4375 as intpart 229763541986958462364439276058729  diafora 757667891136661696102200206369586944 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 378948827339324327.28228232282282283982510762143647 ^2 ::== 143602213741849040707510967318661536 as intpart 143602213741849040493569856894002928  diafora 614295440936799614070994788751642752 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 606318123742918923.65165171651651654372017219429836 ^2 ::== 367621667179133544211228076335773504 as intpart 367621667179133543421011584151479936  diafora 390275987499515111143553061494165760 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 151579530935729730.91291292912912913593004304857459 ^2 ::== 22976354198695846513201754770985844 as intpart 22976354198695846236443927605872900  diafora 734921300479952808328120718039772800 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 757897654678648654564564645645645696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 15157953093572973.091291292912912913246059609662098 ^2 ::== 229763541986958465132017547709858.4375 as intpart 229763541986958462364439276058729  diafora 757667891136661696102200206369586944 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 378948827339324327.28228232282282283982510762143647 ^2 ::== 143602213741849040707510967318661536 as intpart 143602213741849040493569856894002928  diafora 614295440936799614070994788751642752 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 94737206834831081.820570580705705709956276905359118 ^2 ::== 8975138358865565044219435457416346 as intpart 8975138358865564888742305803628561  diafora 748922516319783089675822339842017152 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 236843017087077704.5514264517642642748906922633978 ^2 ::== 56094614742909781526371471608852160 as intpart 56094614742909781265168462533911616  diafora 701803039935738873299396183111734016 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 757897654678648654564564645645645696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 23684301708707770.45514264517642642748906922633978 ^2 ::== 560946147429097815263714716088521.625 as intpart 560946147429097793704243258372900  diafora 757336708531219556770860402387272832 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 592107542717694261.37856612941066070110451846630895 ^2 ::== 350591342143186134539821697555326016 as intpart 350591342143186134091517976272336128  diafora 407306312535462520473046669373309568 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 455467340552072508.75274317646973804007970443308295 ^2 ::== 207450498309577594402261359500192032 as intpart 207450498309577593716561494089410048  diafora 550447156369071060848003151556235648 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 113866835138018127.18818579411743451001992610827074 ^2 ::== 12965656144348599650141334968762002 as intpart 12965656144348599607285093380588128  diafora 744931998534300054957279552265057536 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 500 ^2 ::== 250000 as intpart 250000  diafora 757897654678648654564564645645395712 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 455467340552072508.75274317646973804007970443308295 ^2 ::== 207450498309577594402261359500192032 as intpart 207450498309577593716561494089410048  diafora 550447156369071060848003151556235648 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 91093468110414501.75054863529394760801594088661659 ^2 ::== 8298019932383103776090454380007682 as intpart 8298019932383103639350298031079001  diafora 749599634746265550925214347614566656 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 227733670276036254.37637158823486902003985221654148 ^2 ::== 51862624577394398600565339875048008 as intpart 51862624577394398429140373522352512  diafora 706035030101254256135424272123293184 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 11386683513801812.718818579411743451001992610827074 ^2 ::== 129656561443485996501413349687620.03125 as intpart 129656561443485980131494014483344  diafora 757767998117205168584433151631162368 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 284667087845045317.97046448529358628198870917458407 ^2 ::== 81035350902178747813383343554762520 as intpart 81035350902178747260864745783630488  diafora 676862303776469907303699899862015232 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 601763450337398198.56412428475181930487281078967499 ^2 ::== 362119250161970308097302496036390592 as intpart 362119250161970307418363744013647232  diafora 395778404516678347146200901631998464 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 150440862584349549.64103107118795482621820269741875 ^2 ::== 22632453135123144256081406002274412 as intpart 22632453135123144063206871416503400  diafora 735265201543525510501357774229142272 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 757897654678648654564564645645645696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 15044086258434954.964103107118795482968764964937236 ^2 ::== 226324531351231442560814060022744.125 as intpart 226324531351231413552713448982116  diafora 757671330147297423151011932196663552 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 376102156460873874.10257767796988709330108235917578 ^2 ::== 141452832094519651600508787514215104 as intpart 141452832094519651523349415735767872  diafora 616444822584129003041215229909877824 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 560771389687711672.77637739886954265644547490410332 ^2 ::== 314464551492287381421592625577444128 as intpart 314464551492287380550852159805035584  diafora 443433103186361274013712485840610112 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 140192847421927918.19409434971738566411136872602583 ^2 ::== 19654034468267961338849539098590258 as intpart 19654034468267961284428259987814724  diafora 738243620210380693280136385657830912 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 500 ^2 ::== 250000 as intpart 250000  diafora 757897654678648654564564645645395712 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 560771389687711672.77637739886954265644547490410332 ^2 ::== 314464551492287381421592625577444128 as intpart 314464551492287380550852159805035584  diafora 443433103186361274013712485840610112 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 112154277937542334.55527547977390853684021010394645 ^2 ::== 12578582059691495256863705023097766 as intpart 12578582059691495132310664042167556  diafora 745319072618957159432253981603478144 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 280385694843855836.38818869943477132822273745205166 ^2 ::== 78616137873071845355398156394361032 as intpart 78616137873071845137713039951258896  diafora 679281516805576809426851605694386816 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 14019284742192791.819409434971738567105026262993306 ^2 ::== 196540344682679613388495390985902.59375 as intpart 196540344682679590413427012369681  diafora 757701114333965974974151218633276032 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 350482118554819795.48523587429346415333952791115735 ^2 ::== 122837715426674758367809619366189104 as intpart 122837715426674758027676624923842032  diafora 635059939251973896536888020721803648 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 560771389687711672.77637739886954265644547490410332 ^2 ::== 314464551492287381421592625577444128 as intpart 314464551492287380550852159805035584  diafora 443433103186361274013712485840610112 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 140192847421927918.19409434971738566411136872602583 ^2 ::== 19654034468267961338849539098590258 as intpart 19654034468267961284428259987814724  diafora 738243620210380693280136385657830912 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 50 ^2 ::== 2500 as intpart 2500  diafora 757897654678648654564564645645643136 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 560771389687711672.77637739886954265644547490410332 ^2 ::== 314464551492287381421592625577444128 as intpart 314464551492287380550852159805035584  diafora 443433103186361274013712485840610112 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 112154277937542334.55527547977390853684021010394645 ^2 ::== 12578582059691495256863705023097766 as intpart 12578582059691495132310664042167556  diafora 745319072618957159432253981603478144 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 280385694843855836.38818869943477132822273745205166 ^2 ::== 78616137873071845355398156394361032 as intpart 78616137873071845137713039951258896  diafora 679281516805576809426851605694386816 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 14019284742192791.819409434971738567105026262993306 ^2 ::== 196540344682679613388495390985902.59375 as intpart 196540344682679590413427012369681  diafora 757701114333965974974151218633276032 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 350482118554819795.48523587429346415333952791115735 ^2 ::== 122837715426674758367809619366189104 as intpart 122837715426674758027676624923842032  diafora 635059939251973896536888020721803648 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 94281739494279009.311817837529235961091522710830759 ^2 ::== 8889046402067090342542496993223764 as intpart 8889046402067090283745040738022081  diafora 749008608276581564280819604907623552 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 235704348735697523.27954459382308990966770068098413 ^2 ::== 55556540012919314640890606207648528 as intpart 55556540012919314509110853348335528  diafora 702341114665729340055453792297310208 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 757897654678648654564564645645645696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 23570434873569752.32795445938230899027288067770769 ^2 ::== 555565400129193146408906062076485.25 as intpart 555565400129193130948847609341504  diafora 757342089278519461433615798036304128 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 589260871839243808.19886148455772478804703951027477 ^2 ::== 347228375080745716505566288797803328 as intpart 347228375080745716271203705266340864  diafora 410669279597902938293360940379304832 from 757897654678648654564564645645645696
the size of xpl vector is 53 64
 of 606318123742918923.65165171651651654372017219429836 ^2 ::== 367621667179133544211228076335773504 as intpart 367621667179133543421011584151479936  diafora 390275987499515111143553061494165760 from 757897654678648654564564645645645696
 of 606318123742918923.65165171651651654372017219429836 ^2 ::== 367621667179133544211228076335773504 as intpart 367621667179133543421011584151479936  diafora 390275987499515111143553061494165760 from 757897654678648654564564645645645696
 of 606318123742918923.65165171651651654372017219429836 ^2 ::== 367621667179133544211228076335773504 as intpart 367621667179133543421011584151479936  diafora 390275987499515111143553061494165760 from 757897654678648654564564645645645696

-------------------------------------------------------------------------

9 26 |35 17| 870573175947116265.48080546204937801846313050191384  and main 757897654678648654564564645645645696
-------------------------------------------------------------------------
section_temp 0
section h inf
757897654678648654564564645645645696 / 35 ::== 21654218705104247273273275589875592
            ----->  | *2 43308437410208494546546551179751184
            ----->  /2 10827109352552123636636637794937796
                 --> 5413554676276061818318318897468898
                 --> 2706777338138030909159159448734449
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 187562075091394665010720195995653024 433084374102084945.46546551179751183280330906200106
i insert 11722629693212166509034465486967696 108271093525521236.36636637794937795820082726550027
i insert 0 0
i insert 117226296932121652097813431807129 10827109352552123.636636637794937796167027421745388
i insert 73266435582576040681465409293548096 270677733813803090.91591594487344490937985597156512
CDIS Start 
section_temp 2050
section h 1056303351468499866988940272676.8580322265625
21654218705104247273273275589875592 / 10 ::== 2165421870510424727327327558987559.25
            ----->  | *2 4330843741020849454654655117975118
            ----->  /2 1082710935255212363663663779493779.5
                 --> 541355467627606181831831889746889.75
                 --> 270677733813803090915915944873444.875
            ----->  section 1056303351468499866988940272676.8580322265625
                 --> of section *2 2112606702936999733977880545353.716064453125
                 --> of section /2 528151675734249933494470136338.42901611328125

i insert 187562075091394665010720195995653024 433084374102084945.46546551179751183280330906200106
i insert 11722629693212166509034465486967696 108271093525521236.36636637794937795820082726550027
i insert 4202500 2050
i insert 11157767703235851453415538388200196 105630335146849986.69889402726768581897154319904075
i insert 44631070812943406236183494140200728 211260670293699973.3977880545353716379430863980815
i insert 278944192580896289504298514110504480 528151675734249933.49447013633842906710214037957485
i insert 117226296932121652097813431807129 10827109352552123.636636637794937796167027421745388
i insert 73266435582576040681465409293548096 270677733813803090.91591594487344490937985597156512
section_temp 25
section h 86616874820416989093093102359502.359375
2165421870510424727327327558987559.25 / 1 ::== 2165421870510424727327327558987559.25
            ----->  | *2 4330843741020849454654655117975118
            ----->  /2 1082710935255212363663663779493779.5
                 --> 541355467627606181831831889746889.75
                 --> 270677733813803090915915944873444.875
            ----->  section 86616874820416989093093102359502.359375
                 --> of section *2 173233749640833978186186204719004.71875
                 --> of section /2 43308437410208494546546551179751.1796875

i insert 187562075091394665010720195995653024 433084374102084945.46546551179751183280330906200106
i insert 11722629693212166509034465486967696 108271093525521236.36636637794937795820082726550027
i insert 625 25
i insert 750248300365578660042880783982612096 866168748204169890.93093102359502366560661812400213
i insert 30009932014623146401715231359304484 173233749640833978.18618620471900473867243874792621
i insert 187562075091394665010720195995653024 433084374102084945.46546551179751183280330906200106
i insert 117226296932121652097813431807129 10827109352552123.636636637794937796167027421745388
i insert 73266435582576040681465409293548096 270677733813803090.91591594487344490937985597156512
CDIS End 
section_temp 0
section h inf
757897654678648654564564645645645696 / 17 ::== 44582214981096979680268508567390920
            ----->  | *2 89164429962193959360537017134781840
            ----->  /2 22291107490548489840134254283695460
                 --> 11145553745274244920067127141847730
                 --> 5572776872637122460033563570923865
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 7950295570482991808786036736093681 89164429962193959.360537017134781853644476257159113
i insert 49689347315518699027823804506070400 222911074905484898.40134254283695464105008454680501
i insert 0 0
i insert 496893473155186954612466060183121 22291107490548489.840134254283695463411119064289778
i insert 310558420721991870038454152690364512 557277687263712246.00335635709238657486963575138361
section_temp 81
section h 2646142864500058148164085266345.60498046875
44582214981096979680268508567390920 / 208 ::== 214337572024504710001290906573994.8125
            ----->  | *2 428675144049009420002581813147988
            ----->  /2 107168786012252355000645453286997
                 --> 53584393006126177500322726643498.5
                 --> 26792196503063088750161363321749.25
            ----->  section 2646142864500058148164085266345.60498046875
                 --> of section *2 5292285729000116296328170532691.2099609375
                 --> of section /2 1323071432250029074082042633172.802490234375

i insert 183762379125438976354114883248736384 428675144049009420.00258181314798788807962637292803
i insert 11485148695339936022132180203046024 107168786012252355.00064545328699697201990659323201
i insert 6561 81
i insert 70020720593445730537422840633802592 264614286450005814.81640852663456048299295275683107
i insert 280082882373782923208148508335233632 529228572900011629.63281705326912096598590551366215
i insert 17505180148361432634355710158450648 132307143225002907.40820426331728024149647637841554
i insert 114851486953399349504443200805225 10716878601225235.500064545328699696855045964127839
i insert 71782179345874599870404161238406768 267921965030630887.50161363321749244392755429089448
removals 
reporing rt 4
section_temp 0
section h inf
21654218705104247273273275589875592 - 214337572024504710001290906573994.8125 ::== 21439881133079742563271984683301596
            ----->  | *2 42879762266159485126543969366603192
            ----->  /2 10719940566539871281635992341650798
                 --> 5359970283269935640817996170825399
                 --> 2679985141634967820408998085412699.5
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 183867401200235482110196390869712192 428797622661594851.26543969366603181736508076937753
i insert 11491712575014717471088165931258944 107199405665398712.81635992341650795434127019234438
i insert 0 0
i insert 114917125750147170422905432696641 10719940566539871.281635992341650796128016409625161
i insert 71823203593841985266295093724355520 267998514163496782.04089980854126989973096328867541
section_temp 50
section h 39021685969718400346520733048271.28125
2165421870510424727327327558987559.25 - 214337572024504710001290906573994.8125 ::== 1951084298485920017326036652413564.5
            ----->  | *2 3902168596971840034652073304827128
            ----->  /2 975542149242960008663018326206782
                 --> 487771074621480004331509163103391
                 --> 243885537310740002165754581551695.5
            ----->  section 39021685969718400346520733048271.28125
                 --> of section *2 78043371939436800693041466096542.5625
                 --> of section /2 19510842984859200173260366524135.640625

i insert 152269197591931785077478688039104016 390216859697184003.46520733048271278864405076092225
i insert 9516824849495736421011095616000000 97554214924296000.866301832620678197161012690230564
i insert 2500 50
i insert 152269197591931785077478688039104016 390216859697184003.46520733048271278864405076092225
i insert 609076790367727140309914752156416064 780433719394368006.93041466096542557728810152184451
i insert 38067299397982946074261242161184000 195108429848592001.73260366524135639432202538046113
i insert 95168248494957364210110956160000 9755421492429600.0866301832620678200630459642184178
i insert 59480155309348353606861496842960000 243885537310740002.16575458155169550678031953339087
section_temp 500
section h 3902168596971840034652073304827.1279296875
2165421870510424727327327558987559.25 - 214337572024504710001290906573994.8125 ::== 1951084298485920017326036652413564.5
            ----->  | *2 3902168596971840034652073304827128
            ----->  /2 975542149242960008663018326206782
                 --> 487771074621480004331509163103391
                 --> 243885537310740002165754581551695.5
            ----->  section 3902168596971840034652073304827.1279296875
                 --> of section *2 7804337193943680069304146609654.255859375
                 --> of section /2 1951084298485920017326036652413.56396484375

i insert 152269197591931785077478688039104016 390216859697184003.46520733048271278864405076092225
i insert 9516824849495736421011095616000000 97554214924296000.866301832620678197161012690230564
i insert 250000 500
i insert 152269197591931785077478688039104016 390216859697184003.46520733048271278864405076092225
i insert 609076790367727140309914752156416064 780433719394368006.93041466096542557728810152184451
i insert 38067299397982946074261242161184000 195108429848592001.73260366524135639432202538046113
i insert 95168248494957364210110956160000 9755421492429600.0866301832620678200630459642184178
i insert 59480155309348353606861496842960000 243885537310740002.16575458155169550678031953339087
section_temp 0
section h inf
44582214981096979680268508567390920 - 214337572024504710001290906573994.8125 ::== 44367877409072474970267217660816928
            ----->  | *2 88735754818144949940534435321633856
            ----->  /2 22183938704536237485133608830408464
                 --> 11091969352268118742566804415204232
                 --> 5545984676134059371283402207602116
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 7874034183145934530974249574212601 88735754818144949.940534435321633860427326112585433
i insert 49212713644662091484107220974915872 221839387045362374.85133608830408466494610308927804
i insert 0 0
i insert 492127136446620897093921246120169 22183938704536237.485133608830408465106831528146358
i insert 307579460279138073994064001546847968 554598467613405937.12834022076021167624304553100956
ending sqti reporting the results 
reporting size of xl vector 59 64
entering amfidromi loop of xl vector  with first 
 of 433084374102084945.46546551179751183280330906200106 ^2 ::== 187562075091394665413891875681517120 as intpart 187562075091394665010720195995653024  diafora 570335579587253989553844449649992704 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 108271093525521236.36636637794937795820082726550027 ^2 ::== 11722629693212166588368242230094820 as intpart 11722629693212166509034465486967696  diafora 746175024985436488055530180158678016 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 757897654678648654564564645645645696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 10827109352552123.636636637794937796167027421745388 ^2 ::== 117226296932121665883682422300948.203125 as intpart 117226296932121652097813431807129  diafora 757780428381716532912466832213838592 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 270677733813803090.91591594487344490937985597156512 ^2 ::== 73266435582576041177301513938092632 as intpart 73266435582576040681465409293548096  diafora 684631219096072613883099236352097536 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 433084374102084945.46546551179751183280330906200106 ^2 ::== 187562075091394665413891875681517120 as intpart 187562075091394665010720195995653024  diafora 570335579587253989553844449649992704 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 108271093525521236.36636637794937795820082726550027 ^2 ::== 11722629693212166588368242230094820 as intpart 11722629693212166509034465486967696  diafora 746175024985436488055530180158678016 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 2050 ^2 ::== 4202500 as intpart 4202500  diafora 757897654678648654564564645641443200 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 105630335146849986.69889402726768581897154319904075 ^2 ::== 11157767703235851601064359053034928 as intpart 11157767703235851453415538388200196  diafora 746739886975412803111149107257445504 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 211260670293699973.3977880545353716379430863980815 ^2 ::== 44631070812943406404257436212139712 as intpart 44631070812943406236183494140200728  diafora 713266583865705248328381151505444992 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 528151675734249933.49447013633842906710214037957485 ^2 ::== 278944192580896290026608976325873184 as intpart 278944192580896289504298514110504480  diafora 478953462097752365060266131535141248 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 10827109352552123.636636637794937796167027421745388 ^2 ::== 117226296932121665883682422300948.203125 as intpart 117226296932121652097813431807129  diafora 757780428381716532912466832213838592 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 270677733813803090.91591594487344490937985597156512 ^2 ::== 73266435582576041177301513938092632 as intpart 73266435582576040681465409293548096  diafora 684631219096072613883099236352097536 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 433084374102084945.46546551179751183280330906200106 ^2 ::== 187562075091394665413891875681517120 as intpart 187562075091394665010720195995653024  diafora 570335579587253989553844449649992704 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 108271093525521236.36636637794937795820082726550027 ^2 ::== 11722629693212166588368242230094820 as intpart 11722629693212166509034465486967696  diafora 746175024985436488055530180158678016 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 25 ^2 ::== 625 as intpart 625  diafora 757897654678648654564564645645645056 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 866168748204169890.93093102359502366560661812400213 ^2 ::== 750248300365578661655567502726068480 as intpart 750248300365578660042880783982612096  diafora 7649354313069994521683861663033600 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 173233749640833978.18618620471900473867243874792621 ^2 ::== 30009932014623146466222700109042740 as intpart 30009932014623146401715231359304484  diafora 727887722664025508162849414286341248 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 433084374102084945.46546551179751183280330906200106 ^2 ::== 187562075091394665413891875681517120 as intpart 187562075091394665010720195995653024  diafora 570335579587253989553844449649992704 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 10827109352552123.636636637794937796167027421745388 ^2 ::== 117226296932121665883682422300948.203125 as intpart 117226296932121652097813431807129  diafora 757780428381716532912466832213838592 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 270677733813803090.91591594487344490937985597156512 ^2 ::== 73266435582576041177301513938092632 as intpart 73266435582576040681465409293548096  diafora 684631219096072613883099236352097536 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 89164429962193959.360537017134781853644476257159113 ^2 ::== 7950295570482991873080191962278841 as intpart 7950295570482991808786036736093681  diafora 749947359108165662755778608909552000 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 222911074905484898.40134254283695464105008454680501 ^2 ::== 49689347315518699206751199764242760 as intpart 49689347315518699027823804506070400  diafora 708208307363129955536740841139575296 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 757897654678648654564564645645645696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 22291107490548489.840134254283695463411119064289778 ^2 ::== 496893473155186992067511997642427.5625 as intpart 496893473155186954612466060183121  diafora 757400761205493467609952179585462528 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 557277687263712246.00335635709238657486963575138361 ^2 ::== 310558420721991870042194998526517216 as intpart 310558420721991870038454152690364512  diafora 447339233956656784526110492955281152 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 428675144049009420.00258181314798788807962637292803 ^2 ::== 183762379125438976356328401494979072 as intpart 183762379125438976354114883248736384  diafora 574135275553209678210449762396909312 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 107168786012252355.00064545328699697201990659323201 ^2 ::== 11485148695339936022270525093436192 as intpart 11485148695339936022132180203046024  diafora 746412505983308718542432465442599680 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 81 ^2 ::== 6561 as intpart 6561  diafora 757897654678648654564564645645639168 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 264614286450005814.81640852663456048299295275683107 ^2 ::== 70020720593445730969489560088012176 as intpart 70020720593445730537422840633802592  diafora 687876934085202924027141805011843072 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 529228572900011629.63281705326912096598590551366215 ^2 ::== 280082882373782923877958240352048704 as intpart 280082882373782923208148508335233632  diafora 477814772304865731356416137310412032 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 132307143225002907.40820426331728024149647637841554 ^2 ::== 17505180148361432742372390022003044 as intpart 17505180148361432634355710158450648  diafora 740392474530287221930208935487195008 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 10716878601225235.500064545328699696855045964127839 ^2 ::== 114851486953399360222705250934361.90625 as intpart 114851486953399349504443200805225  diafora 757782803191695255215060202444840448 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 267921965030630887.50161363321749244392755429089448 ^2 ::== 71782179345874600139190781833976208 as intpart 71782179345874599870404161238406768  diafora 686115475332774054694160484407238912 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 428797622661594851.26543969366603181736508076937753 ^2 ::== 183867401200235482337836210077745088 as intpart 183867401200235482110196390869712192  diafora 574030253478413172454368254775933504 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 107199405665398712.81635992341650795434127019234438 ^2 ::== 11491712575014717646114763129859068 as intpart 11491712575014717471088165931258944  diafora 746405942103633937093476479714386688 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 757897654678648654564564645645645696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 10719940566539871.281635992341650796128016409625161 ^2 ::== 114917125750147176461147631298590.6875 as intpart 114917125750147170422905432696641  diafora 757782737552898507394141740212948992 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 267998514163496782.04089980854126989973096328867541 ^2 ::== 71823203593841985288217269561619176 as intpart 71823203593841985266295093724355520  diafora 686074451084806669298269551921290240 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 390216859697184003.46520733048271278864405076092225 ^2 ::== 152269197591931785440542175257252496 as intpart 152269197591931785077478688039104016  diafora 605628457086716869487085957606541696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 97554214924296000.866301832620678197161012690230564 ^2 ::== 9516824849495736590033885953578281 as intpart 9516824849495736421011095616000000  diafora 748380829829152918143553550029645696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 50 ^2 ::== 2500 as intpart 2500  diafora 757897654678648654564564645645643136 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 390216859697184003.46520733048271278864405076092225 ^2 ::== 152269197591931785440542175257252496 as intpart 152269197591931785077478688039104016  diafora 605628457086716869487085957606541696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 780433719394368006.93041466096542557728810152184451 ^2 ::== 609076790367727141762168701029009984 as intpart 609076790367727140309914752156416064  diafora 148820864310921514254649893489229632 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 195108429848592001.73260366524135639432202538046113 ^2 ::== 38067299397982946360135543814313124 as intpart 38067299397982946074261242161184000  diafora 719830355280665708490303403484461696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 9755421492429600.0866301832620678200630459642184178 ^2 ::== 95168248494957365900338859535782.828125 as intpart 95168248494957364210110956160000  diafora 757802486430153697200354534689485696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 243885537310740002.16575458155169550678031953339087 ^2 ::== 59480155309348353687711787209864264 as intpart 59480155309348353606861496842960000  diafora 698417499369300300957703148802685696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 390216859697184003.46520733048271278864405076092225 ^2 ::== 152269197591931785440542175257252496 as intpart 152269197591931785077478688039104016  diafora 605628457086716869487085957606541696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 97554214924296000.866301832620678197161012690230564 ^2 ::== 9516824849495736590033885953578281 as intpart 9516824849495736421011095616000000  diafora 748380829829152918143553550029645696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 500 ^2 ::== 250000 as intpart 250000  diafora 757897654678648654564564645645395712 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 390216859697184003.46520733048271278864405076092225 ^2 ::== 152269197591931785440542175257252496 as intpart 152269197591931785077478688039104016  diafora 605628457086716869487085957606541696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 780433719394368006.93041466096542557728810152184451 ^2 ::== 609076790367727141762168701029009984 as intpart 609076790367727140309914752156416064  diafora 148820864310921514254649893489229632 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 195108429848592001.73260366524135639432202538046113 ^2 ::== 38067299397982946360135543814313124 as intpart 38067299397982946074261242161184000  diafora 719830355280665708490303403484461696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 9755421492429600.0866301832620678200630459642184178 ^2 ::== 95168248494957365900338859535782.828125 as intpart 95168248494957364210110956160000  diafora 757802486430153697200354534689485696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 243885537310740002.16575458155169550678031953339087 ^2 ::== 59480155309348353687711787209864264 as intpart 59480155309348353606861496842960000  diafora 698417499369300300957703148802685696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 88735754818144949.940534435321633860427326112585433 ^2 ::== 7874034183145934697892315675658423 as intpart 7874034183145934530974249574212601  diafora 750023620495502720033590396071433088 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 221839387045362374.85133608830408466494610308927804 ^2 ::== 49212713644662091861826972972865152 as intpart 49212713644662091484107220974915872  diafora 708684941033986563080457424670729856 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 757897654678648654564564645645645696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 22183938704536237.485133608830408465106831528146358 ^2 ::== 492127136446620918618269729728651.4375 as intpart 492127136446620897093921246120169  diafora 757405527542202033667470724399525504 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 554598467613405937.12834022076021167624304553100956 ^2 ::== 307579460279138074136418581080407232 as intpart 307579460279138073994064001546847968  diafora 450318194399510580570500644098797696 from 757897654678648654564564645645645696
the size of xpl vector is 59 64
 of 866168748204169890.93093102359502366560661812400213 ^2 ::== 750248300365578661655567502726068480 as intpart 750248300365578660042880783982612096  diafora 7649354313069994521683861663033600 from 757897654678648654564564645645645696

-------------------------------------------------------------------------

9 |26| 35 |17| 870573175947116265.48080546204937801846313050191384  and main 757897654678648654564564645645645696
-------------------------------------------------------------------------
section_temp 0
section h inf
757897654678648654564564645645645696 / 26 ::== 29149909795332640560175563294063296
            ----->  | *2 58299819590665281120351126588126592
            ----->  /2 14574954897666320280087781647031648
                 --> 7287477448833160140043890823515824
                 --> 3643738724416580070021945411757912
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 339886896430411930431371609694201728 582998195906652811.20351126588126589034288826951524
i insert 21242931026900745433336402140892804 145749548976663202.80087781647031647258572206737881
i insert 0 0
i insert 212429310269007448503382062342400 14574954897666320.280087781647031647952461597128604
i insert 132768318918129660415848003147212048 364373872441658007.00219454117579120921988078407594
CDIS Start 
section_temp 50
section h 58299819590665281120351126588126.578125
29149909795332640560175563294063296 / 10 ::== 2914990979533264056017556329406329.5
            ----->  | *2 5829981959066528112035112658812658
            ----->  /2 1457495489766632028008778164703164.5
                 --> 728747744883316014004389082351582.25
                 --> 364373872441658007002194541175791.125
            ----->  section 58299819590665281120351126588126.578125
                 --> of section *2 116599639181330562240702253176253.15625
                 --> of section /2 29149909795332640560175563294063.2890625

i insert 339886896430411930431371609694201728 582998195906652811.20351126588126589034288826951524
i insert 21242931026900745433336402140892804 145749548976663202.80087781647031647258572206737881
i insert 2500 50
i insert 339886896430411930431371609694201728 582998195906652811.20351126588126589034288826951524
i insert 13595475857216477170615008715235844 116599639181330562.24070225317625318361969277702883
i insert 84971724107602982316343804470224032 291499097953326405.60175563294063294517144413475762
i insert 212429310269007448503382062342400 14574954897666320.280087781647031647952461597128604
i insert 132768318918129660415848003147212048 364373872441658007.00219454117579120921988078407594
section_temp 500
section h 5829981959066528112035112658812.658203125
2914990979533264056017556329406329.5 / 1 ::== 2914990979533264056017556329406329.5
            ----->  | *2 5829981959066528112035112658812658
            ----->  /2 1457495489766632028008778164703164.5
                 --> 728747744883316014004389082351582.25
                 --> 364373872441658007002194541175791.125
            ----->  section 5829981959066528112035112658812.658203125
                 --> of section *2 11659963918133056224070225317625.31640625
                 --> of section /2 2914990979533264056017556329406.3291015625

i insert 339886896430411930431371609694201728 582998195906652811.20351126588126589034288826951524
i insert 21242931026900745433336402140892804 145749548976663202.80087781647031647258572206737881
i insert 250000 500
i insert 339886896430411930431371609694201728 582998195906652811.20351126588126589034288826951524
i insert 13595475857216477170615008715235844 116599639181330562.24070225317625318361969277702883
i insert 84971724107602982316343804470224032 291499097953326405.60175563294063294517144413475762
i insert 212429310269007448503382062342400 14574954897666320.280087781647031647952461597128604
i insert 132768318918129660415848003147212048 364373872441658007.00219454117579120921988078407594
CDIS End 
section_temp 0
section h inf
757897654678648654564564645645645696 / 17 ::== 44582214981096979680268508567390920
            ----->  | *2 89164429962193959360537017134781840
            ----->  /2 22291107490548489840134254283695460
                 --> 11145553745274244920067127141847730
                 --> 5572776872637122460033563570923865
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 7950295570482991808786036736093681 89164429962193959.360537017134781853644476257159113
i insert 49689347315518699027823804506070400 222911074905484898.40134254283695464105008454680501
i insert 0 0
i insert 496893473155186954612466060183121 22291107490548489.840134254283695463411119064289778
i insert 310558420721991870038454152690364512 557277687263712246.00335635709238657486963575138361
section_temp 8010
section h 26758748067978116105030075727.09038543701171875
44582214981096979680268508567390920 / 208 ::== 214337572024504710001290906573994.8125
            ----->  | *2 428675144049009420002581813147988
            ----->  /2 107168786012252355000645453286997
                 --> 53584393006126177500322726643498.5
                 --> 26792196503063088750161363321749.25
            ----->  section 26758748067978116105030075727.09038543701171875
                 --> of section *2 53517496135956232210060151454.1807708740234375
                 --> of section /2 13379374033989058052515037863.545192718505859375

i insert 183762379125438976354114883248736384 428675144049009420.00258181314798788807962637292803
i insert 11485148695339936022132180203046024 107168786012252355.00064545328699697201990659323201
i insert 64160100 8010
i insert 71603059816552256109030986850507920 267587480679781161.05030075727090385639961311881052
i insert 286412239266209024436123947402031680 535174961359562322.10060151454180771279922623762104
i insert 17900764954138063893464006372736400 133793740339890580.52515037863545192819980655940526
i insert 114851486953399349504443200805225 10716878601225235.500064545328699696855045964127839
i insert 71782179345874599870404161238406768 267921965030630887.50161363321749244392755429089448
removals 
reporing rt 4
section_temp 0
section h inf
29149909795332640560175563294063296 - 214337572024504710001290906573994.8125 ::== 28935572223308135850174272387489300
            ----->  | *2 57871144446616271700348544774978600
            ----->  /2 14467786111654067925087136193744650
                 --> 7233893055827033962543568096872325
                 --> 3616946527913516981271784048436162.5
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 334906935956112534405374374720822080 578711444466162717.00348544774978598592696243940736
i insert 20931683497257033327996967861781040 144677861116540679.25087136193744649648174060985184
i insert 0 0
i insert 209316834972570307237954677640489 14467786111654067.925087136193744649648174060985184
i insert 130823021857856458661675701927483200 361694652791351698.12717840484361625508213933244406
section_temp 500
section h 5401306815017518692032530845664.66796875
2914990979533264056017556329406329.5 - 214337572024504710001290906573994.8125 ::== 2700653407508759346016265422832334.5
            ----->  | *2 5401306815017518692032530845664668
            ----->  /2 1350326703754379673008132711416167
                 --> 675163351877189836504066355708083.5
                 --> 337581675938594918252033177854041.75
            ----->  section 5401306815017518692032530845664.66796875
                 --> of section *2 10802613630035037384065061691329.3359375
                 --> of section /2 2700653407508759346016265422832.333984375

i insert 291741153099546918643740516044993152 540130681501751869.20325308456646684618362996843643
i insert 18233822068721682347717447065093088 135032670375437967.30081327114161671154590749210911
i insert 250000 500
i insert 291741153099546918643740516044993152 540130681501751869.20325308456646684618362996843643
i insert 11669646123981876572907802561239128 108026136300350373.84065061691329337478784111681307
i insert 72935288274886729390869788260372352 270065340750875934.60162654228323342309181498421822
i insert 182338220687216804572600618089616 13503267037543796.730081327114161671848480139601634
i insert 113961387929510515010815720095426720 337581675938594918.25203317785404177886476873027277
section_temp 50
section h 54013068150175186920325308456646.6796875
2914990979533264056017556329406329.5 - 214337572024504710001290906573994.8125 ::== 2700653407508759346016265422832334.5
            ----->  | *2 5401306815017518692032530845664668
            ----->  /2 1350326703754379673008132711416167
                 --> 675163351877189836504066355708083.5
                 --> 337581675938594918252033177854041.75
            ----->  section 54013068150175186920325308456646.6796875
                 --> of section *2 108026136300350373840650616913293.359375
                 --> of section /2 27006534075087593460162654228323.33984375

i insert 291741153099546918643740516044993152 540130681501751869.20325308456646684618362996843643
i insert 18233822068721682347717447065093088 135032670375437967.30081327114161671154590749210911
i insert 2500 50
i insert 291741153099546918643740516044993152 540130681501751869.20325308456646684618362996843643
i insert 11669646123981876572907802561239128 108026136300350373.84065061691329337478784111681307
i insert 72935288274886729390869788260372352 270065340750875934.60162654228323342309181498421822
i insert 182338220687216804572600618089616 13503267037543796.730081327114161671848480139601634
i insert 113961387929510515010815720095426720 337581675938594918.25203317785404177886476873027277
section_temp 0
section h inf
44582214981096979680268508567390920 - 214337572024504710001290906573994.8125 ::== 44367877409072474970267217660816928
            ----->  | *2 88735754818144949940534435321633856
            ----->  /2 22183938704536237485133608830408464
                 --> 11091969352268118742566804415204232
                 --> 5545984676134059371283402207602116
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 7874034183145934530974249574212601 88735754818144949.940534435321633860427326112585433
i insert 49212713644662091484107220974915872 221839387045362374.85133608830408466494610308927804
i insert 0 0
i insert 492127136446620897093921246120169 22183938704536237.485133608830408465106831528146358
i insert 307579460279138073994064001546847968 554598467613405937.12834022076021167624304553100956
ending sqti reporting the results 
reporting size of xl vector 59 64
entering amfidromi loop of xl vector  with first 
 of 582998195906652811.20351126588126589034288826951524 ^2 ::== 339886896430411930668665011405116032 as intpart 339886896430411930431371609694201728  diafora 418010758248236724133193035951443968 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 145749548976663202.80087781647031647258572206737881 ^2 ::== 21242931026900745666791563212819752 as intpart 21242931026900745433336402140892804  diafora 736654723651747909131228243504752896 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 757897654678648654564564645645645696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 14574954897666320.280087781647031647952461597128604 ^2 ::== 212429310269007456667915632128197.53125 as intpart 212429310269007448503382062342400  diafora 757685225368379647116061263583303296 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 364373872441658007.00219454117579120921988078407594 ^2 ::== 132768318918129660417447270080123472 as intpart 132768318918129660415848003147212048  diafora 625129335760518994148716642498433664 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 582998195906652811.20351126588126589034288826951524 ^2 ::== 339886896430411930668665011405116032 as intpart 339886896430411930431371609694201728  diafora 418010758248236724133193035951443968 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 145749548976663202.80087781647031647258572206737881 ^2 ::== 21242931026900745666791563212819752 as intpart 21242931026900745433336402140892804  diafora 736654723651747909131228243504752896 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 50 ^2 ::== 2500 as intpart 2500  diafora 757897654678648654564564645645643136 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 582998195906652811.20351126588126589034288826951524 ^2 ::== 339886896430411930668665011405116032 as intpart 339886896430411930431371609694201728  diafora 418010758248236724133193035951443968 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 116599639181330562.24070225317625318361969277702883 ^2 ::== 13595475857216477226746600456204642 as intpart 13595475857216477170615008715235844  diafora 744302178821432177393949636930409856 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 291499097953326405.60175563294063294517144413475762 ^2 ::== 84971724107602982667166252851279008 as intpart 84971724107602982316343804470224032  diafora 672925930571045672248220841175421696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 14574954897666320.280087781647031647952461597128604 ^2 ::== 212429310269007456667915632128197.53125 as intpart 212429310269007448503382062342400  diafora 757685225368379647116061263583303296 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 364373872441658007.00219454117579120921988078407594 ^2 ::== 132768318918129660417447270080123472 as intpart 132768318918129660415848003147212048  diafora 625129335760518994148716642498433664 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 582998195906652811.20351126588126589034288826951524 ^2 ::== 339886896430411930668665011405116032 as intpart 339886896430411930431371609694201728  diafora 418010758248236724133193035951443968 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 145749548976663202.80087781647031647258572206737881 ^2 ::== 21242931026900745666791563212819752 as intpart 21242931026900745433336402140892804  diafora 736654723651747909131228243504752896 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 500 ^2 ::== 250000 as intpart 250000  diafora 757897654678648654564564645645395712 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 582998195906652811.20351126588126589034288826951524 ^2 ::== 339886896430411930668665011405116032 as intpart 339886896430411930431371609694201728  diafora 418010758248236724133193035951443968 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 116599639181330562.24070225317625318361969277702883 ^2 ::== 13595475857216477226746600456204642 as intpart 13595475857216477170615008715235844  diafora 744302178821432177393949636930409856 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 291499097953326405.60175563294063294517144413475762 ^2 ::== 84971724107602982667166252851279008 as intpart 84971724107602982316343804470224032  diafora 672925930571045672248220841175421696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 14574954897666320.280087781647031647952461597128604 ^2 ::== 212429310269007456667915632128197.53125 as intpart 212429310269007448503382062342400  diafora 757685225368379647116061263583303296 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 364373872441658007.00219454117579120921988078407594 ^2 ::== 132768318918129660417447270080123472 as intpart 132768318918129660415848003147212048  diafora 625129335760518994148716642498433664 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 89164429962193959.360537017134781853644476257159113 ^2 ::== 7950295570482991873080191962278841 as intpart 7950295570482991808786036736093681  diafora 749947359108165662755778608909552000 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 222911074905484898.40134254283695464105008454680501 ^2 ::== 49689347315518699206751199764242760 as intpart 49689347315518699027823804506070400  diafora 708208307363129955536740841139575296 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 757897654678648654564564645645645696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 22291107490548489.840134254283695463411119064289778 ^2 ::== 496893473155186992067511997642427.5625 as intpart 496893473155186954612466060183121  diafora 757400761205493467609952179585462528 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 557277687263712246.00335635709238657486963575138361 ^2 ::== 310558420721991870042194998526517216 as intpart 310558420721991870038454152690364512  diafora 447339233956656784526110492955281152 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 428675144049009420.00258181314798788807962637292803 ^2 ::== 183762379125438976356328401494979072 as intpart 183762379125438976354114883248736384  diafora 574135275553209678210449762396909312 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 107168786012252355.00064545328699697201990659323201 ^2 ::== 11485148695339936022270525093436192 as intpart 11485148695339936022132180203046024  diafora 746412505983308718542432465442599680 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 8010 ^2 ::== 64160100 as intpart 64160100  diafora 757897654678648654564564645581485568 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 267587480679781161.05030075727090385639961311881052 ^2 ::== 71603059816552256135950692679320616 as intpart 71603059816552256109030986850507920  diafora 686294594862096398455533658795137792 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 535174961359562322.10060151454180771279922623762104 ^2 ::== 286412239266209024543802770717282464 as intpart 286412239266209024436123947402031680  diafora 471485415412439630128440698243614016 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 133793740339890580.52515037863545192819980655940526 ^2 ::== 17900764954138064033987673169830154 as intpart 17900764954138063893464006372736400  diafora 739996889724510590671100639272909312 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 10716878601225235.500064545328699696855045964127839 ^2 ::== 114851486953399360222705250934361.90625 as intpart 114851486953399349504443200805225  diafora 757782803191695255215060202444840448 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 267921965030630887.50161363321749244392755429089448 ^2 ::== 71782179345874600139190781833976208 as intpart 71782179345874599870404161238406768  diafora 686115475332774054694160484407238912 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 578711444466162717.00348544774978598592696243940736 ^2 ::== 334906935956112534409408511724602048 as intpart 334906935956112534405374374720822080  diafora 422990718722536120159190270924823616 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 144677861116540679.25087136193744649648174060985184 ^2 ::== 20931683497257033400588031982787628 as intpart 20931683497257033327996967861781040  diafora 736965971181391621236567677783864704 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 757897654678648654564564645645645696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 14467786111654067.925087136193744649648174060985184 ^2 ::== 209316834972570334005880319827876.28125 as intpart 209316834972570307237954677640489  diafora 757688337843676084257326690968005248 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 361694652791351698.12717840484361625508213933244406 ^2 ::== 130823021857856458753675199892422688 as intpart 130823021857856458661675701927483200  diafora 627074632820792195902888943718162496 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 540130681501751869.20325308456646684618362996843643 ^2 ::== 291741153099546918863306970213431040 as intpart 291741153099546918643740516044993152  diafora 466156501579101735920824129600652544 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 135032670375437967.30081327114161671154590749210911 ^2 ::== 18233822068721682428956685638339440 as intpart 18233822068721682347717447065093088  diafora 739663832609926972216847198580552576 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 500 ^2 ::== 250000 as intpart 250000  diafora 757897654678648654564564645645395712 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 540130681501751869.20325308456646684618362996843643 ^2 ::== 291741153099546918863306970213431040 as intpart 291741153099546918643740516044993152  diafora 466156501579101735920824129600652544 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 108026136300350373.84065061691329337478784111681307 ^2 ::== 11669646123981876754532278808537244 as intpart 11669646123981876572907802561239128  diafora 746228008554666777991656843084406528 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 270065340750875934.60162654228323342309181498421822 ^2 ::== 72935288274886729715826742553357760 as intpart 72935288274886729390869788260372352  diafora 684962366403761925173694857385273344 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 13503267037543796.730081327114161671848480139601634 ^2 ::== 182338220687216824289566856383394.4375 as intpart 182338220687216804572600618089616  diafora 757715316457961437759992045027556096 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 337581675938594918.25203317785404177886476873027277 ^2 ::== 113961387929510515180979285239621504 as intpart 113961387929510515010815720095426720  diafora 643936266749138139553748925550219008 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 540130681501751869.20325308456646684618362996843643 ^2 ::== 291741153099546918863306970213431040 as intpart 291741153099546918643740516044993152  diafora 466156501579101735920824129600652544 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 135032670375437967.30081327114161671154590749210911 ^2 ::== 18233822068721682428956685638339440 as intpart 18233822068721682347717447065093088  diafora 739663832609926972216847198580552576 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 50 ^2 ::== 2500 as intpart 2500  diafora 757897654678648654564564645645643136 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 540130681501751869.20325308456646684618362996843643 ^2 ::== 291741153099546918863306970213431040 as intpart 291741153099546918643740516044993152  diafora 466156501579101735920824129600652544 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 108026136300350373.84065061691329337478784111681307 ^2 ::== 11669646123981876754532278808537244 as intpart 11669646123981876572907802561239128  diafora 746228008554666777991656843084406528 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 270065340750875934.60162654228323342309181498421822 ^2 ::== 72935288274886729715826742553357760 as intpart 72935288274886729390869788260372352  diafora 684962366403761925173694857385273344 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 13503267037543796.730081327114161671848480139601634 ^2 ::== 182338220687216824289566856383394.4375 as intpart 182338220687216804572600618089616  diafora 757715316457961437759992045027556096 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 337581675938594918.25203317785404177886476873027277 ^2 ::== 113961387929510515180979285239621504 as intpart 113961387929510515010815720095426720  diafora 643936266749138139553748925550219008 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 88735754818144949.940534435321633860427326112585433 ^2 ::== 7874034183145934697892315675658423 as intpart 7874034183145934530974249574212601  diafora 750023620495502720033590396071433088 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 221839387045362374.85133608830408466494610308927804 ^2 ::== 49212713644662091861826972972865152 as intpart 49212713644662091484107220974915872  diafora 708684941033986563080457424670729856 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 757897654678648654564564645645645696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 22183938704536237.485133608830408465106831528146358 ^2 ::== 492127136446620918618269729728651.4375 as intpart 492127136446620897093921246120169  diafora 757405527542202033667470724399525504 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 554598467613405937.12834022076021167624304553100956 ^2 ::== 307579460279138074136418581080407232 as intpart 307579460279138073994064001546847968  diafora 450318194399510580570500644098797696 from 757897654678648654564564645645645696
the size of xpl vector is 59 64
 of 582998195906652811.20351126588126589034288826951524 ^2 ::== 339886896430411930668665011405116032 as intpart 339886896430411930431371609694201728  diafora 418010758248236724133193035951443968 from 757897654678648654564564645645645696
 of 582998195906652811.20351126588126589034288826951524 ^2 ::== 339886896430411930668665011405116032 as intpart 339886896430411930431371609694201728  diafora 418010758248236724133193035951443968 from 757897654678648654564564645645645696
 of 582998195906652811.20351126588126589034288826951524 ^2 ::== 339886896430411930668665011405116032 as intpart 339886896430411930431371609694201728  diafora 418010758248236724133193035951443968 from 757897654678648654564564645645645696
 of 582998195906652811.20351126588126589034288826951524 ^2 ::== 339886896430411930668665011405116032 as intpart 339886896430411930431371609694201728  diafora 418010758248236724133193035951443968 from 757897654678648654564564645645645696
 of 582998195906652811.20351126588126589034288826951524 ^2 ::== 339886896430411930668665011405116032 as intpart 339886896430411930431371609694201728  diafora 418010758248236724133193035951443968 from 757897654678648654564564645645645696

-------------------------------------------------------------------------

10 25 |35 15| 870573175947116265.48080546204937801846313050191384  and main 757897654678648654564564645645645696
-------------------------------------------------------------------------
section_temp 0
section h inf
757897654678648654564564645645645696 / 35 ::== 21654218705104247273273275589875592
            ----->  | *2 43308437410208494546546551179751184
            ----->  /2 10827109352552123636636637794937796
                 --> 5413554676276061818318318897468898
                 --> 2706777338138030909159159448734449
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 187562075091394665010720195995653024 433084374102084945.46546551179751183280330906200106
i insert 11722629693212166509034465486967696 108271093525521236.36636637794937795820082726550027
i insert 0 0
i insert 117226296932121652097813431807129 10827109352552123.636636637794937796167027421745388
i insert 73266435582576040681465409293548096 270677733813803090.91591594487344490937985597156512
CDIS Start 
section_temp 2050
section h 1056303351468499866988940272676.8580322265625
21654218705104247273273275589875592 / 10 ::== 2165421870510424727327327558987559.25
            ----->  | *2 4330843741020849454654655117975118
            ----->  /2 1082710935255212363663663779493779.5
                 --> 541355467627606181831831889746889.75
                 --> 270677733813803090915915944873444.875
            ----->  section 1056303351468499866988940272676.8580322265625
                 --> of section *2 2112606702936999733977880545353.716064453125
                 --> of section /2 528151675734249933494470136338.42901611328125

i insert 187562075091394665010720195995653024 433084374102084945.46546551179751183280330906200106
i insert 11722629693212166509034465486967696 108271093525521236.36636637794937795820082726550027
i insert 4202500 2050
i insert 11157767703235851453415538388200196 105630335146849986.69889402726768581897154319904075
i insert 44631070812943406236183494140200728 211260670293699973.3977880545353716379430863980815
i insert 278944192580896289504298514110504480 528151675734249933.49447013633842906710214037957485
i insert 117226296932121652097813431807129 10827109352552123.636636637794937796167027421745388
i insert 73266435582576040681465409293548096 270677733813803090.91591594487344490937985597156512
section_temp 25
section h 86616874820416989093093102359502.359375
2165421870510424727327327558987559.25 / 1 ::== 2165421870510424727327327558987559.25
            ----->  | *2 4330843741020849454654655117975118
            ----->  /2 1082710935255212363663663779493779.5
                 --> 541355467627606181831831889746889.75
                 --> 270677733813803090915915944873444.875
            ----->  section 86616874820416989093093102359502.359375
                 --> of section *2 173233749640833978186186204719004.71875
                 --> of section /2 43308437410208494546546551179751.1796875

i insert 187562075091394665010720195995653024 433084374102084945.46546551179751183280330906200106
i insert 11722629693212166509034465486967696 108271093525521236.36636637794937795820082726550027
i insert 625 25
i insert 750248300365578660042880783982612096 866168748204169890.93093102359502366560661812400213
i insert 30009932014623146401715231359304484 173233749640833978.18618620471900473867243874792621
i insert 187562075091394665010720195995653024 433084374102084945.46546551179751183280330906200106
i insert 117226296932121652097813431807129 10827109352552123.636636637794937796167027421745388
i insert 73266435582576040681465409293548096 270677733813803090.91591594487344490937985597156512
CDIS End 
section_temp 0
section h inf
757897654678648654564564645645645696 / 15 ::== 50526510311909910304304309709709712
            ----->  | *2 101053020623819820608608619419419424
            ----->  /2 25263255155954955152152154854854856
                 --> 12631627577977477576076077427427428
                 --> 6315813788988738788038038713713714
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 10211712977198153882863967824832400 101053020623819820.60860861941941943320522057092603
i insert 63823206107488462273164902024301600 252632551559549551.52152154854854856913526361950062
i insert 0 0
i insert 638232061074884617678997989052025 25263255155954955.152152154854854858301305142731508
i insert 398895038171802889838862016550758912 631581378898873878.80380387137137143671594685656601
section_temp 46
section h 5280780760024029086988326683707.1083984375
50526510311909910304304309709709712 / 208 ::== 242915914961105338001463027450527.46875
            ----->  | *2 485831829922210676002926054901054
            ----->  /2 121457957480552669000731513725263.5
                 --> 60728978740276334500365756862631.75
                 --> 30364489370138167250182878431315.875
            ----->  section 5280780760024029086988326683707.1083984375
                 --> of section *2 10561561520048058173976653367414.216796875
                 --> of section /2 2640390380012014543494163341853.55419921875

i insert 236032566965563840739285338928376960 485831829922210676.00292605490105402044065385780414
i insert 14752035435347740046205333683023560 121457957480552669.00073151372526350511016346445103
i insert 2116 46
i insert 278866454354399622066895789966856448 528078076002402908.69883266837071084109922480820387
i insert 11154658174175984755937093358097560 105615615200480581.73976653367414216266872983851499
i insert 69716613588599905516723947491714112 264039038001201454.34941633418535542054961240410194
i insert 147520354353477378599620990330756 12145795748055266.900073151372526350164071651249742
i insert 92200221470923374985138441817515584 303644893701381672.50182878431315874889762085331313
removals 
reporing rt 4
section_temp 0
section h inf
21654218705104247273273275589875592 - 242915914961105338001463027450527.46875 ::== 21411302790143141935271812562425064
            ----->  | *2 42822605580286283870543625124850128
            ----->  /2 10705651395071570967635906281212532
                 --> 5352825697535785483817953140606266
                 --> 2676412848767892741908976570303133
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 183377554868476597290276916641414240 428226055802862838.70543625124850140029053591206321
i insert 11461097179279787223585793339372680 107056513950715709.6763590628121253500726339780158
i insert 0 0
i insert 114610971792797852965685422264900 10705651395071570.967635906281212534660318702606219
i insert 71631857370498670950335063001447072 267641284876789274.19089765703031336130379713722505
section_temp 75
section h 25633412740657591857678193753827.078125
2165421870510424727327327558987559.25 - 242915914961105338001463027450527.46875 ::== 1922505955549319389325864531537031.75
            ----->  | *2 3845011911098638778651729063074062
            ----->  /2 961252977774659694662932265768515.5
                 --> 480626488887329847331466132884257.75
                 --> 240313244443664923665733066442128.875
            ----->  section 25633412740657591857678193753827.078125
                 --> of section *2 51266825481315183715356387507654.15625
                 --> of section /2 12816706370328795928839096876913.5390625

i insert 147841165964904064120825085469471136 384501191109863877.86517290630740617540794801243464
i insert 9240072872806503959488918953108961 96125297777465969.466293226576851543851987003108661
i insert 5625 75
i insert 65707184873290695164811149097542720 256334127406575918.57678193753827083911644990621426
i insert 262828739493162781684581106016474560 512668254813151837.15356387507654167823289981242851
i insert 16426796218322673791202787274385680 128167063703287959.28839096876913541955822495310713
i insert 92400728728065022292335589587216 9612529777746596.946629322657685155079088090701589
i insert 57750455455040649987118987900595928 240313244443664923.66573306644212887350775531558611
section_temp 7050
section h 272695880219761615507214827168.373199462890625
2165421870510424727327327558987559.25 - 242915914961105338001463027450527.46875 ::== 1922505955549319389325864531537031.75
            ----->  | *2 3845011911098638778651729063074062
            ----->  /2 961252977774659694662932265768515.5
                 --> 480626488887329847331466132884257.75
                 --> 240313244443664923665733066442128.875
            ----->  section 272695880219761615507214827168.373199462890625
                 --> of section *2 545391760439523231014429654336.74639892578125
                 --> of section /2 136347940109880807753607413584.1865997314453125

i insert 147841165964904064120825085469471136 384501191109863877.86517290630740617540794801243464
i insert 9240072872806503959488918953108961 96125297777465969.466293226576851543851987003108661
i insert 49702500 7050
i insert 74363043088830574033587567427408224 272695880219761615.50721482716837323900804790355323
i insert 297452172355322297225133790588679360 545391760439523231.01442965433674647801609580710647
i insert 18590760772207643372048951746971248 136347940109880807.75360741358418661950402395177662
i insert 92400728728065022292335589587216 9612529777746596.946629322657685155079088090701589
i insert 57750455455040649987118987900595928 240313244443664923.66573306644212887350775531558611
section_temp 0
section h inf
50526510311909910304304309709709712 - 242915914961105338001463027450527.46875 ::== 50283594396948804966302846682259184
            ----->  | *2 100567188793897609932605693364518368
            ----->  /2 25141797198474402483151423341129592
                 --> 12570898599237201241575711670564796
                 --> 6285449299618600620787855835282398
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 10113759461907444824380397575916881 100567188793897609.93260569336451840105617350218381
i insert 63210996636921530906631400803712576 251417971984744024.83151423341129598876264594764507
i insert 0 0
i insert 632109966369215288952876249257604 25141797198474402.483151423341129600264043375545953
i insert 395068728980759570680625974870643840 628544929961860062.07878558352823994415103925348376
ending sqti reporting the results 
reporting size of xl vector 59 64
entering amfidromi loop of xl vector  with first 
 of 433084374102084945.46546551179751183280330906200106 ^2 ::== 187562075091394665413891875681517120 as intpart 187562075091394665010720195995653024  diafora 570335579587253989553844449649992704 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 108271093525521236.36636637794937795820082726550027 ^2 ::== 11722629693212166588368242230094820 as intpart 11722629693212166509034465486967696  diafora 746175024985436488055530180158678016 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 757897654678648654564564645645645696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 10827109352552123.636636637794937796167027421745388 ^2 ::== 117226296932121665883682422300948.203125 as intpart 117226296932121652097813431807129  diafora 757780428381716532912466832213838592 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 270677733813803090.91591594487344490937985597156512 ^2 ::== 73266435582576041177301513938092632 as intpart 73266435582576040681465409293548096  diafora 684631219096072613883099236352097536 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 433084374102084945.46546551179751183280330906200106 ^2 ::== 187562075091394665413891875681517120 as intpart 187562075091394665010720195995653024  diafora 570335579587253989553844449649992704 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 108271093525521236.36636637794937795820082726550027 ^2 ::== 11722629693212166588368242230094820 as intpart 11722629693212166509034465486967696  diafora 746175024985436488055530180158678016 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 2050 ^2 ::== 4202500 as intpart 4202500  diafora 757897654678648654564564645641443200 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 105630335146849986.69889402726768581897154319904075 ^2 ::== 11157767703235851601064359053034928 as intpart 11157767703235851453415538388200196  diafora 746739886975412803111149107257445504 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 211260670293699973.3977880545353716379430863980815 ^2 ::== 44631070812943406404257436212139712 as intpart 44631070812943406236183494140200728  diafora 713266583865705248328381151505444992 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 528151675734249933.49447013633842906710214037957485 ^2 ::== 278944192580896290026608976325873184 as intpart 278944192580896289504298514110504480  diafora 478953462097752365060266131535141248 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 10827109352552123.636636637794937796167027421745388 ^2 ::== 117226296932121665883682422300948.203125 as intpart 117226296932121652097813431807129  diafora 757780428381716532912466832213838592 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 270677733813803090.91591594487344490937985597156512 ^2 ::== 73266435582576041177301513938092632 as intpart 73266435582576040681465409293548096  diafora 684631219096072613883099236352097536 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 433084374102084945.46546551179751183280330906200106 ^2 ::== 187562075091394665413891875681517120 as intpart 187562075091394665010720195995653024  diafora 570335579587253989553844449649992704 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 108271093525521236.36636637794937795820082726550027 ^2 ::== 11722629693212166588368242230094820 as intpart 11722629693212166509034465486967696  diafora 746175024985436488055530180158678016 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 25 ^2 ::== 625 as intpart 625  diafora 757897654678648654564564645645645056 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 866168748204169890.93093102359502366560661812400213 ^2 ::== 750248300365578661655567502726068480 as intpart 750248300365578660042880783982612096  diafora 7649354313069994521683861663033600 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 173233749640833978.18618620471900473867243874792621 ^2 ::== 30009932014623146466222700109042740 as intpart 30009932014623146401715231359304484  diafora 727887722664025508162849414286341248 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 433084374102084945.46546551179751183280330906200106 ^2 ::== 187562075091394665413891875681517120 as intpart 187562075091394665010720195995653024  diafora 570335579587253989553844449649992704 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 10827109352552123.636636637794937796167027421745388 ^2 ::== 117226296932121665883682422300948.203125 as intpart 117226296932121652097813431807129  diafora 757780428381716532912466832213838592 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 270677733813803090.91591594487344490937985597156512 ^2 ::== 73266435582576041177301513938092632 as intpart 73266435582576040681465409293548096  diafora 684631219096072613883099236352097536 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 101053020623819820.60860861941941943320522057092603 ^2 ::== 10211712977198154005867446564882600 as intpart 10211712977198153882863967824832400  diafora 747685941701450500681700677820813312 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 252632551559549551.52152154854854856913526361950062 ^2 ::== 63823206107488462536671541030516240 as intpart 63823206107488462273164902024301600  diafora 694074448571160192291399743621344128 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 757897654678648654564564645645645696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 25263255155954955.152152154854854858301305142731508 ^2 ::== 638232061074884625366715410305162.5 as intpart 638232061074884617678997989052025  diafora 757259422617573769946885647656593664 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 631581378898873878.80380387137137143671594685656601 ^2 ::== 398895038171802890854197131440726528 as intpart 398895038171802889838862016550758912  diafora 359002616506845764725702629094886784 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 485831829922210676.00292605490105402044065385780414 ^2 ::== 236032566965563840742128480142440832 as intpart 236032566965563840739285338928376960  diafora 521865087713084813825279306717268736 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 121457957480552669.00073151372526350511016346445103 ^2 ::== 14752035435347740046383030008902552 as intpart 14752035435347740046205333683023560  diafora 743145619243300914518359311962622080 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 46 ^2 ::== 2116 as intpart 2116  diafora 757897654678648654564564645645643520 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 528078076002402908.69883266837071084109922480820387 ^2 ::== 278866454354399622804972211888516992 as intpart 278866454354399622066895789966856448  diafora 479031200324249032497668855678789248 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 105615615200480581.73976653367414216266872983851499 ^2 ::== 11154658174175984912198888475540678 as intpart 11154658174175984755937093358097560  diafora 746742996504472669808627552287548160 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 264039038001201454.34941633418535542054961240410194 ^2 ::== 69716613588599905701243052972129248 as intpart 69716613588599905516723947491714112  diafora 688181041090048749047840698153931520 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 12145795748055266.900073151372526350164071651249742 ^2 ::== 147520354353477400463830300089025.515625 as intpart 147520354353477378599620990330756  diafora 757750134324295177185965024655314944 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 303644893701381672.50182878431315874889762085331313 ^2 ::== 92200221470923375289893937555640944 as intpart 92200221470923374985138441817515584  diafora 665697433207725279579426203828130048 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 428226055802862838.70543625124850140029053591206321 ^2 ::== 183377554868476597894449283626420512 as intpart 183377554868476597290276916641414240  diafora 574520099810172057274287729004231424 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 107056513950715709.6763590628121253500726339780158 ^2 ::== 11461097179279787368403080226651282 as intpart 11461097179279787223585793339372680  diafora 746436557499368867340978852306273024 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 757897654678648654564564645645645696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 10705651395071570.967635906281212534660318702606219 ^2 ::== 114610971792797873684030802266512.8125 as intpart 114610971792797852965685422264900  diafora 757783043706855856711598960223380736 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 267641284876789274.19089765703031336130379713722505 ^2 ::== 71631857370498671052519251416570504 as intpart 71631857370498670950335063001447072  diafora 686265797308149983614229582644198656 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 384501191109863877.86517290630740617540794801243464 ^2 ::== 147841165964904064786145111451831808 as intpart 147841165964904064120825085469471136  diafora 610056488713744590443739560176174592 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 96125297777465969.466293226576851543851987003108661 ^2 ::== 9240072872806504049134069465739488 as intpart 9240072872806503959488918953108961  diafora 748657581805842150605075726692536704 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 75 ^2 ::== 5625 as intpart 5625  diafora 757897654678648654564564645645640064 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 256334127406575918.57678193753827083911644990621426 ^2 ::== 65707184873290695460508938423036384 as intpart 65707184873290695164811149097542720  diafora 692190469805357959399753496548102912 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 512668254813151837.15356387507654167823289981242851 ^2 ::== 262828739493162781842035753692145536 as intpart 262828739493162781684581106016474560  diafora 495068915185485872879983539629171136 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 128167063703287959.28839096876913541955822495310713 ^2 ::== 16426796218322673865127234605759096 as intpart 16426796218322673791202787274385680  diafora 741470858460325980773361858371260032 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 9612529777746596.946629322657685155079088090701589 ^2 ::== 92400728728065040491340694657394.890625 as intpart 92400728728065022292335589587216  diafora 757805253949920589542272310056058496 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 240313244443664923.66573306644212887350775531558611 ^2 ::== 57750455455040650307087934160871808 as intpart 57750455455040649987118987900595928  diafora 700147199223608004577445657745049728 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 384501191109863877.86517290630740617540794801243464 ^2 ::== 147841165964904064786145111451831808 as intpart 147841165964904064120825085469471136  diafora 610056488713744590443739560176174592 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 96125297777465969.466293226576851543851987003108661 ^2 ::== 9240072872806504049134069465739488 as intpart 9240072872806503959488918953108961  diafora 748657581805842150605075726692536704 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 7050 ^2 ::== 49702500 as intpart 49702500  diafora 757897654678648654564564645595943168 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 272695880219761615.50721482716837323900804790355323 ^2 ::== 74363043088830574310218354937795824 as intpart 74363043088830574033587567427408224  diafora 683534611589818080530977078218237440 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 545391760439523231.01442965433674647801609580710647 ^2 ::== 297452172355322297240873419751183296 as intpart 297452172355322297225133790588679360  diafora 460445482323326357339430855056966336 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 136347940109880807.75360741358418661950402395177662 ^2 ::== 18590760772207643577554588734448956 as intpart 18590760772207643372048951746971248  diafora 739306893906441011192515693898674432 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 9612529777746596.946629322657685155079088090701589 ^2 ::== 92400728728065040491340694657394.890625 as intpart 92400728728065022292335589587216  diafora 757805253949920589542272310056058496 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 240313244443664923.66573306644212887350775531558611 ^2 ::== 57750455455040650307087934160871808 as intpart 57750455455040649987118987900595928  diafora 700147199223608004577445657745049728 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 100567188793897609.93260569336451840105617350218381 ^2 ::== 10113759461907445011959463245623491 as intpart 10113759461907444824380397575916881  diafora 747783895216741209740184248069728768 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 251417971984744024.83151423341129598876264594764507 ^2 ::== 63210996636921531324746645285146816 as intpart 63210996636921530906631400803712576  diafora 694686658041727123657933244841933056 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 757897654678648654564564645645645696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 25141797198474402.483151423341129600264043375545953 ^2 ::== 632109966369215313247466452851468.1875 as intpart 632109966369215288952876249257604  diafora 757265544712279439275611769396388096 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 628544929961860062.07878558352823994415103925348376 ^2 ::== 395068728980759570779666533032167552 as intpart 395068728980759570680625974870643840  diafora 362828925697889083883938670775001856 from 757897654678648654564564645645645696
the size of xpl vector is 59 64
 of 866168748204169890.93093102359502366560661812400213 ^2 ::== 750248300365578661655567502726068480 as intpart 750248300365578660042880783982612096  diafora 7649354313069994521683861663033600 from 757897654678648654564564645645645696

-------------------------------------------------------------------------

10 |25| 35 |15| 870573175947116265.48080546204937801846313050191384  and main 757897654678648654564564645645645696
-------------------------------------------------------------------------
section_temp 0
section h inf
757897654678648654564564645645645696 / 25 ::== 30315906187145946182582585825825828
            ----->  | *2 60631812374291892365165171651651656
            ----->  /2 15157953093572973091291292912912914
                 --> 7578976546786486545645646456456457
                 --> 3789488273393243272822823228228228.5
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 367621667179133543421011584151479936 606318123742918923.65165171651651654372017219429836
i insert 22976354198695846236443927605872900 151579530935729730.91291292912912913593004304857459
i insert 0 0
i insert 229763541986958462364439276058729 15157953093572973.091291292912912913246059609662098
i insert 143602213741849040493569856894002928 378948827339324327.28228232282282283982510762143647
CDIS Start 
section_temp 0
section h inf
30315906187145946182582585825825828 / 10 ::== 3031590618714594618258258582582583
            ----->  | *2 6063181237429189236516517165165166
            ----->  /2 1515795309357297309129129291291291.5
                 --> 757897654678648654564564645645645.75
                 --> 378948827339324327282282322822822.875
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 367621667179133543421011584151479936 606318123742918923.65165171651651654372017219429836
i insert 22976354198695846236443927605872900 151579530935729730.91291292912912913593004304857459
i insert 0 0
i insert 229763541986958462364439276058729 15157953093572973.091291292912912913246059609662098
i insert 143602213741849040493569856894002928 378948827339324327.28228232282282283982510762143647
section_temp 0
section h inf
3031590618714594618258258582582583 / 1 ::== 3031590618714594618258258582582583
            ----->  | *2 6063181237429189236516517165165166
            ----->  /2 1515795309357297309129129291291291.5
                 --> 757897654678648654564564645645645.75
                 --> 378948827339324327282282322822822.875
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 367621667179133543421011584151479936 606318123742918923.65165171651651654372017219429836
i insert 22976354198695846236443927605872900 151579530935729730.91291292912912913593004304857459
i insert 0 0
i insert 229763541986958462364439276058729 15157953093572973.091291292912912913246059609662098
i insert 143602213741849040493569856894002928 378948827339324327.28228232282282283982510762143647
CDIS End 
section_temp 0
section h inf
757897654678648654564564645645645696 / 15 ::== 50526510311909910304304309709709712
            ----->  | *2 101053020623819820608608619419419424
            ----->  /2 25263255155954955152152154854854856
                 --> 12631627577977477576076077427427428
                 --> 6315813788988738788038038713713714
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 10211712977198153882863967824832400 101053020623819820.60860861941941943320522057092603
i insert 63823206107488462273164902024301600 252632551559549551.52152154854854856913526361950062
i insert 0 0
i insert 638232061074884617678997989052025 25263255155954955.152152154854854858301305142731508
i insert 398895038171802889838862016550758912 631581378898873878.80380387137137143671594685656601
section_temp 4060
section h 59831506148055501970803701342.49433135986328125
50526510311909910304304309709709712 / 208 ::== 242915914961105338001463027450527.46875
            ----->  | *2 485831829922210676002926054901054
            ----->  /2 121457957480552669000731513725263.5
                 --> 60728978740276334500365756862631.75
                 --> 30364489370138167250182878431315.875
            ----->  section 59831506148055501970803701342.49433135986328125
                 --> of section *2 119663012296111003941607402684.9886627197265625
                 --> of section /2 29915753074027750985401850671.247165679931640625

i insert 236032566965563840739285338928376960 485831829922210676.00292605490105402044065385780414
i insert 14752035435347740046205333683023560 121457957480552669.00073151372526350511016346445103
i insert 16483600 4060
i insert 357980912794480332244615444286090368 598315061480555019.70803701342494329562526900190278
i insert 14319236511779213098323798097666008 119663012296111003.94160740268498865912505380038056
i insert 89495228198620082761996330331245088 299157530740277509.85401850671247164781263450095139
i insert 147520354353477378599620990330756 12145795748055266.900073151372526350164071651249742
i insert 92200221470923374985138441817515584 303644893701381672.50182878431315874889762085331313
removals 
reporing rt 4
section_temp 0
section h inf
30315906187145946182582585825825828 - 242915914961105338001463027450527.46875 ::== 30072990272184840844581122798375300
            ----->  | *2 60145980544369681689162245596750600
            ----->  /2 15036495136092420422290561399187650
                 --> 7518247568046210211145280699593825
                 --> 3759123784023105105572640349796912.5
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 361753897564369626057828624528537856 601459805443696816.89162245596750600018509658184485
i insert 22609618597773101628614289033033616 150364951360924204.22290561399187650004627414546121
i insert 0 0
i insert 226096185977731004256946781456400 15036495136092420.422290561399187650004627414546121
i insert 141310116236081885178839306456460096 375912378402310510.55726403497969123623789755583857
section_temp 500
section h 5577349407506978560513591110264.1103515625
3031590618714594618258258582582583 - 242915914961105338001463027450527.46875 ::== 2788674703753489280256795555132055.5
            ----->  | *2 5577349407506978560513591110264110
            ----->  /2 1394337351876744640128397777566027.5
                 --> 697168675938372320064198888783013.75
                 --> 348584337969186160032099444391506.875
            ----->  section 5577349407506978560513591110264.1103515625
                 --> of section *2 11154698815013957121027182220528.220703125
                 --> of section /2 2788674703753489280256795555132.05517578125

i insert 311068264134184447912124551002996736 557734940750697856.05135911102641088632481114473194
i insert 19441766508386527994507784437687296 139433735187674464.01283977775660272158120278618298
i insert 250000 500
i insert 311068264134184447912124551002996736 557734940750697856.05135911102641088632481114473194
i insert 12442730565367377871866186780064040 111546988150139571.21027182220528217726496222894639
i insert 77767066033546111978031137750749184 278867470375348928.02567955551320544316240557236597
i insert 194417665083865268790379029362916 13943373518767446.401283977775660272158120278618298
i insert 121511040677415799965673652735545600 348584337969186160.03209944439150680395300696545746
section_temp 50
section h 55773494075069785605135911102641.1015625
3031590618714594618258258582582583 - 242915914961105338001463027450527.46875 ::== 2788674703753489280256795555132055.5
            ----->  | *2 5577349407506978560513591110264110
            ----->  /2 1394337351876744640128397777566027.5
                 --> 697168675938372320064198888783013.75
                 --> 348584337969186160032099444391506.875
            ----->  section 55773494075069785605135911102641.1015625
                 --> of section *2 111546988150139571210271822205282.203125
                 --> of section /2 27886747037534892802567955551320.55078125

i insert 311068264134184447912124551002996736 557734940750697856.05135911102641088632481114473194
i insert 19441766508386527994507784437687296 139433735187674464.01283977775660272158120278618298
i insert 2500 50
i insert 311068264134184447912124551002996736 557734940750697856.05135911102641088632481114473194
i insert 12442730565367377871866186780064040 111546988150139571.21027182220528217726496222894639
i insert 77767066033546111978031137750749184 278867470375348928.02567955551320544316240557236597
i insert 194417665083865268790379029362916 13943373518767446.401283977775660272158120278618298
i insert 121511040677415799965673652735545600 348584337969186160.03209944439150680395300696545746
section_temp 0
section h inf
50526510311909910304304309709709712 - 242915914961105338001463027450527.46875 ::== 50283594396948804966302846682259184
            ----->  | *2 100567188793897609932605693364518368
            ----->  /2 25141797198474402483151423341129592
                 --> 12570898599237201241575711670564796
                 --> 6285449299618600620787855835282398
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 10113759461907444824380397575916881 100567188793897609.93260569336451840105617350218381
i insert 63210996636921530906631400803712576 251417971984744024.83151423341129598876264594764507
i insert 0 0
i insert 632109966369215288952876249257604 25141797198474402.483151423341129600264043375545953
i insert 395068728980759570680625974870643840 628544929961860062.07878558352823994415103925348376
ending sqti reporting the results 
reporting size of xl vector 53 64
entering amfidromi loop of xl vector  with first 
 of 606318123742918923.65165171651651654372017219429836 ^2 ::== 367621667179133544211228076335773504 as intpart 367621667179133543421011584151479936  diafora 390275987499515111143553061494165760 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 151579530935729730.91291292912912913593004304857459 ^2 ::== 22976354198695846513201754770985844 as intpart 22976354198695846236443927605872900  diafora 734921300479952808328120718039772800 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 757897654678648654564564645645645696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 15157953093572973.091291292912912913246059609662098 ^2 ::== 229763541986958465132017547709858.4375 as intpart 229763541986958462364439276058729  diafora 757667891136661696102200206369586944 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 378948827339324327.28228232282282283982510762143647 ^2 ::== 143602213741849040707510967318661536 as intpart 143602213741849040493569856894002928  diafora 614295440936799614070994788751642752 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 606318123742918923.65165171651651654372017219429836 ^2 ::== 367621667179133544211228076335773504 as intpart 367621667179133543421011584151479936  diafora 390275987499515111143553061494165760 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 151579530935729730.91291292912912913593004304857459 ^2 ::== 22976354198695846513201754770985844 as intpart 22976354198695846236443927605872900  diafora 734921300479952808328120718039772800 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 757897654678648654564564645645645696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 15157953093572973.091291292912912913246059609662098 ^2 ::== 229763541986958465132017547709858.4375 as intpart 229763541986958462364439276058729  diafora 757667891136661696102200206369586944 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 378948827339324327.28228232282282283982510762143647 ^2 ::== 143602213741849040707510967318661536 as intpart 143602213741849040493569856894002928  diafora 614295440936799614070994788751642752 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 606318123742918923.65165171651651654372017219429836 ^2 ::== 367621667179133544211228076335773504 as intpart 367621667179133543421011584151479936  diafora 390275987499515111143553061494165760 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 151579530935729730.91291292912912913593004304857459 ^2 ::== 22976354198695846513201754770985844 as intpart 22976354198695846236443927605872900  diafora 734921300479952808328120718039772800 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 757897654678648654564564645645645696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 15157953093572973.091291292912912913246059609662098 ^2 ::== 229763541986958465132017547709858.4375 as intpart 229763541986958462364439276058729  diafora 757667891136661696102200206369586944 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 378948827339324327.28228232282282283982510762143647 ^2 ::== 143602213741849040707510967318661536 as intpart 143602213741849040493569856894002928  diafora 614295440936799614070994788751642752 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 101053020623819820.60860861941941943320522057092603 ^2 ::== 10211712977198154005867446564882600 as intpart 10211712977198153882863967824832400  diafora 747685941701450500681700677820813312 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 252632551559549551.52152154854854856913526361950062 ^2 ::== 63823206107488462536671541030516240 as intpart 63823206107488462273164902024301600  diafora 694074448571160192291399743621344128 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 757897654678648654564564645645645696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 25263255155954955.152152154854854858301305142731508 ^2 ::== 638232061074884625366715410305162.5 as intpart 638232061074884617678997989052025  diafora 757259422617573769946885647656593664 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 631581378898873878.80380387137137143671594685656601 ^2 ::== 398895038171802890854197131440726528 as intpart 398895038171802889838862016550758912  diafora 359002616506845764725702629094886784 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 485831829922210676.00292605490105402044065385780414 ^2 ::== 236032566965563840742128480142440832 as intpart 236032566965563840739285338928376960  diafora 521865087713084813825279306717268736 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 121457957480552669.00073151372526350511016346445103 ^2 ::== 14752035435347740046383030008902552 as intpart 14752035435347740046205333683023560  diafora 743145619243300914518359311962622080 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 4060 ^2 ::== 16483600 as intpart 16483600  diafora 757897654678648654564564645629162112 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 598315061480555019.70803701342494329562526900190278 ^2 ::== 357980912794480333091873862721797376 as intpart 357980912794480332244615444286090368  diafora 399916741884168322319949201359555328 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 119663012296111003.94160740268498865912505380038056 ^2 ::== 14319236511779213323674954508871896 as intpart 14319236511779213098323798097666008  diafora 743578418166869441466240847547979648 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 299157530740277509.85401850671247164781263450095139 ^2 ::== 89495228198620083272968465680449344 as intpart 89495228198620082761996330331245088  diafora 668402426480028571802568315314400640 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 12145795748055266.900073151372526350164071651249742 ^2 ::== 147520354353477400463830300089025.515625 as intpart 147520354353477378599620990330756  diafora 757750134324295177185965024655314944 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 303644893701381672.50182878431315874889762085331313 ^2 ::== 92200221470923375289893937555640944 as intpart 92200221470923374985138441817515584  diafora 665697433207725279579426203828130048 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 601459805443696816.89162245596750600018509658184485 ^2 ::== 361753897564369627130378762319432448 as intpart 361753897564369626057828624528537856  diafora 396143757114279028506736021117107840 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 150364951360924204.22290561399187650004627414546121 ^2 ::== 22609618597773101695648672644964528 as intpart 22609618597773101628614289033033616  diafora 735288036080875552935950356612612096 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 757897654678648654564564645645645696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 15036495136092420.422290561399187650004627414546121 ^2 ::== 226096185977731016956486726449645.28125 as intpart 226096185977731004256946781456400  diafora 757671558492670923560307698864189312 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 375912378402310510.55726403497969123623789755583857 ^2 ::== 141310116236081885597804204031028288 as intpart 141310116236081885178839306456460096  diafora 616587538442566769385725339189185600 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 557734940750697856.05135911102641088632481114473194 ^2 ::== 311068264134184447969414092493644320 as intpart 311068264134184447912124551002996736  diafora 446829390544464206652440094642648960 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 139433735187674464.01283977775660272158120278618298 ^2 ::== 19441766508386527998088380780852770 as intpart 19441766508386527994507784437687296  diafora 738455888170262126570056861207958400 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 500 ^2 ::== 250000 as intpart 250000  diafora 757897654678648654564564645645395712 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 557734940750697856.05135911102641088632481114473194 ^2 ::== 311068264134184447969414092493644320 as intpart 311068264134184447912124551002996736  diafora 446829390544464206652440094642648960 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 111546988150139571.21027182220528217726496222894639 ^2 ::== 12442730565367377918776563699745772 as intpart 12442730565367377871866186780064040  diafora 745454924113281276692698458865581696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 278867470375348928.02567955551320544316240557236597 ^2 ::== 77767066033546111992353523123411080 as intpart 77767066033546111978031137750749184  diafora 680130588645102542586533507894896512 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 13943373518767446.401283977775660272158120278618298 ^2 ::== 194417665083865279980883807808527.6875 as intpart 194417665083865268790379029362916  diafora 757703237013564789295774266616282752 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 348584337969186160.03209944439150680395300696545746 ^2 ::== 121511040677415799988052379880329808 as intpart 121511040677415799965673652735545600  diafora 636386614001232854598890992910100096 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 557734940750697856.05135911102641088632481114473194 ^2 ::== 311068264134184447969414092493644320 as intpart 311068264134184447912124551002996736  diafora 446829390544464206652440094642648960 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 139433735187674464.01283977775660272158120278618298 ^2 ::== 19441766508386527998088380780852770 as intpart 19441766508386527994507784437687296  diafora 738455888170262126570056861207958400 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 50 ^2 ::== 2500 as intpart 2500  diafora 757897654678648654564564645645643136 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 557734940750697856.05135911102641088632481114473194 ^2 ::== 311068264134184447969414092493644320 as intpart 311068264134184447912124551002996736  diafora 446829390544464206652440094642648960 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 111546988150139571.21027182220528217726496222894639 ^2 ::== 12442730565367377918776563699745772 as intpart 12442730565367377871866186780064040  diafora 745454924113281276692698458865581696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 278867470375348928.02567955551320544316240557236597 ^2 ::== 77767066033546111992353523123411080 as intpart 77767066033546111978031137750749184  diafora 680130588645102542586533507894896512 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 13943373518767446.401283977775660272158120278618298 ^2 ::== 194417665083865279980883807808527.6875 as intpart 194417665083865268790379029362916  diafora 757703237013564789295774266616282752 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 348584337969186160.03209944439150680395300696545746 ^2 ::== 121511040677415799988052379880329808 as intpart 121511040677415799965673652735545600  diafora 636386614001232854598890992910100096 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 100567188793897609.93260569336451840105617350218381 ^2 ::== 10113759461907445011959463245623491 as intpart 10113759461907444824380397575916881  diafora 747783895216741209740184248069728768 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 251417971984744024.83151423341129598876264594764507 ^2 ::== 63210996636921531324746645285146816 as intpart 63210996636921530906631400803712576  diafora 694686658041727123657933244841933056 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 757897654678648654564564645645645696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 25141797198474402.483151423341129600264043375545953 ^2 ::== 632109966369215313247466452851468.1875 as intpart 632109966369215288952876249257604  diafora 757265544712279439275611769396388096 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 628544929961860062.07878558352823994415103925348376 ^2 ::== 395068728980759570779666533032167552 as intpart 395068728980759570680625974870643840  diafora 362828925697889083883938670775001856 from 757897654678648654564564645645645696
the size of xpl vector is 53 64
 of 631581378898873878.80380387137137143671594685656601 ^2 ::== 398895038171802890854197131440726528 as intpart 398895038171802889838862016550758912  diafora 359002616506845764725702629094886784 from 757897654678648654564564645645645696

-------------------------------------------------------------------------

10 26 |36 16| 870573175947116265.48080546204937801846313050191384  and main 757897654678648654564564645645645696
-------------------------------------------------------------------------
section_temp 0
section h inf
757897654678648654564564645645645696 / 36 ::== 21052712629962462626793462379045712
            ----->  | *2 42105425259924925253586924758091424
            ----->  /2 10526356314981231313396731189522856
                 --> 5263178157490615656698365594761428
                 --> 2631589078745307828349182797380714
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 177286683631912395483938674022559488 421054252599249252.53586924758091403209192549184081
i insert 11080417726994524717746167126409968 105263563149812313.1339673118952285080229813729602
i insert 0 0
i insert 110804177269945240861647882275361 10526356314981231.313396731189522850108408746905297
i insert 69252610793715779222754636665531520 263158907874530782.83491827973807128393524124021496
CDIS Start 
section_temp 2050
section h 1026961591705485981794803042880.278564453125
21052712629962462626793462379045712 / 10 ::== 2105271262996246262679346237904571.25
            ----->  | *2 4210542525992492525358692475809142
            ----->  /2 1052635631498123131339673118952285.5
                 --> 526317815749061565669836559476142.75
                 --> 263158907874530782834918279738071.375
            ----->  section 1026961591705485981794803042880.278564453125
                 --> of section *2 2053923183410971963589606085760.55712890625
                 --> of section /2 513480795852742990897401521440.1392822265625

i insert 177286683631912395483938674022559488 421054252599249252.53586924758091403209192549184081
i insert 11080417726994524717746167126409968 105263563149812313.1339673118952285080229813729602
i insert 4202500 2050
i insert 10546501108382652903956988279765604 102696159170548598.17948030428802784486119747953126
i insert 42186004433530611615827953119062416 205392318341097196.35896060857605568972239495906251
i insert 263662527709566322598924706994140096 513480795852742990.89740152144013923818377520547074
i insert 110804177269945240861647882275361 10526356314981231.313396731189522850108408746905297
i insert 69252610793715779222754636665531520 263158907874530782.83491827973807128393524124021496
section_temp 25
section h 84210850519849850507173849516182.84375
2105271262996246262679346237904571.25 / 1 ::== 2105271262996246262679346237904571.25
            ----->  | *2 4210542525992492525358692475809142
            ----->  /2 1052635631498123131339673118952285.5
                 --> 526317815749061565669836559476142.75
                 --> 263158907874530782834918279738071.375
            ----->  section 84210850519849850507173849516182.84375
                 --> of section *2 168421701039699701014347699032365.6875
                 --> of section /2 42105425259924925253586924758091.421875

i insert 177286683631912395483938674022559488 421054252599249252.53586924758091403209192549184081
i insert 11080417726994524717746167126409968 105263563149812313.1339673118952285080229813729602
i insert 625 25
i insert 709146734527649583619971706487235072 842108505198498505.07173849516182806418385098368162
i insert 28365869381105983344798868259489400 168421701039699701.01434769903236560173453995048476
i insert 177286683631912395483938674022559488 421054252599249252.53586924758091403209192549184081
i insert 110804177269945240861647882275361 10526356314981231.313396731189522850108408746905297
i insert 69252610793715779222754636665531520 263158907874530782.83491827973807128393524124021496
CDIS End 
section_temp 0
section h inf
757897654678648654564564645645645696 / 16 ::== 47368603417415540910285290352852856
            ----->  | *2 94737206834831081820570580705705712
            ----->  /2 23684301708707770455142645176426428
                 --> 11842150854353885227571322588213214
                 --> 5921075427176942613785661294106607
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 8975138358865564888742305803628561 94737206834831081.820570580705705709956276905359118
i insert 56094614742909781265168462533911616 236843017087077704.5514264517642642748906922633978
i insert 0 0
i insert 560946147429097793704243258372900 23684301708707770.45514264517642642748906922633978
i insert 350591342143186134091517976272336128 592107542717694261.37856612941066070110451846630895
section_temp 50
section h 4554673405520725087527431764697.3798828125
47368603417415540910285290352852856 / 208 ::== 227733670276036254376371588234869.5
            ----->  | *2 455467340552072508752743176469738
            ----->  /2 113866835138018127188185794117434.5
                 --> 56933417569009063594092897058717.25
                 --> 28466708784504531797046448529358.625
            ----->  section 4554673405520725087527431764697.3798828125
                 --> of section *2 9109346811041450175054863529394.759765625
                 --> of section /2 2277336702760362543763715882348.68994140625

i insert 207450498309577593716561494089410048 455467340552072508.75274317646973804007970443308295
i insert 12965656144348599607285093380588128 113866835138018127.18818579411743451001992610827074
i insert 2500 50
i insert 207450498309577593716561494089410048 455467340552072508.75274317646973804007970443308295
i insert 8298019932383103639350298031079001 91093468110414501.75054863529394760801594088661659
i insert 51862624577394398429140373522352512 227733670276036254.37637158823486902003985221654148
i insert 129656561443485980131494014483344 11386683513801812.718818579411743451001992610827074
i insert 81035350902178747260864745783630488 284667087845045317.97046448529358628198870917458407
removals 
reporing rt 4
section_temp 0
section h inf
21052712629962462626793462379045712 - 227733670276036254376371588234869.5 ::== 20824978959686426372417090790810844
            ----->  | *2 41649957919372852744834181581621688
            ----->  /2 10412489479843213186208545395405422
                 --> 5206244739921606593104272697702711
                 --> 2603122369960803296552136348851355.5
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 173471899468552940909111008173589728 416499579193728527.44834181581621690426686654973309
i insert 10841993716784558650632095813201160 104124894798432131.86208545395405422606671663743327
i insert 0 0
i insert 108419937167845584423823062163369 10412489479843213.18620854539540542330056105413405
i insert 67762460729903492347387309820748240 260312236996080329.65521363488513556516679159358318
section_temp 75
section h 25033834569602800110706328662262.6796875
2105271262996246262679346237904571.25 - 227733670276036254376371588234869.5 ::== 1877537592720210008302974649669701.75
            ----->  | *2 3755075185440420016605949299339402
            ----->  /2 938768796360105004151487324834850.5
                 --> 469384398180052502075743662417425.25
                 --> 234692199090026251037871831208712.625
            ----->  section 25033834569602800110706328662262.6796875
                 --> of section *2 50067669139205600221412657324525.359375
                 --> of section /2 12516917284801400055353164331131.33984375

i insert 141005896483104047262508734852084000 375507518544042001.66059492993394025583953066416143
i insert 8812868530194002906968356110250000 93876879636010500.415148732483485063959882666040357
i insert 5625 75
i insert 62669287325824021172451668176056000 250338345696028001.10706328662262681872263669902168
i insert 250677149303296084689806672704224000 500676691392056002.21412657324525363744527339804335
i insert 15667321831456005167943744196000000 125169172848014000.55353164331131340936131834951084
i insert 88128685301940029069683561102500 9387687963601050.0415148732483485057020988762133129
i insert 55080428313712518637936623869115000 234692199090026251.03787183120871265296081276119367
section_temp 7050
section h 266317389038327660752194985768.751922607421875
2105271262996246262679346237904571.25 - 227733670276036254376371588234869.5 ::== 1877537592720210008302974649669701.75
            ----->  | *2 3755075185440420016605949299339402
            ----->  /2 938768796360105004151487324834850.5
                 --> 469384398180052502075743662417425.25
                 --> 234692199090026251037871831208712.625
            ----->  section 266317389038327660752194985768.751922607421875
                 --> of section *2 532634778076655321504389971537.50384521484375
                 --> of section /2 133158694519163830376097492884.3759613037109375

i insert 141005896483104047262508734852084000 375507518544042001.66059492993394025583953066416143
i insert 8812868530194002906968356110250000 93876879636010500.415148732483485063959882666040357
i insert 49702500 7050
i insert 70924951704191965676828489521075600 266317389038327660.75219498576875185036350046630105
i insert 283699806816767863772583514237613056 532634778076655321.5043899715375037007270009326021
i insert 17731237926047991419207122380268900 133158694519163830.37609749288437592518175023315052
i insert 88128685301940029069683561102500 9387687963601050.0415148732483485057020988762133129
i insert 55080428313712518637936623869115000 234692199090026251.03787183120871265296081276119367
section_temp 0
section h inf
47368603417415540910285290352852856 - 227733670276036254376371588234869.5 ::== 47140869747139504655908918764617984
            ----->  | *2 94281739494279009311817837529235968
            ----->  /2 23570434873569752327954459382308992
                 --> 11785217436784876163977229691154496
                 --> 5892608718392438081988614845577248
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 8889046402067090283745040738022081 94281739494279009.311817837529235961091522710830759
i insert 55556540012919314509110853348335528 235704348735697523.27954459382308990966770068098413
i insert 0 0
i insert 555565400129193130948847609341504 23570434873569752.32795445938230899027288067770769
i insert 347228375080745716271203705266340864 589260871839243808.19886148455772478804703951027477
ending sqti reporting the results 
reporting size of xl vector 59 64
entering amfidromi loop of xl vector  with first 
 of 421054252599249252.53586924758091403209192549184081 ^2 ::== 177286683631912395935198725084767136 as intpart 177286683631912395483938674022559488  diafora 580610971046736259080625971623086208 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 105263563149812313.1339673118952285080229813729602 ^2 ::== 11080417726994524745949920317797946 as intpart 11080417726994524717746167126409968  diafora 746817236951654129846818478519235712 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 757897654678648654564564645645645696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 10526356314981231.313396731189522850108408746905297 ^2 ::== 110804177269945247459499203177979.4375 as intpart 110804177269945240861647882275361  diafora 757786850501378709323702997763370368 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 263158907874530782.83491827973807128393524124021496 ^2 ::== 69252610793715779662187001986237168 as intpart 69252610793715779222754636665531520  diafora 688645043884932875341810008980114176 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 421054252599249252.53586924758091403209192549184081 ^2 ::== 177286683631912395935198725084767136 as intpart 177286683631912395483938674022559488  diafora 580610971046736259080625971623086208 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 105263563149812313.1339673118952285080229813729602 ^2 ::== 11080417726994524745949920317797946 as intpart 11080417726994524717746167126409968  diafora 746817236951654129846818478519235712 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 2050 ^2 ::== 4202500 as intpart 4202500  diafora 757897654678648654564564645641443200 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 102696159170548598.17948030428802784486119747953126 ^2 ::== 10546501108382652940820864074049212 as intpart 10546501108382652903956988279765604  diafora 747351153570266001660607657365880064 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 205392318341097196.35896060857605568972239495906251 ^2 ::== 42186004433530611763283456296196848 as intpart 42186004433530611615827953119062416  diafora 715711650245118042948736692526583296 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 513480795852742990.89740152144013923818377520547074 ^2 ::== 263662527709566323520521601851230304 as intpart 263662527709566322598924706994140096  diafora 494235126969082331965639938651505600 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 10526356314981231.313396731189522850108408746905297 ^2 ::== 110804177269945247459499203177979.4375 as intpart 110804177269945240861647882275361  diafora 757786850501378709323702997763370368 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 263158907874530782.83491827973807128393524124021496 ^2 ::== 69252610793715779662187001986237168 as intpart 69252610793715779222754636665531520  diafora 688645043884932875341810008980114176 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 421054252599249252.53586924758091403209192549184081 ^2 ::== 177286683631912395935198725084767136 as intpart 177286683631912395483938674022559488  diafora 580610971046736259080625971623086208 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 105263563149812313.1339673118952285080229813729602 ^2 ::== 11080417726994524745949920317797946 as intpart 11080417726994524717746167126409968  diafora 746817236951654129846818478519235712 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 25 ^2 ::== 625 as intpart 625  diafora 757897654678648654564564645645645056 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 842108505198498505.07173849516182806418385098368162 ^2 ::== 709146734527649583740794900339068544 as intpart 709146734527649583619971706487235072  diafora 48750920150999070944592939158410624 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 168421701039699701.01434769903236560173453995048476 ^2 ::== 28365869381105983349631796013562736 as intpart 28365869381105983344798868259489400  diafora 729531785297542671219765777386156288 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 421054252599249252.53586924758091403209192549184081 ^2 ::== 177286683631912395935198725084767136 as intpart 177286683631912395483938674022559488  diafora 580610971046736259080625971623086208 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 10526356314981231.313396731189522850108408746905297 ^2 ::== 110804177269945247459499203177979.4375 as intpart 110804177269945240861647882275361  diafora 757786850501378709323702997763370368 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 263158907874530782.83491827973807128393524124021496 ^2 ::== 69252610793715779662187001986237168 as intpart 69252610793715779222754636665531520  diafora 688645043884932875341810008980114176 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 94737206834831081.820570580705705709956276905359118 ^2 ::== 8975138358865565044219435457416346 as intpart 8975138358865564888742305803628561  diafora 748922516319783089675822339842017152 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 236843017087077704.5514264517642642748906922633978 ^2 ::== 56094614742909781526371471608852160 as intpart 56094614742909781265168462533911616  diafora 701803039935738873299396183111734016 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 757897654678648654564564645645645696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 23684301708707770.45514264517642642748906922633978 ^2 ::== 560946147429097815263714716088521.625 as intpart 560946147429097793704243258372900  diafora 757336708531219556770860402387272832 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 592107542717694261.37856612941066070110451846630895 ^2 ::== 350591342143186134539821697555326016 as intpart 350591342143186134091517976272336128  diafora 407306312535462520473046669373309568 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 455467340552072508.75274317646973804007970443308295 ^2 ::== 207450498309577594402261359500192032 as intpart 207450498309577593716561494089410048  diafora 550447156369071060848003151556235648 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 113866835138018127.18818579411743451001992610827074 ^2 ::== 12965656144348599650141334968762002 as intpart 12965656144348599607285093380588128  diafora 744931998534300054957279552265057536 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 50 ^2 ::== 2500 as intpart 2500  diafora 757897654678648654564564645645643136 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 455467340552072508.75274317646973804007970443308295 ^2 ::== 207450498309577594402261359500192032 as intpart 207450498309577593716561494089410048  diafora 550447156369071060848003151556235648 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 91093468110414501.75054863529394760801594088661659 ^2 ::== 8298019932383103776090454380007682 as intpart 8298019932383103639350298031079001  diafora 749599634746265550925214347614566656 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 227733670276036254.37637158823486902003985221654148 ^2 ::== 51862624577394398600565339875048008 as intpart 51862624577394398429140373522352512  diafora 706035030101254256135424272123293184 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 11386683513801812.718818579411743451001992610827074 ^2 ::== 129656561443485996501413349687620.03125 as intpart 129656561443485980131494014483344  diafora 757767998117205168584433151631162368 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 284667087845045317.97046448529358628198870917458407 ^2 ::== 81035350902178747813383343554762520 as intpart 81035350902178747260864745783630488  diafora 676862303776469907303699899862015232 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 416499579193728527.44834181581621690426686654973309 ^2 ::== 173471899468552941282579363418402688 as intpart 173471899468552940909111008173589728  diafora 584425755210095713655453637472055936 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 104124894798432131.86208545395405422606671663743327 ^2 ::== 10841993716784558830161210213650168 as intpart 10841993716784558650632095813201160  diafora 747055660961864095913932549832444544 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 757897654678648654564564645645645696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 10412489479843213.18620854539540542330056105413405 ^2 ::== 108419937167845588301612102136501.703125 as intpart 108419937167845584423823062163369  diafora 757789234741480808980140822583482368 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 260312236996080329.65521363488513556516679159358318 ^2 ::== 67762460729903492688507563835313552 as intpart 67762460729903492347387309820748240  diafora 690135193948745162217177335824897408 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 375507518544042001.66059492993394025583953066416143 ^2 ::== 141005896483104047758625460656622400 as intpart 141005896483104047262508734852084000  diafora 616891758195544607302055910793561728 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 93876879636010500.415148732483485063959882666040357 ^2 ::== 8812868530194002984914091291038900 as intpart 8812868530194002906968356110250000  diafora 749084786148454651657596289535395712 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 75 ^2 ::== 5625 as intpart 5625  diafora 757897654678648654564564645645640064 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 250338345696028001.10706328662262681872263669902168 ^2 ::== 62669287325824021226055760291832168 as intpart 62669287325824021172451668176056000  diafora 695228367352824633392112977469589760 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 500676691392056002.21412657324525363744527339804335 ^2 ::== 250677149303296084904223041167328672 as intpart 250677149303296084689806672704224000  diafora 507220505375352569874757972941421696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 125169172848014000.55353164331131340936131834951084 ^2 ::== 15667321831456005306513940072958042 as intpart 15667321831456005167943744196000000  diafora 742230332847192649396620901449645696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 9387687963601050.0415148732483485057020988762133129 ^2 ::== 88128685301940029849140912910388.984375 as intpart 88128685301940029069683561102500  diafora 757809525993346714535494962084543232 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 234692199090026251.03787183120871265296081276119367 ^2 ::== 55080428313712518655713070568993120 as intpart 55080428313712518637936623869115000  diafora 702817226364936135926628021776530688 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 375507518544042001.66059492993394025583953066416143 ^2 ::== 141005896483104047758625460656622400 as intpart 141005896483104047262508734852084000  diafora 616891758195544607302055910793561728 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 93876879636010500.415148732483485063959882666040357 ^2 ::== 8812868530194002984914091291038900 as intpart 8812868530194002906968356110250000  diafora 749084786148454651657596289535395712 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 7050 ^2 ::== 49702500 as intpart 49702500  diafora 757897654678648654564564645595943168 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 266317389038327660.75219498576875185036350046630105 ^2 ::== 70924951704191966077473698836387648 as intpart 70924951704191965676828489521075600  diafora 686972702974456688887736156124570112 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 532634778076655321.5043899715375037007270009326021 ^2 ::== 283699806816767864309894795345550592 as intpart 283699806816767863772583514237613056  diafora 474197847861880790791981131408032640 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 133158694519163830.37609749288437592518175023315052 ^2 ::== 17731237926047991519368424709096912 as intpart 17731237926047991419207122380268900  diafora 740166416752600663145357523265376768 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 9387687963601050.0415148732483485057020988762133129 ^2 ::== 88128685301940029849140912910388.984375 as intpart 88128685301940029069683561102500  diafora 757809525993346714535494962084543232 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 234692199090026251.03787183120871265296081276119367 ^2 ::== 55080428313712518655713070568993120 as intpart 55080428313712518637936623869115000  diafora 702817226364936135926628021776530688 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 94281739494279009.311817837529235961091522710830759 ^2 ::== 8889046402067090342542496993223764 as intpart 8889046402067090283745040738022081  diafora 749008608276581564280819604907623552 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 235704348735697523.27954459382308990966770068098413 ^2 ::== 55556540012919314640890606207648528 as intpart 55556540012919314509110853348335528  diafora 702341114665729340055453792297310208 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 757897654678648654564564645645645696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 23570434873569752.32795445938230899027288067770769 ^2 ::== 555565400129193146408906062076485.25 as intpart 555565400129193130948847609341504  diafora 757342089278519461433615798036304128 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 589260871839243808.19886148455772478804703951027477 ^2 ::== 347228375080745716505566288797803328 as intpart 347228375080745716271203705266340864  diafora 410669279597902938293360940379304832 from 757897654678648654564564645645645696
the size of xpl vector is 59 64
 of 842108505198498505.07173849516182806418385098368162 ^2 ::== 709146734527649583740794900339068544 as intpart 709146734527649583619971706487235072  diafora 48750920150999070944592939158410624 from 757897654678648654564564645645645696

-------------------------------------------------------------------------

10 |26| 36 |16| 870573175947116265.48080546204937801846313050191384  and main 757897654678648654564564645645645696
-------------------------------------------------------------------------
section_temp 0
section h inf
757897654678648654564564645645645696 / 26 ::== 29149909795332640560175563294063296
            ----->  | *2 58299819590665281120351126588126592
            ----->  /2 14574954897666320280087781647031648
                 --> 7287477448833160140043890823515824
                 --> 3643738724416580070021945411757912
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 339886896430411930431371609694201728 582998195906652811.20351126588126589034288826951524
i insert 21242931026900745433336402140892804 145749548976663202.80087781647031647258572206737881
i insert 0 0
i insert 212429310269007448503382062342400 14574954897666320.280087781647031647952461597128604
i insert 132768318918129660415848003147212048 364373872441658007.00219454117579120921988078407594
CDIS Start 
section_temp 50
section h 58299819590665281120351126588126.578125
29149909795332640560175563294063296 / 10 ::== 2914990979533264056017556329406329.5
            ----->  | *2 5829981959066528112035112658812658
            ----->  /2 1457495489766632028008778164703164.5
                 --> 728747744883316014004389082351582.25
                 --> 364373872441658007002194541175791.125
            ----->  section 58299819590665281120351126588126.578125
                 --> of section *2 116599639181330562240702253176253.15625
                 --> of section /2 29149909795332640560175563294063.2890625

i insert 339886896430411930431371609694201728 582998195906652811.20351126588126589034288826951524
i insert 21242931026900745433336402140892804 145749548976663202.80087781647031647258572206737881
i insert 2500 50
i insert 339886896430411930431371609694201728 582998195906652811.20351126588126589034288826951524
i insert 13595475857216477170615008715235844 116599639181330562.24070225317625318361969277702883
i insert 84971724107602982316343804470224032 291499097953326405.60175563294063294517144413475762
i insert 212429310269007448503382062342400 14574954897666320.280087781647031647952461597128604
i insert 132768318918129660415848003147212048 364373872441658007.00219454117579120921988078407594
section_temp 500
section h 5829981959066528112035112658812.658203125
2914990979533264056017556329406329.5 / 1 ::== 2914990979533264056017556329406329.5
            ----->  | *2 5829981959066528112035112658812658
            ----->  /2 1457495489766632028008778164703164.5
                 --> 728747744883316014004389082351582.25
                 --> 364373872441658007002194541175791.125
            ----->  section 5829981959066528112035112658812.658203125
                 --> of section *2 11659963918133056224070225317625.31640625
                 --> of section /2 2914990979533264056017556329406.3291015625

i insert 339886896430411930431371609694201728 582998195906652811.20351126588126589034288826951524
i insert 21242931026900745433336402140892804 145749548976663202.80087781647031647258572206737881
i insert 250000 500
i insert 339886896430411930431371609694201728 582998195906652811.20351126588126589034288826951524
i insert 13595475857216477170615008715235844 116599639181330562.24070225317625318361969277702883
i insert 84971724107602982316343804470224032 291499097953326405.60175563294063294517144413475762
i insert 212429310269007448503382062342400 14574954897666320.280087781647031647952461597128604
i insert 132768318918129660415848003147212048 364373872441658007.00219454117579120921988078407594
CDIS End 
section_temp 0
section h inf
757897654678648654564564645645645696 / 16 ::== 47368603417415540910285290352852856
            ----->  | *2 94737206834831081820570580705705712
            ----->  /2 23684301708707770455142645176426428
                 --> 11842150854353885227571322588213214
                 --> 5921075427176942613785661294106607
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 8975138358865564888742305803628561 94737206834831081.820570580705705709956276905359118
i insert 56094614742909781265168462533911616 236843017087077704.5514264517642642748906922633978
i insert 0 0
i insert 560946147429097793704243258372900 23684301708707770.45514264517642642748906922633978
i insert 350591342143186134091517976272336128 592107542717694261.37856612941066070110451846630895
section_temp 500
section h 455467340552072508752743176469.73797607421875
47368603417415540910285290352852856 / 208 ::== 227733670276036254376371588234869.5
            ----->  | *2 455467340552072508752743176469738
            ----->  /2 113866835138018127188185794117434.5
                 --> 56933417569009063594092897058717.25
                 --> 28466708784504531797046448529358.625
            ----->  section 455467340552072508752743176469.73797607421875
                 --> of section *2 910934681104145017505486352939.4759521484375
                 --> of section /2 227733670276036254376371588234.868988037109375

i insert 207450498309577593716561494089410048 455467340552072508.75274317646973804007970443308295
i insert 12965656144348599607285093380588128 113866835138018127.18818579411743451001992610827074
i insert 250000 500
i insert 207450498309577593716561494089410048 455467340552072508.75274317646973804007970443308295
i insert 8298019932383103639350298031079001 91093468110414501.75054863529394760801594088661659
i insert 51862624577394398429140373522352512 227733670276036254.37637158823486902003985221654148
i insert 129656561443485980131494014483344 11386683513801812.718818579411743451001992610827074
i insert 81035350902178747260864745783630488 284667087845045317.97046448529358628198870917458407
removals 
reporing rt 4
section_temp 0
section h inf
29149909795332640560175563294063296 - 227733670276036254376371588234869.5 ::== 28922176125056604305799191705828428
            ----->  | *2 57844352250113208611598383411656856
            ----->  /2 14461088062528302152899595852914214
                 --> 7230544031264151076449797926457107
                 --> 3615272015632075538224898963228553.5
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 334596908723517701877227151618711424 578443522501132086.11598383411656854047322440237622
i insert 20912306795219856222715816350886440 144610880625283021.52899595852914213511830610059405
i insert 0 0
i insert 209123067952198559334940551003204 14461088062528302.152899595852914214205720000450128
i insert 130701917470124101753501053756247808 361527201563207553.82248989632285535167355305929959
section_temp 0
section h inf
2914990979533264056017556329406329.5 - 227733670276036254376371588234869.5 ::== 2687257309257227801641184741171460
            ----->  | *2 5374514618514455603282369482342920
            ----->  /2 1343628654628613900820592370585730
                 --> 671814327314306950410296185292865
                 --> 335907163657153475205148092646432.5
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 288854073846255842092885861643713600 537451461851445560.32823694823429205857934221057803
i insert 18053379615390990130805366352732100 134362865462861390.08205923705857301464483555264451
i insert 0 0
i insert 180533796153909901308053663527321 13436286546286139.008205923705857301811428250459812
i insert 112833622596193688317533539704575632 335907163657153475.20514809264643252273430107379681
section_temp 0
section h inf
2914990979533264056017556329406329.5 - 227733670276036254376371588234869.5 ::== 2687257309257227801641184741171460
            ----->  | *2 5374514618514455603282369482342920
            ----->  /2 1343628654628613900820592370585730
                 --> 671814327314306950410296185292865
                 --> 335907163657153475205148092646432.5
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 288854073846255842092885861643713600 537451461851445560.32823694823429205857934221057803
i insert 18053379615390990130805366352732100 134362865462861390.08205923705857301464483555264451
i insert 0 0
i insert 180533796153909901308053663527321 13436286546286139.008205923705857301811428250459812
i insert 112833622596193688317533539704575632 335907163657153475.20514809264643252273430107379681
section_temp 0
section h inf
47368603417415540910285290352852856 - 227733670276036254376371588234869.5 ::== 47140869747139504655908918764617984
            ----->  | *2 94281739494279009311817837529235968
            ----->  /2 23570434873569752327954459382308992
                 --> 11785217436784876163977229691154496
                 --> 5892608718392438081988614845577248
            ----->  section inf
                 --> of section *2 inf
                 --> of section /2 inf

error continue with the rest 
i insert 8889046402067090283745040738022081 94281739494279009.311817837529235961091522710830759
i insert 55556540012919314509110853348335528 235704348735697523.27954459382308990966770068098413
i insert 0 0
i insert 555565400129193130948847609341504 23570434873569752.32795445938230899027288067770769
i insert 347228375080745716271203705266340864 589260871839243808.19886148455772478804703951027477
ending sqti reporting the results 
reporting size of xl vector 53 64
entering amfidromi loop of xl vector  with first 
 of 582998195906652811.20351126588126589034288826951524 ^2 ::== 339886896430411930668665011405116032 as intpart 339886896430411930431371609694201728  diafora 418010758248236724133193035951443968 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 145749548976663202.80087781647031647258572206737881 ^2 ::== 21242931026900745666791563212819752 as intpart 21242931026900745433336402140892804  diafora 736654723651747909131228243504752896 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 757897654678648654564564645645645696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 14574954897666320.280087781647031647952461597128604 ^2 ::== 212429310269007456667915632128197.53125 as intpart 212429310269007448503382062342400  diafora 757685225368379647116061263583303296 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 364373872441658007.00219454117579120921988078407594 ^2 ::== 132768318918129660417447270080123472 as intpart 132768318918129660415848003147212048  diafora 625129335760518994148716642498433664 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 582998195906652811.20351126588126589034288826951524 ^2 ::== 339886896430411930668665011405116032 as intpart 339886896430411930431371609694201728  diafora 418010758248236724133193035951443968 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 145749548976663202.80087781647031647258572206737881 ^2 ::== 21242931026900745666791563212819752 as intpart 21242931026900745433336402140892804  diafora 736654723651747909131228243504752896 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 50 ^2 ::== 2500 as intpart 2500  diafora 757897654678648654564564645645643136 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 582998195906652811.20351126588126589034288826951524 ^2 ::== 339886896430411930668665011405116032 as intpart 339886896430411930431371609694201728  diafora 418010758248236724133193035951443968 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 116599639181330562.24070225317625318361969277702883 ^2 ::== 13595475857216477226746600456204642 as intpart 13595475857216477170615008715235844  diafora 744302178821432177393949636930409856 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 291499097953326405.60175563294063294517144413475762 ^2 ::== 84971724107602982667166252851279008 as intpart 84971724107602982316343804470224032  diafora 672925930571045672248220841175421696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 14574954897666320.280087781647031647952461597128604 ^2 ::== 212429310269007456667915632128197.53125 as intpart 212429310269007448503382062342400  diafora 757685225368379647116061263583303296 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 364373872441658007.00219454117579120921988078407594 ^2 ::== 132768318918129660417447270080123472 as intpart 132768318918129660415848003147212048  diafora 625129335760518994148716642498433664 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 582998195906652811.20351126588126589034288826951524 ^2 ::== 339886896430411930668665011405116032 as intpart 339886896430411930431371609694201728  diafora 418010758248236724133193035951443968 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 145749548976663202.80087781647031647258572206737881 ^2 ::== 21242931026900745666791563212819752 as intpart 21242931026900745433336402140892804  diafora 736654723651747909131228243504752896 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 500 ^2 ::== 250000 as intpart 250000  diafora 757897654678648654564564645645395712 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 582998195906652811.20351126588126589034288826951524 ^2 ::== 339886896430411930668665011405116032 as intpart 339886896430411930431371609694201728  diafora 418010758248236724133193035951443968 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 116599639181330562.24070225317625318361969277702883 ^2 ::== 13595475857216477226746600456204642 as intpart 13595475857216477170615008715235844  diafora 744302178821432177393949636930409856 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 291499097953326405.60175563294063294517144413475762 ^2 ::== 84971724107602982667166252851279008 as intpart 84971724107602982316343804470224032  diafora 672925930571045672248220841175421696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 14574954897666320.280087781647031647952461597128604 ^2 ::== 212429310269007456667915632128197.53125 as intpart 212429310269007448503382062342400  diafora 757685225368379647116061263583303296 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 364373872441658007.00219454117579120921988078407594 ^2 ::== 132768318918129660417447270080123472 as intpart 132768318918129660415848003147212048  diafora 625129335760518994148716642498433664 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 94737206834831081.820570580705705709956276905359118 ^2 ::== 8975138358865565044219435457416346 as intpart 8975138358865564888742305803628561  diafora 748922516319783089675822339842017152 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 236843017087077704.5514264517642642748906922633978 ^2 ::== 56094614742909781526371471608852160 as intpart 56094614742909781265168462533911616  diafora 701803039935738873299396183111734016 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 757897654678648654564564645645645696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 23684301708707770.45514264517642642748906922633978 ^2 ::== 560946147429097815263714716088521.625 as intpart 560946147429097793704243258372900  diafora 757336708531219556770860402387272832 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 592107542717694261.37856612941066070110451846630895 ^2 ::== 350591342143186134539821697555326016 as intpart 350591342143186134091517976272336128  diafora 407306312535462520473046669373309568 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 455467340552072508.75274317646973804007970443308295 ^2 ::== 207450498309577594402261359500192032 as intpart 207450498309577593716561494089410048  diafora 550447156369071060848003151556235648 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 113866835138018127.18818579411743451001992610827074 ^2 ::== 12965656144348599650141334968762002 as intpart 12965656144348599607285093380588128  diafora 744931998534300054957279552265057536 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 500 ^2 ::== 250000 as intpart 250000  diafora 757897654678648654564564645645395712 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 455467340552072508.75274317646973804007970443308295 ^2 ::== 207450498309577594402261359500192032 as intpart 207450498309577593716561494089410048  diafora 550447156369071060848003151556235648 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 91093468110414501.75054863529394760801594088661659 ^2 ::== 8298019932383103776090454380007682 as intpart 8298019932383103639350298031079001  diafora 749599634746265550925214347614566656 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 227733670276036254.37637158823486902003985221654148 ^2 ::== 51862624577394398600565339875048008 as intpart 51862624577394398429140373522352512  diafora 706035030101254256135424272123293184 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 11386683513801812.718818579411743451001992610827074 ^2 ::== 129656561443485996501413349687620.03125 as intpart 129656561443485980131494014483344  diafora 757767998117205168584433151631162368 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 284667087845045317.97046448529358628198870917458407 ^2 ::== 81035350902178747813383343554762520 as intpart 81035350902178747260864745783630488  diafora 676862303776469907303699899862015232 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 578443522501132086.11598383411656854047322440237622 ^2 ::== 334596908723517702011407346737861184 as intpart 334596908723517701877227151618711424  diafora 423300745955130952687337494026934272 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 144610880625283021.52899595852914213511830610059405 ^2 ::== 20912306795219856375712959171116324 as intpart 20912306795219856222715816350886440  diafora 736985347883428798341848829294759296 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 757897654678648654564564645645645696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 14461088062528302.152899595852914214205720000450128 ^2 ::== 209123067952198563757129591711163.25 as intpart 209123067952198559334940551003204  diafora 757688531610696456005229705094642432 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 361527201563207553.82248989632285535167355305929959 ^2 ::== 130701917470124102348205994819477024 as intpart 130701917470124101753501053756247808  diafora 627195737208524552811063591889397888 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 537451461851445560.32823694823429205857934221057803 ^2 ::== 288854073846255842445708716968068672 as intpart 288854073846255842092885861643713600  diafora 469043580832392812471678784001932096 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 134362865462861390.08205923705857301464483555264451 ^2 ::== 18053379615390990152856794810504292 as intpart 18053379615390990130805366352732100  diafora 739844275063257664433759279292913536 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 757897654678648654564564645645645696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 13436286546286139.008205923705857301811428250459812 ^2 ::== 180533796153909901528567948105042.90625 as intpart 180533796153909901308053663527321  diafora 757717120882494744663256591982118400 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 335907163657153475.20514809264643252273430107379681 ^2 ::== 112833622596193688455354967565651808 as intpart 112833622596193688317533539704575632  diafora 645064032082454966247031105941070080 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 537451461851445560.32823694823429205857934221057803 ^2 ::== 288854073846255842445708716968068672 as intpart 288854073846255842092885861643713600  diafora 469043580832392812471678784001932096 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 134362865462861390.08205923705857301464483555264451 ^2 ::== 18053379615390990152856794810504292 as intpart 18053379615390990130805366352732100  diafora 739844275063257664433759279292913536 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 757897654678648654564564645645645696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 13436286546286139.008205923705857301811428250459812 ^2 ::== 180533796153909901528567948105042.90625 as intpart 180533796153909901308053663527321  diafora 757717120882494744663256591982118400 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 335907163657153475.20514809264643252273430107379681 ^2 ::== 112833622596193688455354967565651808 as intpart 112833622596193688317533539704575632  diafora 645064032082454966247031105941070080 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 94281739494279009.311817837529235961091522710830759 ^2 ::== 8889046402067090342542496993223764 as intpart 8889046402067090283745040738022081  diafora 749008608276581564280819604907623552 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 235704348735697523.27954459382308990966770068098413 ^2 ::== 55556540012919314640890606207648528 as intpart 55556540012919314509110853348335528  diafora 702341114665729340055453792297310208 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 0 ^2 ::== 0 as intpart 0  diafora 757897654678648654564564645645645696 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 23570434873569752.32795445938230899027288067770769 ^2 ::== 555565400129193146408906062076485.25 as intpart 555565400129193130948847609341504  diafora 757342089278519461433615798036304128 from 757897654678648654564564645645645696
entering amfidromi loop of xl vector  with first 
 of 589260871839243808.19886148455772478804703951027477 ^2 ::== 347228375080745716505566288797803328 as intpart 347228375080745716271203705266340864  diafora 410669279597902938293360940379304832 from 757897654678648654564564645645645696
the size of xpl vector is 53 64
 of 592107542717694261.37856612941066070110451846630895 ^2 ::== 350591342143186134539821697555326016 as intpart 350591342143186134091517976272336128  diafora 407306312535462520473046669373309568 from 757897654678648654564564645645645696

-------------------------------------------------------------------------


 800550831511525091.854822 ^2 ::== 640881633833794235985115343686328320.000000 as intpart 640881633833794234616459160722558272.000000 diafora 117016020844854419948105484923087424.000000 from 757897654678648654564564645645645696.000000 
 800550831511525091.854822 ^2 ::== 640881633833794235985115343686328320.000000 as intpart 640881633833794234616459160722558272.000000 diafora 117016020844854419948105484923087424.000000 from 757897654678648654564564645645645696.000000 
 606318123742918923.651652 ^2 ::== 367621667179133544211228076335773504.000000 as intpart 367621667179133543421011584151479936.000000 diafora 390275987499515111143553061494165760.000000 from 757897654678648654564564645645645696.000000 
 606318123742918923.651652 ^2 ::== 367621667179133544211228076335773504.000000 as intpart 367621667179133543421011584151479936.000000 diafora 390275987499515111143553061494165760.000000 from 757897654678648654564564645645645696.000000 
 606318123742918923.651652 ^2 ::== 367621667179133544211228076335773504.000000 as intpart 367621667179133543421011584151479936.000000 diafora 390275987499515111143553061494165760.000000 from 757897654678648654564564645645645696.000000 
 866168748204169890.930931 ^2 ::== 750248300365578661655567502726068480.000000 as intpart 750248300365578660042880783982612096.000000 diafora 7649354313069994521683861663033600.000000 from 757897654678648654564564645645645696.000000 
 582998195906652811.203511 ^2 ::== 339886896430411930668665011405116032.000000 as intpart 339886896430411930431371609694201728.000000 diafora 418010758248236724133193035951443968.000000 from 757897654678648654564564645645645696.000000 
 582998195906652811.203511 ^2 ::== 339886896430411930668665011405116032.000000 as intpart 339886896430411930431371609694201728.000000 diafora 418010758248236724133193035951443968.000000 from 757897654678648654564564645645645696.000000 
 582998195906652811.203511 ^2 ::== 339886896430411930668665011405116032.000000 as intpart 339886896430411930431371609694201728.000000 diafora 418010758248236724133193035951443968.000000 from 757897654678648654564564645645645696.000000 
 582998195906652811.203511 ^2 ::== 339886896430411930668665011405116032.000000 as intpart 339886896430411930431371609694201728.000000 diafora 418010758248236724133193035951443968.000000 from 757897654678648654564564645645645696.000000 
 582998195906652811.203511 ^2 ::== 339886896430411930668665011405116032.000000 as intpart 339886896430411930431371609694201728.000000 diafora 418010758248236724133193035951443968.000000 from 757897654678648654564564645645645696.000000 
 866168748204169890.930931 ^2 ::== 750248300365578661655567502726068480.000000 as intpart 750248300365578660042880783982612096.000000 diafora 7649354313069994521683861663033600.000000 from 757897654678648654564564645645645696.000000 
 631581378898873878.803804 ^2 ::== 398895038171802890854197131440726528.000000 as intpart 398895038171802889838862016550758912.000000 diafora 359002616506845764725702629094886784.000000 from 757897654678648654564564645645645696.000000 
 842108505198498505.071738 ^2 ::== 709146734527649583740794900339068544.000000 as intpart 709146734527649583619971706487235072.000000 diafora 48750920150999070944592939158410624.000000 from 757897654678648654564564645645645696.000000 
 592107542717694261.378566 ^2 ::== 350591342143186134539821697555326016.000000 as intpart 350591342143186134091517976272336128.000000 diafora 407306312535462520473046669373309568.000000 from 757897654678648654564564645645645696.000000 

---------order of near approximation numbers--------
|----------bigger value is the nearest-------------|

the size of fnl_weirdo vector is 14 16
 866168748204169890  866168748204169890  842108505198498505  800550831511525091  800550831511525091  631581378898873878  606318123742918923  606318123742918923  606318123742918923  592107542717694261  582998195906652811  582998195906652811  582998195906652811  582998195906652811 
----------------------------------------------------

auto value is 866168748204169890
lenght of 866168748204169890 18
lenght of 757897654678648654564564645645645696 is 36
moving with ps_ask 19
-------------------------------------------------------
times 1 7 8
main 2.6457513110645905905016157536392604010093292773694 second 2.8284271247461900976033774484193959686944927783173
main 7 second 7.9999999999999999999999999999999992296280222451057
times of 0.33071891388307382381270196920490759827441476935207
new times of 0.33071891388307382381270196920490759827441476935207
using 866168748204169890 * 0.33071891388307382381270196920490759827441476935207
286458387645544716.63184730663306812314949922892993  with length of 50 and dot length 18 will move 32
lap for tens is more than ten will lower it 

 trying to reach the main number 757897654678648654564564645645645696  main number intpart lenght 36 
 fract 0 int 757897654678648654564564645645645696
    -----------------> 286458387645544716.63184730663306812314949922892993 ^2 ::== 82058407852485165942190085748098224
 temp fract 0 temp int 82058407852485165942190085748098224
before loop xstp is 0
using for fract 8205840785248516594219008574809823232
getting the part of 8205840785248516594219008574809823232 :: ad 37 and mad 36
i push_back a near value 
    -----------------> 2864583876455447166.3184730663306813980284459830727 ^2 ::== 8205840785248516594219008574809823232
t_ten increased 

increasing the digits 2
-------------------------------------------------------
-------------------------------------------------------
times 2 75 86
main 8.660254037844386467637231707529361610765486587056 second 9.273618495495703752516416073990174378377319059153
main 75 second 86
times of 0.10070062834702774962368874078522513444903765089971
new times of 0.10070062834702774962368874078522513444903765089971
using 866168748204169890 * 0.10070062834702774962368874078522513444903765089971
87223737198718371.625351485215251065574726396789629  with length of 50 and dot length 17 will move 33
lap for tens is more than ten will lower it 

 trying to reach the main number 757897654678648654564564645645645696  main number intpart lenght 36 
 fract 0 int 757897654678648654564564645645645696
    -----------------> 87223737198718371.625351485215251065574726396789629 ^2 ::== 7607980330911087006924832179380193
 temp fract 0 temp int 7607980330911087006924832179380193
before loop xstp is 0
using for fract 760798033091108700692483217938019328
getting the part of 760798033091108700692483217938019328 :: ad 36 and mad 36
i push_back a near value 
    -----------------> 872237371987183716.2535148521525106835028395835252 ^2 ::== 760798033091108700692483217938019328
t_ten increased 

increasing the digits 3
-------------------------------------------------------
-------------------------------------------------------
times 3 757 866
main 27.513632984395208727187908796558556580849649226851 second 29.427877939124322798506775195608702721460423023018
main 757 second 866.00000000000000000000000000000009860761315262648
times of 0.031770938781056823010609594453300872329478920031097
new times of 0.031770938781056823010609594453300872329478920031097
using 866168748204169890 * 0.031770938781056823010609594453300872329478920031097
27518994273259303.580082408782228990673512925013711  with length of 50 and dot length 17 will move 33
lap for tens is more than ten will lower it 

 trying to reach the main number 757897654678648654564564645645645696  main number intpart lenght 36 
 fract 0 int 757897654678648654564564645645645696
    -----------------> 27518994273259303.580082408782228990673512925013711 ^2 ::== 757295045811678345999579646639052.5
 temp fract 0.5 temp int 757295045811678345999579646639052
before loop xstp is 0
using for fract 75729504581167834599957964663905264
getting the part of 75729504581167834599957964663905264 :: ad 35 and mad 36
    -----------------> 275189942732593035.80082408782228992061291705795156 ^2 ::== 75729504581167834599957964663905264
t_ten increased 
using for fract 7572950458116783459995796466390525952
getting the part of 7572950458116783459995796466390525952 :: ad 37 and mad 36
i push_back a near value 
    -----------------> 2751899427325930358.008240878222899095106868117 ^2 ::== 7572950458116783459995796466390525952
t_ten increased 

increasing the digits 4
-------------------------------------------------------
-------------------------------------------------------
times 4 7578 8661
main 87.051708771281451508825780640850989481244678732596 second 93.064493766419854737727987535482140779804508872688
main 7578.0000000000000000000000000000007888609052210118 second 8661
times of 0.010050999742671914502808657272930491864097625879682
new times of 0.010050999742671914502808657272930491864097625879682
using 866168748204169890 * 0.010050999742671914502808657272930491864097625879682
8705861865310565.8715121702437831465240525297133445  with length of 50 and dot length 16 will move 34
lap for tens is more than ten will lower it 

 trying to reach the main number 757897654678648654564564645645645696  main number intpart lenght 36 
 fract 0 int 757897654678648654564564645645645696
    -----------------> 8705861865310565.8715121702437831465240525297133445 ^2 ::== 75792030817868765379833036778027.0078125
 temp fract 0.0078125 temp int 75792030817868765379833036778027
before loop xstp is 0
using for fract 7579203081786876537983303677802701
getting the part of 7579203081786876537983303677802701 :: ad 34 and mad 36
    -----------------> 87058618653105658.715121702437831463505801821156638 ^2 ::== 7579203081786876537983303677802701
t_ten increased 
using for fract 757920308178687653798330367780270080
getting the part of 757920308178687653798330367780270080 :: ad 36 and mad 36
i push_back a near value 
    -----------------> 870586186531056587.15121702437831463505801821156638 ^2 ::== 757920308178687653798330367780270080
t_ten increased 

increasing the digits 5
-------------------------------------------------------
-------------------------------------------------------
times 5 75789 86616
main 275.29802033432786746563756077119458034050114511359 second 294.30596324233731027269846389383874353803916970066
main 75789 second 86616.000000000000000000000000000012621774483536189
times of 0.0031783737454318817246887129487761444231111107338125
new times of 0.0031783737454318817246887129487761444231111107338125
using 866168748204169890 * 0.0031783737454318817246887129487761444231111107338125
2753008008405731.9307414184787955258384983814323732  with length of 50 and dot length 16 will move 34
lap for tens is more than ten will lower it 

 trying to reach the main number 757897654678648654564564645645645696  main number intpart lenght 36 
 fract 0 int 757897654678648654564564645645645696
    -----------------> 2753008008405731.9307414184787955258384983814323732 ^2 ::== 7579053094346094573029471298429.6806640625
 temp fract 0.6806640625 temp int 7579053094346094573029471298429
before loop xstp is 0
using for fract 757905309434609457302947129842968
getting the part of 757905309434609457302947129842968 :: ad 33 and mad 36
    -----------------> 27530080084057319.307414184787955256650260338346925 ^2 ::== 757905309434609457302947129842968
t_ten increased 
using for fract 75790530943460945730294712984296808
getting the part of 75790530943460945730294712984296808 :: ad 35 and mad 36
    -----------------> 275300800840573193.07414184787955258038039119128371 ^2 ::== 75790530943460945730294712984296808
t_ten increased 
using for fract 7579053094346094573029471298429680640
getting the part of 7579053094346094573029471298429680640 :: ad 37 and mad 36
i push_back a near value 
    -----------------> 2753008008405731930.7414184787955258038039119128371 ^2 ::== 7579053094346094573029471298429680640
t_ten increased 

increasing the digits 6
-------------------------------------------------------
-------------------------------------------------------
times 6 757897 866168
main 870.57279994265844280725974083885444329519374490328 second 930.68147075140590229833907082689573344599096166211
main 757897 second 866168
times of 0.0010050853875260439577625353751683904516041658481391
new times of 0.0010050853875260439577625353751683904516041658481391
using 866168748204169890 * 0.0010050853875260439577625353751683904516041658481391
870573551951736.4852999399142068565407570623904121  with length of 49 and dot length 15 will move 34
lap for tens is more than ten will lower it 

 trying to reach the main number 757897654678648654564564645645645696  main number intpart lenght 36 
 fract 0 int 757897654678648654564564645645645696
    -----------------> 870573551951736.4852999399142068565407570623904121 ^2 ::== 757898309357862825153458319846.4796142578125
 temp fract 0.4796142578125 temp int 757898309357862825153458319846
before loop xstp is 0
using for fract 75789830935786282515345831984647.9609375
getting the part of 75789830935786282515345831984647.9609375 :: ad 32 and mad 36
    -----------------> 8705735519517364.852999399142068565407570623904121 ^2 ::== 75789830935786282515345831984647.9609375
t_ten increased 
using for fract 7578983093578628251534583198464796
getting the part of 7578983093578628251534583198464796 :: ad 34 and mad 36
    -----------------> 87057355195173648.529993991420685650606259287087596 ^2 ::== 7578983093578628251534583198464796
t_ten increased 
using for fract 757898309357862825153458319846479616
getting the part of 757898309357862825153458319846479616 :: ad 36 and mad 36
i push_back a near value 
    -----------------> 870573551951736485.29993991420685650606259287087596 ^2 ::== 757898309357862825153458319846479616
t_ten increased 

increasing the digits 7
-------------------------------------------------------
-------------------------------------------------------
times 7 7578976 8661687
main 2752.9940065317977368159208347941212064801984363927 second 2943.074412922649837361420625476346936268894040828
main 7578975.9999999999999999999999999991922064330536839 second 8661687
times of 0.00031783577570186936295619096312232493543595652940746
new times of 0.00031783577570186936295619096312232493543595652940746
using 866168748204169890 * 0.00031783577570186936295619096312232493543595652940746
275299415974189.50273443684600571394380762180187361  with length of 50 and dot length 15 will move 35
lap for tens is more than ten will lower it 

 trying to reach the main number 757897654678648654564564645645645696  main number intpart lenght 36 
 fract 0 int 757897654678648654564564645645645696
    -----------------> 275299415974189.50273443684600571394380762180187361 ^2 ::== 75789768435729826352907915357.6056060791015625
 temp fract 0.6056060791015625 temp int 75789768435729826352907915357
before loop xstp is 0
using for fract 7578976843572982635290791535760.560546875
getting the part of 7578976843572982635290791535760.560546875 :: ad 31 and mad 36
    -----------------> 2752994159741895.0273443684600571394922863266430113 ^2 ::== 7578976843572982635290791535760.560546875
t_ten increased 
using for fract 757897684357298263529079153576056
getting the part of 757897684357298263529079153576056 :: ad 33 and mad 36
    -----------------> 27529941597418950.27344368460057139405550152844171 ^2 ::== 757897684357298263529079153576056
t_ten increased 
using for fract 75789768435729826352907915357605600
getting the part of 75789768435729826352907915357605600 :: ad 35 and mad 36
    -----------------> 275299415974189502.73443684600571393361612138050987 ^2 ::== 75789768435729826352907915357605600
t_ten increased 
using for fract 7578976843572982635290791535760560128
getting the part of 7578976843572982635290791535760560128 :: ad 37 and mad 36
i push_back a near value 
    -----------------> 2752994159741895027.3443684600571392806500625738408 ^2 ::== 7578976843572982635290791535760560128
t_ten increased 

increasing the digits 8
-------------------------------------------------------
-------------------------------------------------------
times 8 75789765 86616874
main 8705.731732600080527248200723721630280376425824407 second 9306.8186830946695950040266658422540646205250830087
main 75789765 second 86616874
times of 0.00010050849598428223728379069329749339604385691334297
new times of 0.00010050849598428223728379069329749339604385691334297
using 866168748204169890 * 0.00010050849598428223728379069329749339604385691334297
87057318150589.581715916251622727292810120791610728  with length of 50 and dot length 14 will move 36
lap for tens is more than ten will lower it 

 trying to reach the main number 757897654678648654564564645645645696  main number intpart lenght 36 
 fract 0 int 757897654678648654564564645645645696
    -----------------> 87057318150589.581715916251622727292810120791610728 ^2 ::== 7578976643572974228536235679.1501903533935546875
 temp fract 0.1501903533935546875 temp int 7578976643572974228536235679
before loop xstp is 0
using for fract 757897664357297422853623567915.01904296875
getting the part of 757897664357297422853623567915.01904296875 :: ad 30 and mad 36
    -----------------> 870573181505895.8171591625162272729552062622282449 ^2 ::== 757897664357297422853623567915.01904296875
t_ten increased 
using for fract 75789766435729742285362356791501.90625
getting the part of 75789766435729742285362356791501.90625 :: ad 32 and mad 36
    -----------------> 8705731815058958.1715916251622727293352221877853481 ^2 ::== 75789766435729742285362356791501.90625
t_ten increased 
using for fract 7578976643572974228536235679150190
getting the part of 7578976643572974228536235679150190 :: ad 34 and mad 36
    -----------------> 87057318150589581.715916251622727289882774925899867 ^2 ::== 7578976643572974228536235679150190
t_ten increased 
using for fract 757897664357297422853623567915019008
getting the part of 757897664357297422853623567915019008 :: ad 36 and mad 36
i push_back a near value 
    -----------------> 870573181505895817.15916251622727295433890049025649 ^2 ::== 757897664357297422853623567915019008
t_ten increased 

increasing the digits 9
-------------------------------------------------------
-------------------------------------------------------
times 9 757897654 866168748
main 27529.941046068369668458521507369937225807726595904 second 29430.744944700261528240941997136858894473712821717
main 757897654 second 866168748.00000000000000000000000010339757656912846
times of 3.1783576941139383694848479464384845857130955868451e-05
new times of 3.1783576941139383694848479464384845857130955868451e-05
using 866168748204169890 * 3.1783576941139383694848479464384845857130955868451e-05
27529941052557.619076337485951014940498875541163848  with length of 50 and dot length 14 will move 36
lap for tens is more than ten will lower it 

 trying to reach the main number 757897654678648654564564645645645696  main number intpart lenght 36 
 fract 0 int 757897654678648654564564645645645696
    -----------------> 27529941052557.619076337485951014940498875541163848 ^2 ::== 757897654357297307306394291.61293447017669677734375
 temp fract 0.61293447017669677734375 temp int 757897654357297307306394291
before loop xstp is 0
using for fract 75789765435729730730639429161.29343414306640625
getting the part of 75789765435729730730639429161.29343414306640625 :: ad 29 and mad 36
    -----------------> 275299410525576.19076337485951014939821249183360408 ^2 ::== 75789765435729730730639429161.29343414306640625
t_ten increased 
using for fract 7578976543572973073063942916129.3427734375
getting the part of 7578976543572973073063942916129.3427734375 :: ad 31 and mad 36
    -----------------> 2752994105255761.9076337485951014938737047010874903 ^2 ::== 7578976543572973073063942916129.3427734375
t_ten increased 
using for fract 757897654357297307306394291612934.375
getting the part of 757897654357297307306394291612934.375 :: ad 33 and mad 36
    -----------------> 27529941052557619.07633748595101494047177048685171 ^2 ::== 757897654357297307306394291612934.375
t_ten increased 
using for fract 75789765435729730730639429161293448
getting the part of 75789765435729730730639429161293448 :: ad 35 and mad 36
    -----------------> 275299410525576190.76337485951014941165659877242433 ^2 ::== 75789765435729730730639429161293448
t_ten increased 
using for fract 7578976543572973073063942916129344512
getting the part of 7578976543572973073063942916129344512 :: ad 37 and mad 36
i push_back a near value 
    -----------------> 2752994105255761907.6337485951014940610548364929855 ^2 ::== 7578976543572973073063942916129344512
t_ten increased 

increasing the digits 10
-------------------------------------------------------
-------------------------------------------------------
times 10 7578976546 8661687482
main 87057.31759019456487310753899205999903072022633512 second 93068.187271483911716774313434077590720201145278137
main 7578976545.9999999999999999999999991728193874469723 second 8661687482
times of 1.0050849533778476362847322017021717844385412240953e-05
new times of 1.0050849533778476362847322017021717844385412240953e-05
using 866168748204169890 * 1.0050849533778476362847322017021717844385412240953e-05
8705731759061.3674242731614300066738087449311200849  with length of 50 and dot length 13 will move 37
lap for tens is more than ten will lower it 

 trying to reach the main number 757897654678648654564564645645645696  main number intpart lenght 36 
 fract 0 int 757897654678648654564564645645645696
    -----------------> 8705731759061.3674242731614300066738087449311200849 ^2 ::== 75789765460729730749929543.865847833454608917236328
 temp fract 0.865847833454608917236328125 temp int 75789765460729730749929543
before loop xstp is 0
using for fract 7578976546072973074992954386.5847835540771484375
getting the part of 7578976546072973074992954386.5847835540771484375 :: ad 28 and mad 36
    -----------------> 87057317590613.674242731614300066741475581100218051 ^2 ::== 7578976546072973074992954386.5847835540771484375
t_ten increased 
using for fract 757897654607297307499295438658.4783935546875
getting the part of 757897654607297307499295438658.4783935546875 :: ad 30 and mad 36
    -----------------> 870573175906136.74242731614300066741475581100218051 ^2 ::== 757897654607297307499295438658.4783935546875
t_ten increased 
using for fract 75789765460729730749929543865847.8359375
getting the part of 75789765460729730749929543865847.8359375 :: ad 32 and mad 36
    -----------------> 8705731759061367.4242731614300066737138772410276033 ^2 ::== 75789765460729730749929543865847.8359375
t_ten increased 
using for fract 7578976546072973074992954386584783
getting the part of 7578976546072973074992954386584783 :: ad 34 and mad 36
    -----------------> 87057317590613674.242731614300066733669325458322419 ^2 ::== 7578976546072973074992954386584783
t_ten increased 
using for fract 757897654607297307499295438658478208
getting the part of 757897654607297307499295438658478208 :: ad 36 and mad 36
i push_back a near value 
    -----------------> 870573175906136742.42731614300066733669325458322419 ^2 ::== 757897654607297307499295438658478208
t_ten increased 

increasing the digits 11
-------------------------------------------------------
-------------------------------------------------------
times 11 75789765467 86616874820
main 275299.41058236939131261830902974049477881513527536 second 294307.44948098068827448804652409556240990432733635
main 75789765467.000000000000000000000013234889800848443 second 86616874820.000000000000000000000013234889800848443
times of 3.1783576947849224111803195744731954790303980777429e-06
new times of 3.1783576947849224111803195744731954790303980777429e-06
using 866168748204169890 * 3.1783576947849224111803195744731954790303980777429e-06
2752994105836.9473150940897904105611170293317624402  with length of 50 and dot length 13 will move 37
lap for tens is more than ten will lower it 

 trying to reach the main number 757897654678648654564564645645645696  main number intpart lenght 36 
 fract 0 int 757897654678648654564564645645645696
    -----------------> 2752994105836.9473150940897904105611170293317624402 ^2 ::== 7578976546772973074999694.2349251257255673408508301
 temp fract 0.234925125725567340850830078125 temp int 7578976546772973074999694
before loop xstp is 0
using for fract 757897654677297307499969423.49251258373260498046875
getting the part of 757897654677297307499969423.49251258373260498046875 :: ad 27 and mad 36
    -----------------> 27529941058369.473150940897904105609476227423115802 ^2 ::== 757897654677297307499969423.49251258373260498046875
t_ten increased 
using for fract 75789765467729730749996942349.2512664794921875
getting the part of 75789765467729730749996942349.2512664794921875 :: ad 29 and mad 36
    -----------------> 275299410583694.73150940897904105612186732854329563 ^2 ::== 75789765467729730749996942349.2512664794921875
t_ten increased 
using for fract 7578976546772973074999694234925.1259765625
getting the part of 7578976546772973074999694234925.1259765625 :: ad 31 and mad 36
    -----------------> 2752994105836947.3150940897904105611644631768086811 ^2 ::== 7578976546772973074999694234925.1259765625
t_ten increased 
using for fract 757897654677297307499969423492512.625
getting the part of 757897654677297307499969423492512.625 :: ad 33 and mad 36
    -----------------> 27529941058369473.150940897904105610777270030098407 ^2 ::== 757897654677297307499969423492512.625
t_ten increased 
using for fract 75789765467729730749996942349251264
getting the part of 75789765467729730749996942349251264 :: ad 35 and mad 36
    -----------------> 275299410583694731.5094089790410561147115942048913 ^2 ::== 75789765467729730749996942349251264
t_ten increased 
using for fract 7578976546772973074999694234925127680
getting the part of 7578976546772973074999694234925127680 :: ad 37 and mad 36
i push_back a near value 
    -----------------> 2752994105836947315.0940897904105613136493957426865 ^2 ::== 7578976546772973074999694234925127680
t_ten increased 

increasing the digits 12
-------------------------------------------------------
-------------------------------------------------------
times 12 757897654678 866168748204
main 870573.17594674372094205425457589689470199590966033 second 930681.87271698807919078501955516150368619551799263
main 757897654678 second 866168748204
times of 1.0050849534249259134472597806457177366665489235502e-06
new times of 1.0050849534249259134472597806457177366665489235502e-06
using 866168748204169890 * 1.0050849534249259134472597806457177366665489235502e-06
870573175946.91447482479161523933255877418825596781  with length of 50 and dot length 12 will move 38
lap for tens is more than ten will lower it 

 trying to reach the main number 757897654678648654564564645645645696  main number intpart lenght 36 
 fract 0 int 757897654678648654564564645645645696
    -----------------> 870573175946.91447482479161523933255877418825596781 ^2 ::== 757897654678297307499999.8330172791611403226852417
 temp fract 0.83301727916114032268524169921875 temp int 757897654678297307499999
before loop xstp is 0
using for fract 75789765467829730749999983.301727920770645141601562
getting the part of 75789765467829730749999983.301727920770645141601562 :: ad 26 and mad 36
    -----------------> 8705731759469.1447482479161523933255877418825596781 ^2 ::== 75789765467829730749999983.301727920770645141601562
t_ten increased 
using for fract 7578976546782973074999998330.1727924346923828125
getting the part of 7578976546782973074999998330.1727924346923828125 :: ad 28 and mad 36
    -----------------> 87057317594691.447482479161523933260959616509122583 ^2 ::== 7578976546782973074999998330.1727924346923828125
t_ten increased 
using for fract 757897654678297307499999833017.2791748046875
getting the part of 757897654678297307499999833017.2791748046875 :: ad 30 and mad 36
    -----------------> 870573175946914.474824791615239332528281002154813 ^2 ::== 757897654678297307499999833017.2791748046875
t_ten increased 
using for fract 75789765467829730749999983301727.9140625
getting the part of 75789765467829730749999983301727.9140625 :: ad 32 and mad 36
    -----------------> 8705731759469144.74824791615239332528281002154813 ^2 ::== 75789765467829730749999983301727.9140625
t_ten increased 
using for fract 7578976546782973074999998330172793
getting the part of 7578976546782973074999998330172793 :: ad 34 and mad 36
    -----------------> 87057317594691447.482479161523933261501717595365335 ^2 ::== 7578976546782973074999998330172793
t_ten increased 
using for fract 757897654678297307499999833017279104
getting the part of 757897654678297307499999833017279104 :: ad 36 and mad 36
i push_back a near value 
    -----------------> 870573175946914474.82479161523933253175044910676661 ^2 ::== 757897654678297307499999833017279104
t_ten increased 

increasing the digits 13
-------------------------------------------------------
-------------------------------------------------------
times 13 7578976546786 8661687482041
main 2752994.1058393132709406134440710993791319848979517 second 2943074.4948167723877078462538362822182277633139298
main 7578976546785.9999999999999999999991529670527456997 second 8661687482041
times of 3.1783576947879103869889345558409107613530502685997e-07
new times of 3.1783576947879103869889345558409107613530502685997e-07
using 866168748204169890 * 3.1783576947879103869889345558409107613530502685997e-07
275299410583.95354063599021711280459191823681390499  with length of 50 and dot length 12 will move 38
lap for tens is more than ten will lower it 

 trying to reach the main number 757897654678648654564564645645645696  main number intpart lenght 36 
 fract 0 int 757897654678648654564564645645645696
    -----------------> 275299410583.95354063599021711280459191823681390499 ^2 ::== 75789765467872230750000.00069516309304162859916687
 temp fract 0.0006951630930416285991668701171875 temp int 75789765467872230750000
before loop xstp is 0
using for fract 7578976546787223075000000.0695163095369935035705566
getting the part of 7578976546787223075000000.0695163095369935035705566 :: ad 25 and mad 36
    -----------------> 2752994105839.5354063599021711280460250614865458374 ^2 ::== 7578976546787223075000000.0695163095369935035705566
t_ten increased 
using for fract 757897654678722307500000006.95163094997406005859375
getting the part of 757897654678722307500000006.95163094997406005859375 :: ad 27 and mad 36
    -----------------> 27529941058395.354063599021711280460250614865458374 ^2 ::== 757897654678722307500000006.95163094997406005859375
t_ten increased 
using for fract 75789765467872230750000000695.1631011962890625
getting the part of 75789765467872230750000000695.1631011962890625 :: ad 29 and mad 36
    -----------------> 275299410583953.54063599021711280460250614865458374 ^2 ::== 75789765467872230750000000695.1631011962890625
t_ten increased 
using for fract 7578976546787223075000000069516.3095703125
getting the part of 7578976546787223075000000069516.3095703125 :: ad 31 and mad 36
    -----------------> 2752994105839535.4063599021711280460250614865458374 ^2 ::== 7578976546787223075000000069516.3095703125
t_ten increased 
using for fract 757897654678722307500000006951631
getting the part of 757897654678722307500000006951631 :: ad 33 and mad 36
    -----------------> 27529941058395354.063599021711280460250614865458374 ^2 ::== 757897654678722307500000006951631
t_ten increased 
using for fract 75789765467872230750000000695163096
getting the part of 75789765467872230750000000695163096 :: ad 35 and mad 36
    -----------------> 275299410583953540.63599021711280459556725475067651 ^2 ::== 75789765467872230750000000695163096
t_ten increased 
using for fract 7578976546787223075000000069516309504
getting the part of 7578976546787223075000000069516309504 :: ad 37 and mad 36
i push_back a near value 
    -----------------> 2752994105839535406.3599021711280459001613962755073 ^2 ::== 7578976546787223075000000069516309504
t_ten increased 

increasing the digits 14
-------------------------------------------------------
-------------------------------------------------------
times 14 75789765467864 86616874820416
main 8705731.7594711129486787839237849868312129792259552 second 9306818.7271707403767170659175426370155997687066798
main 75789765467864.000000000000000000013552527156068805 second 86616874820415.999999999999999999986447472843931195
times of 1.005084953425164620204695706150677366963588168008e-07
new times of 1.005084953425164620204695706150677366963588168008e-07
using 866168748204169890 * 1.005084953425164620204695706150677366963588168008e-07
87057317594.712123515806776725659264244407088348399  with length of 50 and dot length 11 will move 39
lap for tens is more than ten will lower it 

 trying to reach the main number 757897654678648654564564645645645696  main number intpart lenght 36 
 fract 0 int 757897654678648654564564645645645696
    -----------------> 87057317594.712123515806776725659264244407088348399 ^2 ::== 7578976546786573075000.0000009880968718789517879486
 temp fract 9.880968718789517879486083984375e-07 temp int 7578976546786573075000
before loop xstp is 0
using for fract 757897654678657307500000.00009880971629172563552856
getting the part of 757897654678657307500000.00009880971629172563552856 :: ad 24 and mad 36
    -----------------> 870573175947.12123515806776725659264244407088348399 ^2 ::== 757897654678657307500000.00009880971629172563552856
t_ten increased 
using for fract 75789765467865730750000000.009880974888801574707031
getting the part of 75789765467865730750000000.009880974888801574707031 :: ad 26 and mad 36
    -----------------> 8705731759471.2123515806776725659266361989456484149 ^2 ::== 75789765467865730750000000.009880974888801574707031
t_ten increased 
using for fract 7578976546786573075000000000.98809719085693359375
getting the part of 7578976546786573075000000000.98809719085693359375 :: ad 28 and mad 36
    -----------------> 87057317594712.12351580677672565926805605535099275 ^2 ::== 7578976546786573075000000000.98809719085693359375
t_ten increased 
using for fract 757897654678657307500000000098.8095703125
getting the part of 757897654678657307500000000098.8095703125 :: ad 30 and mad 36
    -----------------> 870573175947121.23515806776725659259924539057351467 ^2 ::== 757897654678657307500000000098.8095703125
t_ten increased 
using for fract 75789765467865730750000000009880.9609375
getting the part of 75789765467865730750000000009880.9609375 :: ad 32 and mad 36
    -----------------> 8705731759471212.3515806776725659259924539057351467 ^2 ::== 75789765467865730750000000009880.9609375
t_ten increased 
using for fract 7578976546786573075000000000988097
getting the part of 7578976546786573075000000000988097 :: ad 34 and mad 36
    -----------------> 87057317594712123.515806776725659263393986009305081 ^2 ::== 7578976546786573075000000000988097
t_ten increased 
using for fract 757897654678657307500000000098809728
getting the part of 757897654678657307500000000098809728 :: ad 36 and mad 36
i push_back a near value 
    -----------------> 870573175947121235.15806776725659266169543570867972 ^2 ::== 757897654678657307500000000098809728
t_ten increased 

increasing the digits 15
-------------------------------------------------------
-------------------------------------------------------
times 15 757897654678648 866168748204169
main 27529941.058394004487516704810807239130282090371715 second 29430744.9481688961205966187849219544811227971596
main 757897654678648 second 866168748204169
times of 3.1783576947877578429608138552249605947137445750689e-08
new times of 3.1783576947877578429608138552249605947137445750689e-08
using 866168748204169890 * 3.1783576947877578429608138552249605947137445750689e-08
27529941058.394032774900188421852041501468503852633  with length of 50 and dot length 11 will move 39
lap for tens is more than ten will lower it 

 trying to reach the main number 757897654678648654564564645645645696  main number intpart lenght 36 
 fract 0 int 757897654678648654564564645645645696
    -----------------> 27529941058.394032774900188421852041501468503852633 ^2 ::== 757897654678649557500.00000000105706021713558584452
 temp fract 1.057060217135585844516754150390625e-09 temp int 757897654678649557500
before loop xstp is 0
using for fract 75789765467864955750000.000000105690560303628444672
getting the part of 75789765467864955750000.000000105690560303628444672 :: ad 23 and mad 36
    -----------------> 275299410583.94032774900188421852039516235033725366 ^2 ::== 75789765467864955750000.000000105690560303628444672
t_ten increased 
using for fract 7578976546786495575000000.0000105705112218856811523
getting the part of 7578976546786495575000000.0000105705112218856811523 :: ad 25 and mad 36
    -----------------> 2752994105839.4032774900188421852041633817401861117 ^2 ::== 7578976546786495575000000.0000105705112218856811523
t_ten increased 
using for fract 757897654678649557500000000.00105702877044677734375
getting the part of 757897654678649557500000000.00105702877044677734375 :: ad 27 and mad 36
    -----------------> 27529941058394.032774900188421852040786784454606817 ^2 ::== 757897654678649557500000000.00105702877044677734375
t_ten increased 
using for fract 75789765467864955750000000000.1056976318359375
getting the part of 75789765467864955750000000000.1056976318359375 :: ad 29 and mad 36
    -----------------> 275299410583940.32774900188421852040786784454606817 ^2 ::== 75789765467864955750000000000.1056976318359375
t_ten increased 
using for fract 7578976546786495575000000000010.5703125
getting the part of 7578976546786495575000000000010.5703125 :: ad 31 and mad 36
    -----------------> 2752994105839403.2774900188421852041328885540849569 ^2 ::== 7578976546786495575000000000010.5703125
t_ten increased 
using for fract 757897654678649557500000000001057.125
getting the part of 757897654678649557500000000001057.125 :: ad 33 and mad 36
    -----------------> 27529941058394032.774900188421852043063609016826376 ^2 ::== 757897654678649557500000000001057.125
t_ten increased 
using for fract 75789765467864955750000000000105696
getting the part of 75789765467864955750000000000105696 :: ad 35 and mad 36
    -----------------> 275299410583940327.74900188421852040288051455263485 ^2 ::== 75789765467864955750000000000105696
t_ten increased 
using for fract 7578976546786495575000000000010570752
getting the part of 7578976546786495575000000000010570752 :: ad 37 and mad 36
i push_back a near value 
    -----------------> 2752994105839403277.4900188421852043063609016826376 ^2 ::== 7578976546786495575000000000010570752
t_ten increased 

increasing the digits 16
-------------------------------------------------------
-------------------------------------------------------
times 16 7578976546786486 8661687482041698
main 87057317.594711623414250665317347764305517093040934 second 93068187.27170793026286630377934289291521825337661
main 7578976546786486 second 8661687482041698.0000000000000000008673617379884035
times of 1.0050849534251589509192066061428636177213256775491e-08
new times of 1.0050849534251589509192066061428636177213256775491e-08
using 866168748204169890 * 1.0050849534251589509192066061428636177213256775491e-08
8705731759.4711632460015246143778305285048369475433  with length of 50 and dot length 10 will move 40
lap for tens is more than ten will lower it 

 trying to reach the main number 757897654678648654564564645645645696  main number intpart lenght 36 
 fract 0 int 757897654678648654564564645645645696
    -----------------> 8705731759.4711632460015246143778305285048369475433 ^2 ::== 75789765467864875750.000000000001307398633798584342
 temp fract 1.30739863379858434200286865234375e-12 temp int 75789765467864875750
before loop xstp is 0
using for fract 7578976546786487575000.000000000130057742353528738
getting the part of 7578976546786487575000.000000000130057742353528738 :: ad 22 and mad 36
    -----------------> 87057317594.711632460015246143778301976325919263322 ^2 ::== 7578976546786487575000.000000000130057742353528738
t_ten increased 
using for fract 757897654678648757500000.00000001315493136644363403
getting the part of 757897654678648757500000.00000001315493136644363403 :: ad 24 and mad 36
    -----------------> 870573175947.11632460015246143778307270281839602699 ^2 ::== 757897654678648757500000.00000001315493136644363403
t_ten increased 
using for fract 75789765467864875750000000.00000131130218505859375
getting the part of 75789765467864875750000000.00000131130218505859375 :: ad 26 and mad 36
    -----------------> 8705731759471.1632460015246143778307270281839602699 ^2 ::== 75789765467864875750000000.00000131130218505859375
t_ten increased 
using for fract 7578976546786487575000000000.0001316070556640625
getting the part of 7578976546786487575000000000.0001316070556640625 :: ad 28 and mad 36
    -----------------> 87057317594711.6324600152461437783089643477341113 ^2 ::== 7578976546786487575000000000.0001316070556640625
t_ten increased 
using for fract 757897654678648757500000000000.0130615234375
getting the part of 757897654678648757500000000000.0130615234375 :: ad 30 and mad 36
    -----------------> 870573175947116.32460015246143778303543336871683778 ^2 ::== 757897654678648757500000000000.0130615234375
t_ten increased 
using for fract 75789765467864875750000000000001.3125
getting the part of 75789765467864875750000000000001.3125 :: ad 32 and mad 36
    -----------------> 8705731759471163.2460015246143778307880145561625795 ^2 ::== 75789765467864875750000000000001.3125
t_ten increased 
using for fract 7578976546786487575000000000000132
getting the part of 7578976546786487575000000000000132 :: ad 34 and mad 36
    -----------------> 87057317594711632.46001524614377831134959251357941 ^2 ::== 7578976546786487575000000000000132
t_ten increased 
using for fract 757897654678648757500000000000012928
getting the part of 757897654678648757500000000000012928 :: ad 36 and mad 36
i push_back a near value 
    -----------------> 870573175947116324.60015246143778300247362267327844 ^2 ::== 757897654678648757500000000000012928
t_ten increased 

increasing the digits 17
-------------------------------------------------------
-------------------------------------------------------
times 17 75789765467864865 86616874820416989
main 275299410.58394016292845285451046175599805730806842 second 294307449.48168911240839099350695754091399002964316
main 75789765467864864.999999999999999986122212192185543 second 86616874820416989.000000000000000013877787807814457
times of 3.178357694787755940092009463113514262087849525392e-09
new times of 3.178357694787755940092009463113514262087849525392e-09
using 866168748204169890 * 3.178357694787755940092009463113514262087849525392e-09
2752994105.8394016292845285451046171463902668041703  with length of 50 and dot length 10 will move 40
lap for tens is more than ten will lower it 

 trying to reach the main number 757897654678648654564564645645645696  main number intpart lenght 36 
 fract 0 int 757897654678648654564564645645645696
    -----------------> 2752994105.8394016292845285451046171463902668041703 ^2 ::== 7578976546786486499.9999999999999964472863211994991
 temp fract 0.999999999999996447286321199499070644378662109375 temp int 7578976546786486499
before loop xstp is 0
using for fract 757897654678648649999.99999999999977262632455676794
getting the part of 757897654678648649999.99999999999977262632455676794 :: ad 21 and mad 36
    -----------------> 27529941058.394016292845285451046173118263893147759 ^2 ::== 757897654678648649999.99999999999977262632455676794
t_ten increased 
using for fract 75789765467864864999999.999999999956344254314899445
getting the part of 75789765467864864999999.999999999956344254314899445 :: ad 23 and mad 36
    -----------------> 275299410583.94016292845285451046169147796952893226 ^2 ::== 75789765467864864999999.999999999956344254314899445
t_ten increased 
using for fract 7578976546786486499999999.9999999972060322761535645
getting the part of 7578976546786486499999999.9999999972060322761535645 :: ad 25 and mad 36
    -----------------> 2752994105839.4016292845285451046172324170505096852 ^2 ::== 7578976546786486499999999.9999999972060322761535645
t_ten increased 
using for fract 757897654678648649999999999.99999964237213134765625
getting the part of 757897654678648649999999999.99999964237213134765625 :: ad 27 and mad 36
    -----------------> 27529941058394.016292845285451046172324170505096852 ^2 ::== 757897654678648649999999999.99999964237213134765625
t_ten increased 
using for fract 75789765467864864999999999999.99996185302734375
getting the part of 75789765467864864999999999999.99996185302734375 :: ad 29 and mad 36
    -----------------> 275299410583940.16292845285451046171646544147293412 ^2 ::== 75789765467864864999999999999.99996185302734375
t_ten increased 
using for fract 7578976546786486499999999999999.9951171875
getting the part of 7578976546786486499999999999999.9951171875 :: ad 31 and mad 36
    -----------------> 2752994105839401.6292845285451046169478139802322403 ^2 ::== 7578976546786486499999999999999.9951171875
t_ten increased 
using for fract 757897654678648649999999999999999.75
getting the part of 757897654678648649999999999999999.75 :: ad 33 and mad 36
    -----------------> 27529941058394016.292845285451046172947586754276017 ^2 ::== 757897654678648649999999999999999.75
t_ten increased 
using for fract 75789765467864864999999999999999968
getting the part of 75789765467864864999999999999999968 :: ad 35 and mad 36
    -----------------> 275299410583940162.92845285451046172253697363885294 ^2 ::== 75789765467864864999999999999999968
t_ten increased 
using for fract 7578976546786486499999999999999996928
getting the part of 7578976546786486499999999999999996928 :: ad 37 and mad 36
i push_back a near value 
    -----------------> 2752994105839401629.2845285451046173363920388510451 ^2 ::== 7578976546786486499999999999999996928
t_ten increased 

increasing the digits 18
-------------------------------------------------------
-------------------------------------------------------
times 18 757897654678648654 866168748204169890
main 870573175.94711626515655664457838083297266535204241 second 930681872.71707935098030855617528320742646220879312
main 757897654678648654 second 866168748204169890
times of 1.0050849534251588822910138433538837820220223919829e-09
new times of 1.0050849534251588822910138433538837820220223919829e-09
using 866168748204169890 * 1.0050849534251588822910138433538837820220223919829e-09
870573175.94711626515655664457838083297266535204241  with length of 50 and dot length 9 will move 41
lap for tens is more than ten will lower it 

 trying to reach the main number 757897654678648654564564645645645696  main number intpart lenght 36 
 fract 0 int 757897654678648654564564645645645696
    -----------------> 870573175.94711626515655664457838083297266535204241 ^2 ::== 757897654678648654
 temp fract 0 temp int 757897654678648654
before loop xstp is 0
using for fract 75789765467864865400.000000000000014210854715202004
getting the part of 75789765467864865400.000000000000014210854715202004 :: ad 20 and mad 36
    -----------------> 8705731759.4711626515655664457838089501121129351949 ^2 ::== 75789765467864865400.000000000000014210854715202004
t_ten increased 
using for fract 7578976546786486540000
getting the part of 7578976546786486540000 :: ad 22 and mad 36
    -----------------> 87057317594.711626515655664457838082883676228927727 ^2 ::== 7578976546786486540000
t_ten increased 
using for fract 757897654678648654000000.00000000011641532182693481
getting the part of 757897654678648654000000.00000000011641532182693481 :: ad 24 and mad 36
    -----------------> 870573175947.11626515655664457838088177632149267104 ^2 ::== 757897654678648654000000.00000000011641532182693481
t_ten increased 
using for fract 75789765467864865399999999.999999992549419403076172
getting the part of 75789765467864865399999999.999999992549419403076172 :: ad 26 and mad 36
    -----------------> 8705731759471.1626515655664457838079707302676724101 ^2 ::== 75789765467864865399999999.999999992549419403076172
t_ten increased 
using for fract 7578976546786486539999999999.99999904632568359375
getting the part of 7578976546786486539999999999.99999904632568359375 :: ad 28 and mad 36
    -----------------> 87057317594711.6265156556644578380780132367822155 ^2 ::== 7578976546786486539999999999.99999904632568359375
t_ten increased 
using for fract 757897654678648654000000000000
getting the part of 757897654678648654000000000000 :: ad 30 and mad 36
    -----------------> 870573175947116.26515655664457838086144753075856784 ^2 ::== 757897654678648654000000000000
t_ten increased 
using for fract 75789765467864865399999999999999.9921875
getting the part of 75789765467864865399999999999999.9921875 :: ad 32 and mad 36
    -----------------> 8705731759471162.6515655664457838079639540040943757 ^2 ::== 75789765467864865399999999999999.9921875
t_ten increased 
using for fract 7578976546786486540000000000000000
getting the part of 7578976546786486540000000000000000 :: ad 34 and mad 36
    -----------------> 87057317594711626.515655664457838086578433944850985 ^2 ::== 7578976546786486540000000000000000
t_ten increased 
using for fract 757897654678648654000000000000000000
getting the part of 757897654678648654000000000000000000 :: ad 36 and mad 36
i push_back a near value 
    -----------------> 870573175947116265.15655664457838081027318821725203 ^2 ::== 757897654678648654000000000000000000
t_ten increased 

increasing the digits 19


u enter as approximation 866168748204169890 with main number to find the power 757897654678648654564564645645645696 with psifia 36
as of the entered 
will count the digit from 750248300365578660042880783982612096
with string of it 750248300365578660042880783982612096
866168748204169890 ^2 ::== 750248300365578660042880783982612096               me idia psifia 2               me diafora 7649354313069994521683861663033600
will count the digit from 757897654607297306755275495202374528
with string of it 757897654607297306755275495202374528
870573175906136742 ^2 ::== 757897654607297306755275495202374528            me idia psifia 10            me diafora 71351347809289150443271168
will count the digit from 757897654678297306063916921070696704
with string of it 757897654678297306063916921070696704
870573175946914474 ^2 ::== 757897654678297306063916921070696704            me idia psifia 12            me diafora 351348500647724574948992
will count the digit from 757897654678648653727411969427550208
with string of it 757897654678648653727411969427550208
870573175947116265 ^2 ::== 757897654678648653727411969427550208            me idia psifia 17            me diafora 837152676218095488
will count the digit from 757897654678648756455046731187272960
with string of it 757897654678648756455046731187272960
870573175947116324 ^2 ::== 757897654678648756455046731187272960            me idia psifia 15            me diafora 101890482085541627264
will count the digit from 757897654678657307224780883787925248
with string of it 757897654678657307224780883787925248
870573175947121235 ^2 ::== 757897654678657307224780883787925248            me idia psifia 13            me diafora 8652660216238142279552
will count the digit from 757897664357297422576498331658097536
with string of it 757897664357297422576498331658097536
870573181505895817 ^2 ::== 757897664357297422576498331658097536            me idia psifia 7            me diafora 9678648768011933686012451840
will count the digit from 757898309357862824631218806880155264
with string of it 757898309357862824631218806880155264
870573551951736485 ^2 ::== 757898309357862824631218806880155264            me idia psifia 5            me diafora 654679214170066654161234509568
will count the digit from 757920308178687653535035462596088576
with string of it 757920308178687653535035462596088576
870586186531056587 ^2 ::== 757920308178687653535035462596088576            me idia psifia 3            me diafora 22653500038998970470816950442880
will count the digit from 760798033091108700250232961135568640
with string of it 760798033091108700250232961135568640
872237371987183716 ^2 ::== 760798033091108700250232961135568640            me idia psifia 1            me diafora 2900378412460045685668315489922944
will count the digit from 7572950458116783459950440330266008576
with string of it 7572950458116783459950440330266008576
2751899427325930358 ^2 ::== 7572950458116783459950440330266008576            me idia psifia 3            me diafora 6815052803438134805385875684620362752
will count the digit from 7578976543572973069574530623072276480
with string of it 7578976543572973069574530623072276480
2752994105255761907 ^2 ::== 7578976543572973069574530623072276480            me idia psifia 9            me diafora 6821078888894324415009965977426630656
will count the digit from 7578976546772973074481636958085708800
with string of it 7578976546772973074481636958085708800
2752994105836947315 ^2 ::== 7578976546772973074481636958085708800            me idia psifia 11            me diafora 6821078892094324419917072312440062976
will count the digit from 7578976546786486498433389184767853568
with string of it 7578976546786486498433389184767853568
2752994105839401629 ^2 ::== 7578976546786486498433389184767853568            me idia psifia 16            me diafora 6821078892107837843868824539122207744
will count the digit from 7578976546786495572301962031438339072
with string of it 7578976546786495572301962031438339072
2752994105839403277 ^2 ::== 7578976546786495572301962031438339072            me idia psifia 14            me diafora 6821078892107846917737397385792693248
will count the digit from 7578976546787223073018382957927584768
with string of it 7578976546787223073018382957927584768
2752994105839535406 ^2 ::== 7578976546787223073018382957927584768            me idia psifia 12            me diafora 6821078892108574418453818312281938944
will count the digit from 7578976843572982633394702817087330304
with string of it 7578976843572982633394702817087330304
2752994159741895027 ^2 ::== 7578976843572982633394702817087330304            me idia psifia 7            me diafora 6821079188894333978830138171441684480
will count the digit from 7579053094346094568947209279021524992
with string of it 7579053094346094568947209279021524992
2753008008405731930 ^2 ::== 7579053094346094568947209279021524992            me idia psifia 3            me diafora 6821155439667445914382644633375879168
will count the digit from 8205840785248516592394422953017432064
with string of it 8205840785248516592394422953017432064
2864583876455447166 ^2 ::== 8205840785248516592394422953017432064            me idia psifia 0            me diafora 7447943130569867937829858307371786240


-------------------------Approximation Result Set-----------------------------------------------------
possible approximation > ::== 870573175947116265 ^2 757897654678648653727411969427550208             me idia psifia 17             me diafora 837152676218095488
will count the digit from 757897654678648655468558321321782784
with string of it 757897654678648655468558321321782784
possible approximation of addition ::== 870573175947116266 with ^2  757897654678648655468558321321782784             me idia psifia 17             me diafora 903993675676137088
will pass value of 870573175947116266



------------------------Bee-----------------------------

-------------------Calculation Bee--------------------------------
first number second number is the qube one dimension and third the precision 
will count the digit from 757897654678648654564564645645645696
with string of it 757897654678648654564564645645645696
Main Number 757897654678648654564564645645645696 has number of digits 36
Using Power of 866168748204169890

first 757897654678648654564564645645645696 
     doted 0
     makes 757897654678648654564564645645645696

second 866168748204169890 
     doted 0 
     makes 866168748204169890

result 875000000000000000 
     doted 0.940422576241044083644737838767468929290771484375 
     makes 875000000000000000.94042257624104408364473783876747


for the integer string 875000000000000000.000000
the numbers are 18
the retrievable integer digit is 0

entering with number of 0.940422576241044083644737838767468929290771484375
recheck values of 866168748204169890 and result of 750248300365578660042880783982612096 with intpart 750248300365578660042880783982612096

     ----> using 0.940422576241044083644737838767468929290771484375 rst is 0.4702112881205220418223689193837344646453857421875
     ----> using 0.4702112881205220418223689193837344646453857421875 with intpart 0 and fract 0.4702112881205220418223689193837344646453857421875
trying to retrieve digits 
will count the digit from 750248300365578660857445429628257792
with string of it 750248300365578660857445429628257792
digits retrieved 2
                     with combination da_rst 866168748204169890.47021128812052204182236891938373 sq of rst 750248300365578660857445429628257792
                     with intpart 750248300365578660857445429628257792 and other part 0
                     the int string is 0.470211

     ----> using 0.4702112881205220418223689193837344646453857421875 rst is 0.23510564406026102091118445969186723232269287109375
     ----> using 0.23510564406026102091118445969186723232269287109375 with intpart 0 and fract 0.23510564406026102091118445969186723232269287109375
trying to retrieve digits 
will count the digit from 750248300365578660450163106805434880
with string of it 750248300365578660450163106805434880
digits retrieved 2
                     with combination da_rst 866168748204169890.23510564406026102091118445969187 sq of rst 750248300365578660450163106805434880
                     with intpart 750248300365578660450163106805434880 and other part 0
                     the int string is 0.235106

     ----> using 0.23510564406026102091118445969186723232269287109375 rst is 0.11755282203013051045559222984593361616134643554688
     ----> using 0.11755282203013051045559222984593361616134643554688 with intpart 0 and fract 0.11755282203013051045559222984593361616134643554688
trying to retrieve digits 
will count the digit from 750248300365578660246521945394023552
with string of it 750248300365578660246521945394023552
digits retrieved 2
                     with combination da_rst 866168748204169890.11755282203013051045559222984593 sq of rst 750248300365578660246521945394023552
                     with intpart 750248300365578660246521945394023552 and other part 0
                     the int string is 0.117553

     ----> using 0.11755282203013051045559222984593361616134643554688 rst is 0.058776411015065255227796114922966808080673217773438
     ----> using 0.058776411015065255227796114922966808080673217773438 with intpart 0 and fract 0.058776411015065255227796114922966808080673217773438
trying to retrieve digits 
will count the digit from 750248300365578660144701364688317824
with string of it 750248300365578660144701364688317824
digits retrieved 2
                     with combination da_rst 866168748204169890.05877641101506525522779611492297 sq of rst 750248300365578660144701364688317824
                     with intpart 750248300365578660144701364688317824 and other part 0
                     the int string is 0.058776

--------------------------------------
psifia 2 PWR 866168748204169890.47021128812052204182236891938373 
 ------------> RESULT 750248300365578660857445429628257792
 ------------> DIAFORA 7649354313069993707119216017387904
 ------------> DIAIRESI main/result 1.0101957636016537992864596099564996228983179001446
--------------------------------------

-------------------Calculation Bee--------------------------------
first number second number is the qube one dimension and third the precision 
will count the digit from 757897654678648654564564645645645696
with string of it 757897654678648654564564645645645696
Main Number 757897654678648654564564645645645696 has number of digits 36
Using Power of 870573175947116265

first 757897654678648654564564645645645696 
     doted 0
     makes 757897654678648654564564645645645696

second 870573175947116265 
     doted 0 
     makes 870573175947116265

result 870573175947116265 
     doted 0.96161092409875614794856346634333021938800811767578 
     makes 870573175947116265.96161092409875614794856346634333


for the integer string 870573175947116265.000000
the numbers are 18
the retrievable integer digit is 5

entering with number of 5.9616109240987561479485634663433302193880081176758
recheck values of 870573175947116265 and result of 757897654678648653727411969427550208 with intpart 757897654678648653727411969427550208

     ----> using 5.9616109240987561479485634663433302193880081176758 rst is 2.9808054620493780739742817331716651096940040588379
     ----> using 2.9808054620493780739742817331716651096940040588379 with intpart 2 and fract 0.98080546204937807397428173317166510969400405883789
trying to retrieve digits 
will count the digit from 757897654678648655435137821592761856
with string of it 757897654678648655435137821592761856
digits retrieved 17
                     with combination da_rst 870573175947116265.98080546204937801846313050191384 sq of rst 757897654678648655435137821592761856
                     with intpart 757897654678648655435137821592761856 and other part 0
                     the int string is 2.980805

     ----> using 2.9808054620493780739742817331716651096940040588379 rst is 1.4904027310246890369871408665858325548470020294189
     ----> using 1.4904027310246890369871408665858325548470020294189 with intpart 1 and fract 0.49040273102468903698714086658583255484700202941895
trying to retrieve digits 
will count the digit from 757897654678648654581274895510156032
with string of it 757897654678648654581274895510156032
digits retrieved 19
                     with combination da_rst 870573175947116265.49040273102468900923156525095692 sq of rst 757897654678648654581274895510156032
                     with intpart 757897654678648654581274895510156032 and other part 0
                     the int string is 1.490403

     ----> using 1.4904027310246890369871408665858325548470020294189 rst is 0.74520136551234451849357043329291627742350101470947
     ----> using 0.74520136551234451849357043329291627742350101470947 with intpart 0 and fract 0.74520136551234451849357043329291627742350101470947
trying to retrieve digits 
will count the digit from 757897654678648655024916608415969408
with string of it 757897654678648655024916608415969408
digits retrieved 17
                     with combination da_rst 870573175947116265.74520136551234450461578262547846 sq of rst 757897654678648655024916608415969408
                     with intpart 757897654678648655024916608415969408 and other part 0
                     the int string is 0.745201

     ----> using 0.74520136551234451849357043329291627742350101470947 rst is 0.37260068275617225924678521664645813871175050735474
     ----> using 0.37260068275617225924678521664645813871175050735474 with intpart 0 and fract 0.37260068275617225924678521664645813871175050735474
trying to retrieve digits 
will count the digit from 757897654678648654376164288921759872
with string of it 757897654678648654376164288921759872
digits retrieved 18
                     with combination da_rst 870573175947116265.37260068275617230781904254399706 sq of rst 757897654678648654376164288921759872
                     with intpart 757897654678648654376164288921759872 and other part 0
                     the int string is 0.372601

     ----> using 0.37260068275617225924678521664645813871175050735474 rst is 0.18630034137808612962339260832322906935587525367737
     ----> using 0.18630034137808612962339260832322906935587525367737 with intpart 0 and fract 0.18630034137808612962339260832322906935587525367737
trying to retrieve digits 
will count the digit from 757897654678648654051788129174655104
with string of it 757897654678648654051788129174655104
digits retrieved 18
                     with combination da_rst 870573175947116265.18630034137808615390952127199853 sq of rst 757897654678648654051788129174655104
                     with intpart 757897654678648654051788129174655104 and other part 0
                     the int string is 0.186300

     ----> using 0.18630034137808612962339260832322906935587525367737 rst is 0.093150170689043064811696304161614534677937626838684
     ----> using 0.093150170689043064811696304161614534677937626838684 with intpart 0 and fract 0.093150170689043064811696304161614534677937626838684
trying to retrieve digits 
will count the digit from 757897654678648653889600049301102592
with string of it 757897654678648653889600049301102592
digits retrieved 17
                     with combination da_rst 870573175947116265.09315017068904307695476063599926 sq of rst 757897654678648653889600049301102592
                     with intpart 757897654678648653889600049301102592 and other part 0
                     the int string is 0.093150

from new int t  of 5 ---> 4 with 4.9616109240987561479485634663433302193880081176758
     ----> using 4.9616109240987561479485634663433302193880081176758 rst is 2.4808054620493780739742817331716651096940040588379
     ----> using 2.4808054620493780739742817331716651096940040588379 with intpart 2 and fract 0.48080546204937807397428173317166510969400405883789
trying to retrieve digits 
will count the digit from 757897654678648654564564645645645568
with string of it 757897654678648654564564645645645568
digits retrieved 33
                     with combination da_rst 870573175947116265.48080546204937801846313050191384 sq of rst 757897654678648654564564645645645568
                     with intpart 757897654678648654564564645645645568 and other part 0
                     the int string is 2.480805

     ----> using 2.4808054620493780739742817331716651096940040588379 rst is 1.2404027310246890369871408665858325548470020294189
     ----> using 1.2404027310246890369871408665858325548470020294189 with intpart 1 and fract 0.24040273102468903698714086658583255484700202941895
trying to retrieve digits 
will count the digit from 757897654678648654145988307536597888
with string of it 757897654678648654145988307536597888
digits retrieved 18
                     with combination da_rst 870573175947116265.24040273102468900923156525095692 sq of rst 757897654678648654145988307536597888
                     with intpart 757897654678648654145988307536597888 and other part 0
                     the int string is 1.240403

     ----> using 1.2404027310246890369871408665858325548470020294189 rst is 0.62020136551234451849357043329291627742350101470947
     ----> using 0.62020136551234451849357043329291627742350101470947 with intpart 0 and fract 0.62020136551234451849357043329291627742350101470947
trying to retrieve digits 
will count the digit from 757897654678648654807273314429190400
with string of it 757897654678648654807273314429190400
digits retrieved 18
                     with combination da_rst 870573175947116265.62020136551234450461578262547846 sq of rst 757897654678648654807273314429190400
                     with intpart 757897654678648654807273314429190400 and other part 0
                     the int string is 0.620201

     ----> using 0.62020136551234451849357043329291627742350101470947 rst is 0.31010068275617225924678521664645813871175050735474
     ----> using 0.31010068275617225924678521664645813871175050735474 with intpart 0 and fract 0.31010068275617225924678521664645813871175050735474
trying to retrieve digits 
will count the digit from 757897654678648654267342641928370432
with string of it 757897654678648654267342641928370432
digits retrieved 18
                     with combination da_rst 870573175947116265.31010068275617230781904254399706 sq of rst 757897654678648654267342641928370432
                     with intpart 757897654678648654267342641928370432 and other part 0
                     the int string is 0.310101

     ----> using 0.31010068275617225924678521664645813871175050735474 rst is 0.15505034137808612962339260832322906935587525367737
     ----> using 0.15505034137808612962339260832322906935587525367737 with intpart 0 and fract 0.15505034137808612962339260832322906935587525367737
trying to retrieve digits 
will count the digit from 757897654678648653997377305677960320
with string of it 757897654678648653997377305677960320
digits retrieved 17
                     with combination da_rst 870573175947116265.15505034137808615390952127199853 sq of rst 757897654678648653997377305677960320
                     with intpart 757897654678648653997377305677960320 and other part 0
                     the int string is 0.155050

     ----> using 0.15505034137808612962339260832322906935587525367737 rst is 0.077525170689043064811696304161614534677937626838684
     ----> using 0.077525170689043064811696304161614534677937626838684 with intpart 0 and fract 0.077525170689043064811696304161614534677937626838684
trying to retrieve digits 
will count the digit from 757897654678648653862394637552755200
with string of it 757897654678648653862394637552755200
digits retrieved 17
                     with combination da_rst 870573175947116265.07752517068904307695476063599926 sq of rst 757897654678648653862394637552755200
                     with intpart 757897654678648653862394637552755200 and other part 0
                     the int string is 0.077525

from new int t  of 4 ---> 3 with 3.9616109240987561479485634663433302193880081176758
     ----> using 3.9616109240987561479485634663433302193880081176758 rst is 1.9808054620493780739742817331716651096940040588379
     ----> using 1.9808054620493780739742817331716651096940040588379 with intpart 1 and fract 0.98080546204937807397428173317166510969400405883789
trying to retrieve digits 
will count the digit from 757897654678648655435137821592761856
with string of it 757897654678648655435137821592761856
digits retrieved 17
                     with combination da_rst 870573175947116265.98080546204937801846313050191384 sq of rst 757897654678648655435137821592761856
                     with intpart 757897654678648655435137821592761856 and other part 0
                     the int string is 1.980805

     ----> using 1.9808054620493780739742817331716651096940040588379 rst is 0.99040273102468903698714086658583255484700202941895
     ----> using 0.99040273102468903698714086658583255484700202941895 with intpart 0 and fract 0.99040273102468903698714086658583255484700202941895
trying to retrieve digits 
will count the digit from 757897654678648655451848071457272320
with string of it 757897654678648655451848071457272320
digits retrieved 17
                     with combination da_rst 870573175947116265.99040273102468900923156525095692 sq of rst 757897654678648655451848071457272320
                     with intpart 757897654678648655451848071457272320 and other part 0
                     the int string is 0.990403

     ----> using 0.99040273102468903698714086658583255484700202941895 rst is 0.49520136551234451849357043329291627742350101470947
     ----> using 0.49520136551234451849357043329291627742350101470947 with intpart 0 and fract 0.49520136551234451849357043329291627742350101470947
trying to retrieve digits 
will count the digit from 757897654678648654589630020442411264
with string of it 757897654678648654589630020442411264
digits retrieved 19
                     with combination da_rst 870573175947116265.49520136551234450461578262547846 sq of rst 757897654678648654589630020442411264
                     with intpart 757897654678648654589630020442411264 and other part 0
                     the int string is 0.495201

     ----> using 0.49520136551234451849357043329291627742350101470947 rst is 0.24760068275617225924678521664645813871175050735474
     ----> using 0.24760068275617225924678521664645813871175050735474 with intpart 0 and fract 0.24760068275617225924678521664645813871175050735474
trying to retrieve digits 
will count the digit from 757897654678648654158520994934980864
with string of it 757897654678648654158520994934980864
digits retrieved 18
                     with combination da_rst 870573175947116265.24760068275617230781904254399706 sq of rst 757897654678648654158520994934980864
                     with intpart 757897654678648654158520994934980864 and other part 0
                     the int string is 0.247601

     ----> using 0.24760068275617225924678521664645813871175050735474 rst is 0.12380034137808612962339260832322906935587525367737
     ----> using 0.12380034137808612962339260832322906935587525367737 with intpart 0 and fract 0.12380034137808612962339260832322906935587525367737
trying to retrieve digits 
will count the digit from 757897654678648653942966482181265536
with string of it 757897654678648653942966482181265536
digits retrieved 17
                     with combination da_rst 870573175947116265.12380034137808615390952127199853 sq of rst 757897654678648653942966482181265536
                     with intpart 757897654678648653942966482181265536 and other part 0
                     the int string is 0.123800

     ----> using 0.12380034137808612962339260832322906935587525367737 rst is 0.061900170689043064811696304161614534677937626838684
     ----> using 0.061900170689043064811696304161614534677937626838684 with intpart 0 and fract 0.061900170689043064811696304161614534677937626838684
trying to retrieve digits 
will count the digit from 757897654678648653835189225804407936
with string of it 757897654678648653835189225804407936
digits retrieved 17
                     with combination da_rst 870573175947116265.06190017068904307695476063599926 sq of rst 757897654678648653835189225804407936
                     with intpart 757897654678648653835189225804407936 and other part 0
                     the int string is 0.061900

from new int t  of 3 ---> 2 with 2.9616109240987561479485634663433302193880081176758
     ----> using 2.9616109240987561479485634663433302193880081176758 rst is 1.4808054620493780739742817331716651096940040588379
     ----> using 1.4808054620493780739742817331716651096940040588379 with intpart 1 and fract 0.48080546204937807397428173317166510969400405883789
trying to retrieve digits 
will count the digit from 757897654678648654564564645645645568
with string of it 757897654678648654564564645645645568
digits retrieved 33
                     with combination da_rst 870573175947116265.48080546204937801846313050191384 sq of rst 757897654678648654564564645645645568
                     with intpart 757897654678648654564564645645645568 and other part 0
                     the int string is 1.480805

     ----> using 1.4808054620493780739742817331716651096940040588379 rst is 0.74040273102468903698714086658583255484700202941895
     ----> using 0.74040273102468903698714086658583255484700202941895 with intpart 0 and fract 0.74040273102468903698714086658583255484700202941895
trying to retrieve digits 
will count the digit from 757897654678648655016561483483714176
with string of it 757897654678648655016561483483714176
digits retrieved 17
                     with combination da_rst 870573175947116265.74040273102468900923156525095692 sq of rst 757897654678648655016561483483714176
                     with intpart 757897654678648655016561483483714176 and other part 0
                     the int string is 0.740403

     ----> using 0.74040273102468903698714086658583255484700202941895 rst is 0.37020136551234451849357043329291627742350101470947
     ----> using 0.37020136551234451849357043329291627742350101470947 with intpart 0 and fract 0.37020136551234451849357043329291627742350101470947
trying to retrieve digits 
will count the digit from 757897654678648654371986726455632256
with string of it 757897654678648654371986726455632256
digits retrieved 18
                     with combination da_rst 870573175947116265.37020136551234450461578262547846 sq of rst 757897654678648654371986726455632256
                     with intpart 757897654678648654371986726455632256 and other part 0
                     the int string is 0.370201

     ----> using 0.37020136551234451849357043329291627742350101470947 rst is 0.18510068275617225924678521664645813871175050735474
     ----> using 0.18510068275617225924678521664645813871175050735474 with intpart 0 and fract 0.18510068275617225924678521664645813871175050735474
trying to retrieve digits 
will count the digit from 757897654678648654049699347941591296
with string of it 757897654678648654049699347941591296
digits retrieved 18
                     with combination da_rst 870573175947116265.18510068275617230781904254399706 sq of rst 757897654678648654049699347941591296
                     with intpart 757897654678648654049699347941591296 and other part 0
                     the int string is 0.185101

     ----> using 0.18510068275617225924678521664645813871175050735474 rst is 0.092550341378086129623392608323229069355875253677368
     ----> using 0.092550341378086129623392608323229069355875253677368 with intpart 0 and fract 0.092550341378086129623392608323229069355875253677368
trying to retrieve digits 
will count the digit from 757897654678648653888555658684570752
with string of it 757897654678648653888555658684570752
digits retrieved 17
                     with combination da_rst 870573175947116265.09255034137808615390952127199853 sq of rst 757897654678648653888555658684570752
                     with intpart 757897654678648653888555658684570752 and other part 0
                     the int string is 0.092550

from new int t  of 2 ---> 1 with 1.9616109240987561479485634663433302193880081176758
     ----> using 1.9616109240987561479485634663433302193880081176758 rst is 0.98080546204937807397428173317166510969400405883789
     ----> using 0.98080546204937807397428173317166510969400405883789 with intpart 0 and fract 0.98080546204937807397428173317166510969400405883789
trying to retrieve digits 
will count the digit from 757897654678648655435137821592761856
with string of it 757897654678648655435137821592761856
digits retrieved 17
                     with combination da_rst 870573175947116265.98080546204937801846313050191384 sq of rst 757897654678648655435137821592761856
                     with intpart 757897654678648655435137821592761856 and other part 0
                     the int string is 0.980805

     ----> using 0.98080546204937807397428173317166510969400405883789 rst is 0.49040273102468903698714086658583255484700202941895
     ----> using 0.49040273102468903698714086658583255484700202941895 with intpart 0 and fract 0.49040273102468903698714086658583255484700202941895
trying to retrieve digits 
will count the digit from 757897654678648654581274895510156032
with string of it 757897654678648654581274895510156032
digits retrieved 19
                     with combination da_rst 870573175947116265.49040273102468900923156525095692 sq of rst 757897654678648654581274895510156032
                     with intpart 757897654678648654581274895510156032 and other part 0
                     the int string is 0.490403

     ----> using 0.49040273102468903698714086658583255484700202941895 rst is 0.24520136551234451849357043329291627742350101470947
     ----> using 0.24520136551234451849357043329291627742350101470947 with intpart 0 and fract 0.24520136551234451849357043329291627742350101470947
trying to retrieve digits 
will count the digit from 757897654678648654154343432468853120
with string of it 757897654678648654154343432468853120
digits retrieved 18
                     with combination da_rst 870573175947116265.24520136551234450461578262547846 sq of rst 757897654678648654154343432468853120
                     with intpart 757897654678648654154343432468853120 and other part 0
                     the int string is 0.245201

     ----> using 0.24520136551234451849357043329291627742350101470947 rst is 0.12260068275617225924678521664645813871175050735474
     ----> using 0.12260068275617225924678521664645813871175050735474 with intpart 0 and fract 0.12260068275617225924678521664645813871175050735474
trying to retrieve digits 
will count the digit from 757897654678648653940877700948201728
with string of it 757897654678648653940877700948201728
digits retrieved 17
                     with combination da_rst 870573175947116265.12260068275617230781904254399706 sq of rst 757897654678648653940877700948201728
                     with intpart 757897654678648653940877700948201728 and other part 0
                     the int string is 0.122601

     ----> using 0.12260068275617225924678521664645813871175050735474 rst is 0.061300341378086129623392608323229069355875253677368
     ----> using 0.061300341378086129623392608323229069355875253677368 with intpart 0 and fract 0.061300341378086129623392608323229069355875253677368
trying to retrieve digits 
will count the digit from 757897654678648653834144835187875968
with string of it 757897654678648653834144835187875968
digits retrieved 17
                     with combination da_rst 870573175947116265.06130034137808615390952127199853 sq of rst 757897654678648653834144835187875968
                     with intpart 757897654678648653834144835187875968 and other part 0
                     the int string is 0.061300

from new int t  of 1 ---> 0 with 0.96161092409875614794856346634333021938800811767578
     ----> using 0.96161092409875614794856346634333021938800811767578 rst is 0.48080546204937807397428173317166510969400405883789
     ----> using 0.48080546204937807397428173317166510969400405883789 with intpart 0 and fract 0.48080546204937807397428173317166510969400405883789
trying to retrieve digits 
will count the digit from 757897654678648654564564645645645568
with string of it 757897654678648654564564645645645568
digits retrieved 33
                     with combination da_rst 870573175947116265.48080546204937801846313050191384 sq of rst 757897654678648654564564645645645568
                     with intpart 757897654678648654564564645645645568 and other part 0
                     the int string is 0.480805

     ----> using 0.48080546204937807397428173317166510969400405883789 rst is 0.24040273102468903698714086658583255484700202941895
     ----> using 0.24040273102468903698714086658583255484700202941895 with intpart 0 and fract 0.24040273102468903698714086658583255484700202941895
trying to retrieve digits 
will count the digit from 757897654678648654145988307536597888
with string of it 757897654678648654145988307536597888
digits retrieved 18
                     with combination da_rst 870573175947116265.24040273102468900923156525095692 sq of rst 757897654678648654145988307536597888
                     with intpart 757897654678648654145988307536597888 and other part 0
                     the int string is 0.240403

     ----> using 0.24040273102468903698714086658583255484700202941895 rst is 0.12020136551234451849357043329291627742350101470947
     ----> using 0.12020136551234451849357043329291627742350101470947 with intpart 0 and fract 0.12020136551234451849357043329291627742350101470947
trying to retrieve digits 
will count the digit from 757897654678648653936700138482074112
with string of it 757897654678648653936700138482074112
digits retrieved 17
                     with combination da_rst 870573175947116265.12020136551234450461578262547846 sq of rst 757897654678648653936700138482074112
                     with intpart 757897654678648653936700138482074112 and other part 0
                     the int string is 0.120201

     ----> using 0.12020136551234451849357043329291627742350101470947 rst is 0.060100682756172259246785216646458138711750507354736
     ----> using 0.060100682756172259246785216646458138711750507354736 with intpart 0 and fract 0.060100682756172259246785216646458138711750507354736
trying to retrieve digits 
will count the digit from 757897654678648653832056053954812288
with string of it 757897654678648653832056053954812288
digits retrieved 17
                     with combination da_rst 870573175947116265.06010068275617230781904254399706 sq of rst 757897654678648653832056053954812288
                     with intpart 757897654678648653832056053954812288 and other part 0
                     the int string is 0.060101

--------------------------------------
psifia 17 PWR 870573175947116265.98080546204937801846313050191384 
 ------------> RESULT 757897654678648655435137821592761856
 ------------> DIAFORA 7649354313069993707119216017387904
 ------------> DIAIRESI main/result 1.0101957636016537992864596099564996228983179001446
--------------------------------------

-------------------Calculation Bee--------------------------------
first number second number is the qube one dimension and third the precision 
will count the digit from 757897654678648654564564645645645696
with string of it 757897654678648654564564645645645696
Main Number 757897654678648654564564645645645696 has number of digits 36
Using Power of 870573175947116266

first 757897654678648654564564645645645696 
     doted 0
     makes 757897654678648654564564645645645696

second 870573175947116266 
     doted 0 
     makes 870573175947116266

result 870573175947116264 
     doted 0.96161092409875614794856346634333021938800811767578 
     makes 870573175947116264.96161092409875614794856346634333


for the integer string 870573175947116264.000000
the numbers are 18
the retrievable integer digit is 4

entering with number of 4.9616109240987561479485634663433302193880081176758
recheck values of 870573175947116266 and result of 757897654678648655468558321321782784 with intpart 757897654678648655468558321321782784

recheck power 870573175947116266 of result 757897654678648655468558321321782784
lowering second to value of 870573175947116266

     ----> using 4.9616109240987561479485634663433302193880081176758 rst is 2.4808054620493780739742817331716651096940040588379
     ----> using 2.4808054620493780739742817331716651096940040588379 with intpart 2 and fract 0.48080546204937807397428173317166510969400405883789
trying to retrieve digits 
will count the digit from 757897654678648654564564645645645568
with string of it 757897654678648654564564645645645568
digits retrieved 33
                     with combination da_rst 870573175947116265.48080546204937801846313050191384 sq of rst 757897654678648654564564645645645568
                     with intpart 757897654678648654564564645645645568 and other part 0
                     the int string is 2.480805

     ----> using 2.4808054620493780739742817331716651096940040588379 rst is 1.2404027310246890369871408665858325548470020294189
     ----> using 1.2404027310246890369871408665858325548470020294189 with intpart 1 and fract 0.24040273102468903698714086658583255484700202941895
trying to retrieve digits 
will count the digit from 757897654678648654145988307536597888
with string of it 757897654678648654145988307536597888
digits retrieved 18
                     with combination da_rst 870573175947116265.24040273102468900923156525095692 sq of rst 757897654678648654145988307536597888
                     with intpart 757897654678648654145988307536597888 and other part 0
                     the int string is 1.240403

     ----> using 1.2404027310246890369871408665858325548470020294189 rst is 0.62020136551234451849357043329291627742350101470947
     ----> using 0.62020136551234451849357043329291627742350101470947 with intpart 0 and fract 0.62020136551234451849357043329291627742350101470947
trying to retrieve digits 
will count the digit from 757897654678648654807273314429190400
with string of it 757897654678648654807273314429190400
digits retrieved 18
                     with combination da_rst 870573175947116265.62020136551234450461578262547846 sq of rst 757897654678648654807273314429190400
                     with intpart 757897654678648654807273314429190400 and other part 0
                     the int string is 0.620201

     ----> using 0.62020136551234451849357043329291627742350101470947 rst is 0.31010068275617225924678521664645813871175050735474
     ----> using 0.31010068275617225924678521664645813871175050735474 with intpart 0 and fract 0.31010068275617225924678521664645813871175050735474
trying to retrieve digits 
will count the digit from 757897654678648654267342641928370432
with string of it 757897654678648654267342641928370432
digits retrieved 18
                     with combination da_rst 870573175947116265.31010068275617230781904254399706 sq of rst 757897654678648654267342641928370432
                     with intpart 757897654678648654267342641928370432 and other part 0
                     the int string is 0.310101

     ----> using 0.31010068275617225924678521664645813871175050735474 rst is 0.15505034137808612962339260832322906935587525367737
     ----> using 0.15505034137808612962339260832322906935587525367737 with intpart 0 and fract 0.15505034137808612962339260832322906935587525367737
trying to retrieve digits 
will count the digit from 757897654678648653997377305677960320
with string of it 757897654678648653997377305677960320
digits retrieved 17
                     with combination da_rst 870573175947116265.15505034137808615390952127199853 sq of rst 757897654678648653997377305677960320
                     with intpart 757897654678648653997377305677960320 and other part 0
                     the int string is 0.155050

     ----> using 0.15505034137808612962339260832322906935587525367737 rst is 0.077525170689043064811696304161614534677937626838684
     ----> using 0.077525170689043064811696304161614534677937626838684 with intpart 0 and fract 0.077525170689043064811696304161614534677937626838684
trying to retrieve digits 
will count the digit from 757897654678648653862394637552755200
with string of it 757897654678648653862394637552755200
digits retrieved 17
                     with combination da_rst 870573175947116265.07752517068904307695476063599926 sq of rst 757897654678648653862394637552755200
                     with intpart 757897654678648653862394637552755200 and other part 0
                     the int string is 0.077525

from new int t  of 4 ---> 3 with 3.9616109240987561479485634663433302193880081176758
     ----> using 3.9616109240987561479485634663433302193880081176758 rst is 1.9808054620493780739742817331716651096940040588379
     ----> using 1.9808054620493780739742817331716651096940040588379 with intpart 1 and fract 0.98080546204937807397428173317166510969400405883789
trying to retrieve digits 
will count the digit from 757897654678648655435137821592761856
with string of it 757897654678648655435137821592761856
digits retrieved 17
                     with combination da_rst 870573175947116265.98080546204937801846313050191384 sq of rst 757897654678648655435137821592761856
                     with intpart 757897654678648655435137821592761856 and other part 0
                     the int string is 1.980805

     ----> using 1.9808054620493780739742817331716651096940040588379 rst is 0.99040273102468903698714086658583255484700202941895
     ----> using 0.99040273102468903698714086658583255484700202941895 with intpart 0 and fract 0.99040273102468903698714086658583255484700202941895
trying to retrieve digits 
will count the digit from 757897654678648655451848071457272320
with string of it 757897654678648655451848071457272320
digits retrieved 17
                     with combination da_rst 870573175947116265.99040273102468900923156525095692 sq of rst 757897654678648655451848071457272320
                     with intpart 757897654678648655451848071457272320 and other part 0
                     the int string is 0.990403

     ----> using 0.99040273102468903698714086658583255484700202941895 rst is 0.49520136551234451849357043329291627742350101470947
     ----> using 0.49520136551234451849357043329291627742350101470947 with intpart 0 and fract 0.49520136551234451849357043329291627742350101470947
trying to retrieve digits 
will count the digit from 757897654678648654589630020442411264
with string of it 757897654678648654589630020442411264
digits retrieved 19
                     with combination da_rst 870573175947116265.49520136551234450461578262547846 sq of rst 757897654678648654589630020442411264
                     with intpart 757897654678648654589630020442411264 and other part 0
                     the int string is 0.495201

     ----> using 0.49520136551234451849357043329291627742350101470947 rst is 0.24760068275617225924678521664645813871175050735474
     ----> using 0.24760068275617225924678521664645813871175050735474 with intpart 0 and fract 0.24760068275617225924678521664645813871175050735474
trying to retrieve digits 
will count the digit from 757897654678648654158520994934980864
with string of it 757897654678648654158520994934980864
digits retrieved 18
                     with combination da_rst 870573175947116265.24760068275617230781904254399706 sq of rst 757897654678648654158520994934980864
                     with intpart 757897654678648654158520994934980864 and other part 0
                     the int string is 0.247601

     ----> using 0.24760068275617225924678521664645813871175050735474 rst is 0.12380034137808612962339260832322906935587525367737
     ----> using 0.12380034137808612962339260832322906935587525367737 with intpart 0 and fract 0.12380034137808612962339260832322906935587525367737
trying to retrieve digits 
will count the digit from 757897654678648653942966482181265536
with string of it 757897654678648653942966482181265536
digits retrieved 17
                     with combination da_rst 870573175947116265.12380034137808615390952127199853 sq of rst 757897654678648653942966482181265536
                     with intpart 757897654678648653942966482181265536 and other part 0
                     the int string is 0.123800

     ----> using 0.12380034137808612962339260832322906935587525367737 rst is 0.061900170689043064811696304161614534677937626838684
     ----> using 0.061900170689043064811696304161614534677937626838684 with intpart 0 and fract 0.061900170689043064811696304161614534677937626838684
trying to retrieve digits 
will count the digit from 757897654678648653835189225804407936
with string of it 757897654678648653835189225804407936
digits retrieved 17
                     with combination da_rst 870573175947116265.06190017068904307695476063599926 sq of rst 757897654678648653835189225804407936
                     with intpart 757897654678648653835189225804407936 and other part 0
                     the int string is 0.061900

from new int t  of 3 ---> 2 with 2.9616109240987561479485634663433302193880081176758
     ----> using 2.9616109240987561479485634663433302193880081176758 rst is 1.4808054620493780739742817331716651096940040588379
     ----> using 1.4808054620493780739742817331716651096940040588379 with intpart 1 and fract 0.48080546204937807397428173317166510969400405883789
trying to retrieve digits 
will count the digit from 757897654678648654564564645645645568
with string of it 757897654678648654564564645645645568
digits retrieved 33
                     with combination da_rst 870573175947116265.48080546204937801846313050191384 sq of rst 757897654678648654564564645645645568
                     with intpart 757897654678648654564564645645645568 and other part 0
                     the int string is 1.480805

     ----> using 1.4808054620493780739742817331716651096940040588379 rst is 0.74040273102468903698714086658583255484700202941895
     ----> using 0.74040273102468903698714086658583255484700202941895 with intpart 0 and fract 0.74040273102468903698714086658583255484700202941895
trying to retrieve digits 
will count the digit from 757897654678648655016561483483714176
with string of it 757897654678648655016561483483714176
digits retrieved 17
                     with combination da_rst 870573175947116265.74040273102468900923156525095692 sq of rst 757897654678648655016561483483714176
                     with intpart 757897654678648655016561483483714176 and other part 0
                     the int string is 0.740403

     ----> using 0.74040273102468903698714086658583255484700202941895 rst is 0.37020136551234451849357043329291627742350101470947
     ----> using 0.37020136551234451849357043329291627742350101470947 with intpart 0 and fract 0.37020136551234451849357043329291627742350101470947
trying to retrieve digits 
will count the digit from 757897654678648654371986726455632256
with string of it 757897654678648654371986726455632256
digits retrieved 18
                     with combination da_rst 870573175947116265.37020136551234450461578262547846 sq of rst 757897654678648654371986726455632256
                     with intpart 757897654678648654371986726455632256 and other part 0
                     the int string is 0.370201

     ----> using 0.37020136551234451849357043329291627742350101470947 rst is 0.18510068275617225924678521664645813871175050735474
     ----> using 0.18510068275617225924678521664645813871175050735474 with intpart 0 and fract 0.18510068275617225924678521664645813871175050735474
trying to retrieve digits 
will count the digit from 757897654678648654049699347941591296
with string of it 757897654678648654049699347941591296
digits retrieved 18
                     with combination da_rst 870573175947116265.18510068275617230781904254399706 sq of rst 757897654678648654049699347941591296
                     with intpart 757897654678648654049699347941591296 and other part 0
                     the int string is 0.185101

     ----> using 0.18510068275617225924678521664645813871175050735474 rst is 0.092550341378086129623392608323229069355875253677368
     ----> using 0.092550341378086129623392608323229069355875253677368 with intpart 0 and fract 0.092550341378086129623392608323229069355875253677368
trying to retrieve digits 
will count the digit from 757897654678648653888555658684570752
with string of it 757897654678648653888555658684570752
digits retrieved 17
                     with combination da_rst 870573175947116265.09255034137808615390952127199853 sq of rst 757897654678648653888555658684570752
                     with intpart 757897654678648653888555658684570752 and other part 0
                     the int string is 0.092550

from new int t  of 2 ---> 1 with 1.9616109240987561479485634663433302193880081176758
     ----> using 1.9616109240987561479485634663433302193880081176758 rst is 0.98080546204937807397428173317166510969400405883789
     ----> using 0.98080546204937807397428173317166510969400405883789 with intpart 0 and fract 0.98080546204937807397428173317166510969400405883789
trying to retrieve digits 
will count the digit from 757897654678648655435137821592761856
with string of it 757897654678648655435137821592761856
digits retrieved 17
                     with combination da_rst 870573175947116265.98080546204937801846313050191384 sq of rst 757897654678648655435137821592761856
                     with intpart 757897654678648655435137821592761856 and other part 0
                     the int string is 0.980805

     ----> using 0.98080546204937807397428173317166510969400405883789 rst is 0.49040273102468903698714086658583255484700202941895
     ----> using 0.49040273102468903698714086658583255484700202941895 with intpart 0 and fract 0.49040273102468903698714086658583255484700202941895
trying to retrieve digits 
will count the digit from 757897654678648654581274895510156032
with string of it 757897654678648654581274895510156032
digits retrieved 19
                     with combination da_rst 870573175947116265.49040273102468900923156525095692 sq of rst 757897654678648654581274895510156032
                     with intpart 757897654678648654581274895510156032 and other part 0
                     the int string is 0.490403

     ----> using 0.49040273102468903698714086658583255484700202941895 rst is 0.24520136551234451849357043329291627742350101470947
     ----> using 0.24520136551234451849357043329291627742350101470947 with intpart 0 and fract 0.24520136551234451849357043329291627742350101470947
trying to retrieve digits 
will count the digit from 757897654678648654154343432468853120
with string of it 757897654678648654154343432468853120
digits retrieved 18
                     with combination da_rst 870573175947116265.24520136551234450461578262547846 sq of rst 757897654678648654154343432468853120
                     with intpart 757897654678648654154343432468853120 and other part 0
                     the int string is 0.245201

     ----> using 0.24520136551234451849357043329291627742350101470947 rst is 0.12260068275617225924678521664645813871175050735474
     ----> using 0.12260068275617225924678521664645813871175050735474 with intpart 0 and fract 0.12260068275617225924678521664645813871175050735474
trying to retrieve digits 
will count the digit from 757897654678648653940877700948201728
with string of it 757897654678648653940877700948201728
digits retrieved 17
                     with combination da_rst 870573175947116265.12260068275617230781904254399706 sq of rst 757897654678648653940877700948201728
                     with intpart 757897654678648653940877700948201728 and other part 0
                     the int string is 0.122601

     ----> using 0.12260068275617225924678521664645813871175050735474 rst is 0.061300341378086129623392608323229069355875253677368
     ----> using 0.061300341378086129623392608323229069355875253677368 with intpart 0 and fract 0.061300341378086129623392608323229069355875253677368
trying to retrieve digits 
will count the digit from 757897654678648653834144835187875968
with string of it 757897654678648653834144835187875968
digits retrieved 17
                     with combination da_rst 870573175947116265.06130034137808615390952127199853 sq of rst 757897654678648653834144835187875968
                     with intpart 757897654678648653834144835187875968 and other part 0
                     the int string is 0.061300

from new int t  of 1 ---> 0 with 0.96161092409875614794856346634333021938800811767578
     ----> using 0.96161092409875614794856346634333021938800811767578 rst is 0.48080546204937807397428173317166510969400405883789
     ----> using 0.48080546204937807397428173317166510969400405883789 with intpart 0 and fract 0.48080546204937807397428173317166510969400405883789
trying to retrieve digits 
will count the digit from 757897654678648654564564645645645568
with string of it 757897654678648654564564645645645568
digits retrieved 33
                     with combination da_rst 870573175947116265.48080546204937801846313050191384 sq of rst 757897654678648654564564645645645568
                     with intpart 757897654678648654564564645645645568 and other part 0
                     the int string is 0.480805

     ----> using 0.48080546204937807397428173317166510969400405883789 rst is 0.24040273102468903698714086658583255484700202941895
     ----> using 0.24040273102468903698714086658583255484700202941895 with intpart 0 and fract 0.24040273102468903698714086658583255484700202941895
trying to retrieve digits 
will count the digit from 757897654678648654145988307536597888
with string of it 757897654678648654145988307536597888
digits retrieved 18
                     with combination da_rst 870573175947116265.24040273102468900923156525095692 sq of rst 757897654678648654145988307536597888
                     with intpart 757897654678648654145988307536597888 and other part 0
                     the int string is 0.240403

     ----> using 0.24040273102468903698714086658583255484700202941895 rst is 0.12020136551234451849357043329291627742350101470947
     ----> using 0.12020136551234451849357043329291627742350101470947 with intpart 0 and fract 0.12020136551234451849357043329291627742350101470947
trying to retrieve digits 
will count the digit from 757897654678648653936700138482074112
with string of it 757897654678648653936700138482074112
digits retrieved 17
                     with combination da_rst 870573175947116265.12020136551234450461578262547846 sq of rst 757897654678648653936700138482074112
                     with intpart 757897654678648653936700138482074112 and other part 0
                     the int string is 0.120201

     ----> using 0.12020136551234451849357043329291627742350101470947 rst is 0.060100682756172259246785216646458138711750507354736
     ----> using 0.060100682756172259246785216646458138711750507354736 with intpart 0 and fract 0.060100682756172259246785216646458138711750507354736
trying to retrieve digits 
will count the digit from 757897654678648653832056053954812288
with string of it 757897654678648653832056053954812288
digits retrieved 17
                     with combination da_rst 870573175947116265.06010068275617230781904254399706 sq of rst 757897654678648653832056053954812288
                     with intpart 757897654678648653832056053954812288 and other part 0
                     the int string is 0.060101

--------------------------------------
psifia 33 PWR 870573175947116265.48080546204937801846313050191384 
 ------------> RESULT 757897654678648654564564645645645568
 ------------> DIAFORA 7649354313069993707119216017387904
 ------------> DIAIRESI main/result 1.0101957636016537992864596099564996228983179001446
psifia 18 PWR 870573175947116265.24040273102468900923156525095692 
 ------------> RESULT 757897654678648654145988307536597888
 ------------> DIAFORA 870573175947116160
 ------------> DIAIRESI main/result 0.99999999999999999885133148179981857261456338218752
psifia 17 PWR 870573175947116265.15505034137808615390952127199853 
 ------------> RESULT 757897654678648653997377305677960320
 ------------> DIAFORA 128
 ------------> DIAIRESI main/result 1.0000000000000000000000000000000001925929944387236
--------------------------------------
